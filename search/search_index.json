{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>I'm Sandy</p> <p>I'm a Software Engineer based in sunny Scotland.</p> <p>Over the past 21 years, I've worked in various areas of software development, including UNIX systems development, data warehousing, data security and IoT.</p> <p>I've worked on and led projects across multipe sectors including immigration and law enforcement in countries like the United Kingdom, United States, and United Arab Emirates.</p>"},{"location":"mindmap/","title":"Mindmap","text":"<pre><code>mindmap\n  root((\u8d1d\u62c9 Bella))\n    (\u611f\u77e5\u5c42 Perception)\n      (\u8bed\u97f3\u8bc6\u522b ASR)\n      (\u89c6\u89c9\u5904\u7406 Vision)\n      (\u60c5\u611f\u5206\u6790 Emotion)\n    (\u6838\u5fc3\u5f15\u64ce Core)\n      (\u601d\u8003\u5f15\u64ce LLM)\n      (\u8bb0\u5fc6\u7cfb\u7edf Memory)\n      (\u60c5\u611f\u72b6\u6001 Emotion State)\n    (\u8868\u73b0\u5c42 Expression)\n      (\u8bed\u97f3\u5408\u6210 TTS)\n      (\u89c6\u89c9\u8868\u73b0 Visual)\n      (\u4ea4\u4e92\u754c\u9762 UI)</code></pre>"},{"location":"cupra/javadoc/","title":"API","text":""},{"location":"cupra/javadoc/#packages","title":"Packages","text":"Package Description io.github.sandydunlop.cupra.platform io.github.sandydunlop.cupra.platform.desktop io.github.sandydunlop.cupra.common io.github.sandydunlop.cupra.common.util io.github.sandydunlop.cupra.common.input io.github.sandydunlop.cupra.common.render io.github.sandydunlop.cupra.common.events io.github.sandydunlop.cupra.common.fonts io.github.sandydunlop.cupra.common.logging io.github.sandydunlop.cupra.common.widgets io.github.sandydunlop.cupra.common.palette"},{"location":"cupra/javadoc/constant-values/","title":"Constant Field Values","text":"Modifier and Type Constant Field Value int PRIMARY_BUTTON 1 int SECONDARY_BUTTON 2 int TERTIARY_BUTTON 3 int SHIFT_PRESSED_MASK 64 int CONTROL_PRESSED_MASK 128 int COMMAND_PRESSED_MASK 256 int ALT_PRESSED_MASK 512 int KEY_ESCAPE 27 int KEY_LEFT 37 int KEY_UP 38 int KEY_RIGHT 39 int KEY_DOWN 40 int KEY_BACKSPACE 8 int KEY_ENTER 10 int KEY_A 65 int KEY_C 67 int KEY_V 86 int KEY_X 88 int KEY_Z 90 int CONTROL_PRESSED_MASK 128 int SHIFT_PRESSED_MASK 64 int COMMAND_PRESSED_MASK 256 int ALT_PRESSED_MASK 512 int TEXT_PADDING 2 int DEFAULT_THICKNESS 8"},{"location":"cupra/javadoc/common/","title":"Package io.github.sandydunlop.cupra.common","text":"Classes Class Description CupraApp CupraException CupraScreen"},{"location":"cupra/javadoc/common/CupraApp/","title":"CupraApp","text":"<p>Package io.github.sandydunlop.cupra.common</p>"},{"location":"cupra/javadoc/common/CupraApp/#class-cupraapp","title":"Class CupraApp","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.CupraApp </p>"},{"location":"cupra/javadoc/common/CupraApp/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CupraApp()"},{"location":"cupra/javadoc/common/CupraApp/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract String getName() void setX(int x) void setY(int y) void setWidth(int width) void setHeight(int height) CupraScreen getScreen() void setScreen(CupraScreen screen) void openScreen(CupraScreen screen) void openScreen(CupraScreen parentScreen, CupraScreen screen) void onShow() abstract void run() static void main(String[] args)"},{"location":"cupra/javadoc/common/CupraApp/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/CupraApp/#getname","title":"getName","text":"<p>abstract String getName()</p>"},{"location":"cupra/javadoc/common/CupraApp/#setx","title":"setX","text":"<p>void setX(int x)</p>"},{"location":"cupra/javadoc/common/CupraApp/#sety","title":"setY","text":"<p>void setY(int y)</p>"},{"location":"cupra/javadoc/common/CupraApp/#setwidth","title":"setWidth","text":"<p>void setWidth(int width)</p>"},{"location":"cupra/javadoc/common/CupraApp/#setheight","title":"setHeight","text":"<p>void setHeight(int height)</p>"},{"location":"cupra/javadoc/common/CupraApp/#getscreen","title":"getScreen","text":"<p>CupraScreen getScreen()</p>"},{"location":"cupra/javadoc/common/CupraApp/#setscreen","title":"setScreen","text":"<p>void setScreen(CupraScreen screen)</p>"},{"location":"cupra/javadoc/common/CupraApp/#openscreen","title":"openScreen","text":"<p>void openScreen(CupraScreen screen)</p>"},{"location":"cupra/javadoc/common/CupraApp/#openscreen_1","title":"openScreen","text":"<p>void openScreen(CupraScreen parentScreen, CupraScreen screen)</p>"},{"location":"cupra/javadoc/common/CupraApp/#onshow","title":"onShow","text":"<p>void onShow()</p>"},{"location":"cupra/javadoc/common/CupraApp/#run","title":"run","text":"<p>abstract void run()</p>"},{"location":"cupra/javadoc/common/CupraApp/#main","title":"main","text":"<p>static void main(String[] args)</p>"},{"location":"cupra/javadoc/common/CupraException/","title":"CupraException","text":"<p>Package io.github.sandydunlop.cupra.common</p>"},{"location":"cupra/javadoc/common/CupraException/#class-cupraexception","title":"Class CupraException","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Throwable \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Exception \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.CupraException </p>"},{"location":"cupra/javadoc/common/CupraException/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CupraException(String message)"},{"location":"cupra/javadoc/common/CupraException/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getMessage()"},{"location":"cupra/javadoc/common/CupraException/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/CupraException/#getmessage","title":"getMessage","text":"<p>String getMessage()</p>"},{"location":"cupra/javadoc/common/CupraScreen/","title":"CupraScreen","text":"<p>Package io.github.sandydunlop.cupra.common</p>"},{"location":"cupra/javadoc/common/CupraScreen/#class-cuprascreen","title":"Class CupraScreen","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CContainer \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.CupraScreen </p>"},{"location":"cupra/javadoc/common/CupraScreen/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected CWidget overlaidWidget protected CWidget overlaidParent"},{"location":"cupra/javadoc/common/CupraScreen/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CupraScreen()"},{"location":"cupra/javadoc/common/CupraScreen/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description protected void suggestSize(int width, int height) int getSuggestedWidth() int getSuggestedHeight() void setTitle(String title) String getTitle() void setApp(CupraApp app) CupraApp getApp() void setParentScreen(CupraScreen parentScreen) CupraScreen getParentScreen() void display() static FontSpec defaultFontOptions() boolean isInitialized() void recalculate() boolean hasCompletedMain() void setHasCompletedMain(boolean hasCompletedMain) void init() void close() void charTyped(CKeyEvent k) void keyPressed(CKeyEvent k) void onCharTyped(CKeyEvent e) void onKeyPressed(CKeyEvent k) void setFocus(CWidget widget) CWidget getFocus() void setOverlaid(CWidget widget, CWidget parent) CWidget getOverlaid() void hideOverlaidWidget() boolean isMouseOverOverlaid(CMouseEvent mouse) CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) void onShow() void onClose() void render(BaseRenderer renderer, CMouseEvent mouse)"},{"location":"cupra/javadoc/common/CupraScreen/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/CupraScreen/#overlaidwidget","title":"overlaidWidget","text":""},{"location":"cupra/javadoc/common/CupraScreen/#overlaidparent","title":"overlaidParent","text":""},{"location":"cupra/javadoc/common/CupraScreen/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/CupraScreen/#suggestsize","title":"suggestSize","text":"<p>protected void suggestSize(int width, int height)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#getsuggestedwidth","title":"getSuggestedWidth","text":"<p>int getSuggestedWidth()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#getsuggestedheight","title":"getSuggestedHeight","text":"<p>int getSuggestedHeight()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#settitle","title":"setTitle","text":"<p>void setTitle(String title)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#gettitle","title":"getTitle","text":"<p>String getTitle()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#setapp","title":"setApp","text":"<p>void setApp(CupraApp app)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#getapp","title":"getApp","text":"<p>CupraApp getApp()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#setparentscreen","title":"setParentScreen","text":"<p>void setParentScreen(CupraScreen parentScreen)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#getparentscreen","title":"getParentScreen","text":"<p>CupraScreen getParentScreen()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#display","title":"display","text":"<p>void display()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#defaultfontoptions","title":"defaultFontOptions","text":"<p>static FontSpec defaultFontOptions()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#isinitialized","title":"isInitialized","text":"<p>boolean isInitialized()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#recalculate","title":"recalculate","text":"<p>void recalculate()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#hascompletedmain","title":"hasCompletedMain","text":"<p>boolean hasCompletedMain()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#sethascompletedmain","title":"setHasCompletedMain","text":"<p>void setHasCompletedMain(boolean hasCompletedMain)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#init","title":"init","text":"<p>void init()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#close","title":"close","text":"<p>void close()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#chartyped","title":"charTyped","text":"<p>void charTyped(CKeyEvent k)</p> <p>Overrides:</p> <p>charTyped from CWidget</p>"},{"location":"cupra/javadoc/common/CupraScreen/#keypressed","title":"keyPressed","text":"<p>void keyPressed(CKeyEvent k)</p> <p>Overrides:</p> <p>keyPressed from CWidget</p>"},{"location":"cupra/javadoc/common/CupraScreen/#onchartyped","title":"onCharTyped","text":"<p>void onCharTyped(CKeyEvent e)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#onkeypressed","title":"onKeyPressed","text":"<p>void onKeyPressed(CKeyEvent k)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#setfocus","title":"setFocus","text":"<p>void setFocus(CWidget widget)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#getfocus","title":"getFocus","text":"<p>CWidget getFocus()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#setoverlaid","title":"setOverlaid","text":"<p>void setOverlaid(CWidget widget, CWidget parent)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#getoverlaid","title":"getOverlaid","text":"<p>CWidget getOverlaid()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#hideoverlaidwidget","title":"hideOverlaidWidget","text":"<p>void hideOverlaidWidget()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#ismouseoveroverlaid","title":"isMouseOverOverlaid","text":"<p>boolean isMouseOverOverlaid(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/CupraScreen/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CContainer</p>"},{"location":"cupra/javadoc/common/CupraScreen/#onshow","title":"onShow","text":"<p>void onShow()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#onclose","title":"onClose","text":"<p>void onClose()</p>"},{"location":"cupra/javadoc/common/CupraScreen/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CContainer</p>"},{"location":"cupra/javadoc/common/events/","title":"Package io.github.sandydunlop.cupra.common.events","text":"ClassesInterfaces Class Description CMouseEvent CKeyEvent CListBoxSelectionChangedEvent Class Description CListBoxSelectionChangedListener"},{"location":"cupra/javadoc/common/events/CKeyEvent/","title":"CKeyEvent","text":"<p>Package io.github.sandydunlop.cupra.common.events</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#class-ckeyevent","title":"Class CKeyEvent","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.events.CKeyEvent </p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description static final int KEY_ESCAPE static final int KEY_LEFT static final int KEY_UP static final int KEY_RIGHT static final int KEY_DOWN static final int KEY_BACKSPACE static final int KEY_ENTER static final int KEY_A static final int KEY_C static final int KEY_V static final int KEY_X static final int KEY_Z static final int CONTROL_PRESSED_MASK static final int SHIFT_PRESSED_MASK static final int COMMAND_PRESSED_MASK static final int ALT_PRESSED_MASK"},{"location":"cupra/javadoc/common/events/CKeyEvent/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CKeyEvent() CKeyEvent(int keyCode, int extendedKeyCode, int modifiers, int scanCode, char character)"},{"location":"cupra/javadoc/common/events/CKeyEvent/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description boolean isShiftPressed() boolean isControlPressed() boolean isCommandPressed() boolean isAltPressed() int getKeyCode() CKeyEvent setKeyCode(int keyCode) int getExtendedKeyCode() CKeyEvent setExtendedKeyCode(int extendedKeyCode) int getModifiers() CKeyEvent setModifiers(int modifiers) int getScanCode() CKeyEvent setScanCode(int scanCode) char getCharacter() CKeyEvent setCharacter(char character) boolean isActionKey()"},{"location":"cupra/javadoc/common/events/CKeyEvent/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_escape","title":"KEY_ESCAPE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_left","title":"KEY_LEFT","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_up","title":"KEY_UP","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_right","title":"KEY_RIGHT","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_down","title":"KEY_DOWN","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_backspace","title":"KEY_BACKSPACE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_enter","title":"KEY_ENTER","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_a","title":"KEY_A","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_c","title":"KEY_C","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_v","title":"KEY_V","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_x","title":"KEY_X","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#key_z","title":"KEY_Z","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#control_pressed_mask","title":"CONTROL_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#shift_pressed_mask","title":"SHIFT_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#command_pressed_mask","title":"COMMAND_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#alt_pressed_mask","title":"ALT_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/events/CKeyEvent/#isshiftpressed","title":"isShiftPressed","text":"<p>boolean isShiftPressed()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#iscontrolpressed","title":"isControlPressed","text":"<p>boolean isControlPressed()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#iscommandpressed","title":"isCommandPressed","text":"<p>boolean isCommandPressed()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#isaltpressed","title":"isAltPressed","text":"<p>boolean isAltPressed()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#getkeycode","title":"getKeyCode","text":"<p>int getKeyCode()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#setkeycode","title":"setKeyCode","text":"<p>CKeyEvent setKeyCode(int keyCode)</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#getextendedkeycode","title":"getExtendedKeyCode","text":"<p>int getExtendedKeyCode()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#setextendedkeycode","title":"setExtendedKeyCode","text":"<p>CKeyEvent setExtendedKeyCode(int extendedKeyCode)</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#getmodifiers","title":"getModifiers","text":"<p>int getModifiers()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#setmodifiers","title":"setModifiers","text":"<p>CKeyEvent setModifiers(int modifiers)</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#getscancode","title":"getScanCode","text":"<p>int getScanCode()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#setscancode","title":"setScanCode","text":"<p>CKeyEvent setScanCode(int scanCode)</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#getcharacter","title":"getCharacter","text":"<p>char getCharacter()</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#setcharacter","title":"setCharacter","text":"<p>CKeyEvent setCharacter(char character)</p>"},{"location":"cupra/javadoc/common/events/CKeyEvent/#isactionkey","title":"isActionKey","text":"<p>boolean isActionKey()</p>"},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedEvent/","title":"CListBoxSelectionChangedEvent","text":"<p>Package io.github.sandydunlop.cupra.common.events</p>"},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedEvent/#class-clistboxselectionchangedevent","title":"Class CListBoxSelectionChangedEvent","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.util.EventObject \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.events.CListBoxSelectionChangedEvent </p>"},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedEvent/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CListBoxSelectionChangedEvent(Object source)"},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedListener/","title":"CListBoxSelectionChangedListener","text":"<p>Package io.github.sandydunlop.cupra.common.events</p>"},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedListener/#interface-clistboxselectionchangedlistener","title":"Interface CListBoxSelectionChangedListener","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.events.CListBoxSelectionChangedListener  All Implemented Interfaces: \u00a0\u00a0\u00a0\u00a0EventListener</p>"},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedListener/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void selectionChanged(CListBoxSelectionChangedEvent event)"},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedListener/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/events/CListBoxSelectionChangedListener/#selectionchanged","title":"selectionChanged","text":"<p>abstract void selectionChanged(CListBoxSelectionChangedEvent event)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/","title":"CMouseEvent","text":"<p>Package io.github.sandydunlop.cupra.common.events</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#class-cmouseevent","title":"Class CMouseEvent","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.events.CMouseEvent </p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description static final int PRIMARY_BUTTON static final int SECONDARY_BUTTON static final int TERTIARY_BUTTON static final int SHIFT_PRESSED_MASK static final int CONTROL_PRESSED_MASK static final int COMMAND_PRESSED_MASK static final int ALT_PRESSED_MASK"},{"location":"cupra/javadoc/common/events/CMouseEvent/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CMouseEvent() CMouseEvent(double x, double y) CMouseEvent(double x, double y, int button)"},{"location":"cupra/javadoc/common/events/CMouseEvent/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description boolean isShiftPressed() boolean isControlPressed() boolean isCommandPressed() boolean isAltPressed() double getX() CMouseEvent setX(double x) double getY() CMouseEvent setY(double y) double getDeltaX() CMouseEvent setDeltaX(double deltaX) double getDeltaY() CMouseEvent setDeltaY(double deltaY) int getButton() CMouseEvent setButton(int button) int getClickCount() CMouseEvent setClickCount(int clickCount) int getModifiers() CMouseEvent setModifiers(int modifiers) double getHorizontalAmount() CMouseEvent setHorizontalAmount(double horizontalAmount) double getVerticalAmount() CMouseEvent setVerticalAmount(double verticalAmount) void setWidgetUnderMouse(CWidget widget) CWidget getWidgetUnderMouse()"},{"location":"cupra/javadoc/common/events/CMouseEvent/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/events/CMouseEvent/#primary_button","title":"PRIMARY_BUTTON","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#secondary_button","title":"SECONDARY_BUTTON","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#tertiary_button","title":"TERTIARY_BUTTON","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#shift_pressed_mask","title":"SHIFT_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#control_pressed_mask","title":"CONTROL_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#command_pressed_mask","title":"COMMAND_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#alt_pressed_mask","title":"ALT_PRESSED_MASK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/events/CMouseEvent/#isshiftpressed","title":"isShiftPressed","text":"<p>boolean isShiftPressed()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#iscontrolpressed","title":"isControlPressed","text":"<p>boolean isControlPressed()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#iscommandpressed","title":"isCommandPressed","text":"<p>boolean isCommandPressed()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#isaltpressed","title":"isAltPressed","text":"<p>boolean isAltPressed()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getx","title":"getX","text":"<p>double getX()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setx","title":"setX","text":"<p>CMouseEvent setX(double x)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#gety","title":"getY","text":"<p>double getY()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#sety","title":"setY","text":"<p>CMouseEvent setY(double y)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getdeltax","title":"getDeltaX","text":"<p>double getDeltaX()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setdeltax","title":"setDeltaX","text":"<p>CMouseEvent setDeltaX(double deltaX)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getdeltay","title":"getDeltaY","text":"<p>double getDeltaY()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setdeltay","title":"setDeltaY","text":"<p>CMouseEvent setDeltaY(double deltaY)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getbutton","title":"getButton","text":"<p>int getButton()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setbutton","title":"setButton","text":"<p>CMouseEvent setButton(int button)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getclickcount","title":"getClickCount","text":"<p>int getClickCount()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setclickcount","title":"setClickCount","text":"<p>CMouseEvent setClickCount(int clickCount)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getmodifiers","title":"getModifiers","text":"<p>int getModifiers()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setmodifiers","title":"setModifiers","text":"<p>CMouseEvent setModifiers(int modifiers)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#gethorizontalamount","title":"getHorizontalAmount","text":"<p>double getHorizontalAmount()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#sethorizontalamount","title":"setHorizontalAmount","text":"<p>CMouseEvent setHorizontalAmount(double horizontalAmount)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getverticalamount","title":"getVerticalAmount","text":"<p>double getVerticalAmount()</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setverticalamount","title":"setVerticalAmount","text":"<p>CMouseEvent setVerticalAmount(double verticalAmount)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#setwidgetundermouse","title":"setWidgetUnderMouse","text":"<p>void setWidgetUnderMouse(CWidget widget)</p>"},{"location":"cupra/javadoc/common/events/CMouseEvent/#getwidgetundermouse","title":"getWidgetUnderMouse","text":"<p>CWidget getWidgetUnderMouse()</p>"},{"location":"cupra/javadoc/common/fonts/","title":"Package io.github.sandydunlop.cupra.common.fonts","text":"Classes Class Description FontSpec BitmapFontFactory BitmapFont"},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/","title":"BitmapFont.Glyph","text":"<p>Package io.github.sandydunlop.cupra.common.fonts</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#class-bitmapfontglyph","title":"Class BitmapFont.Glyph","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.fonts.BitmapFont.Glyph  Enclosing Class: BitmapFont</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description char glyph int x int y int width"},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#constructor-summary","title":"Constructor Summary","text":"Constructor Description BitmapFont.Glyph(char glyph, int x, int y, int w)"},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#glyph","title":"glyph","text":""},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#x","title":"x","text":""},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#y","title":"y","text":""},{"location":"cupra/javadoc/common/fonts/BitmapFont.Glyph/#width","title":"width","text":""},{"location":"cupra/javadoc/common/fonts/BitmapFont/","title":"BitmapFont","text":"<p>Package io.github.sandydunlop.cupra.common.fonts</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#class-bitmapfont","title":"Class BitmapFont","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.fonts.BitmapFont </p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description static BitmapFont.Glyph"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#constructor-summary","title":"Constructor Summary","text":"Constructor Description BitmapFont(FontSpec spec, BufferedImage bitmap, Map&lt;Character, BitmapFont.Glyph&gt; glyphs, int height)"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description BufferedImage getImage() int getHeight() BitmapFont.Glyph getGlyph(char c) int getEmWidth() int getSpaceWidth() int characterAt(String s, int caretX) int stringWidth(String s) Dimension stringDimensions(String text) Dimension getStringDimensions(String text, int wrapAt) int getDisplayableCharCount(String text, int containerWidth) Dimension getStringDimensions(String text, int wrapAt, int startX)"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getimage","title":"getImage","text":"<p>BufferedImage getImage()</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getheight","title":"getHeight","text":"<p>int getHeight()</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getglyph","title":"getGlyph","text":"<p>BitmapFont.Glyph getGlyph(char c)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getemwidth","title":"getEmWidth","text":"<p>int getEmWidth()</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getspacewidth","title":"getSpaceWidth","text":"<p>int getSpaceWidth()</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#characterat","title":"characterAt","text":"<p>int characterAt(String s, int caretX)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#stringwidth","title":"stringWidth","text":"<p>int stringWidth(String s)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#stringdimensions","title":"stringDimensions","text":"<p>Dimension stringDimensions(String text)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getstringdimensions","title":"getStringDimensions","text":"<p>Dimension getStringDimensions(String text, int wrapAt)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getdisplayablecharcount","title":"getDisplayableCharCount","text":"<p>int getDisplayableCharCount(String text, int containerWidth)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFont/#getstringdimensions_1","title":"getStringDimensions","text":"<p>Dimension getStringDimensions(String text, int wrapAt, int startX)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFontFactory/","title":"BitmapFontFactory","text":"<p>Package io.github.sandydunlop.cupra.common.fonts</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFontFactory/#class-bitmapfontfactory","title":"Class BitmapFontFactory","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.fonts.BitmapFontFactory </p>"},{"location":"cupra/javadoc/common/fonts/BitmapFontFactory/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static BitmapFont load(FontSpec font) static BitmapFont load(FontSpec font, String glyphs)"},{"location":"cupra/javadoc/common/fonts/BitmapFontFactory/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/fonts/BitmapFontFactory/#load","title":"load","text":"<p>static BitmapFont load(FontSpec font)</p>"},{"location":"cupra/javadoc/common/fonts/BitmapFontFactory/#load_1","title":"load","text":"<p>static BitmapFont load(FontSpec font, String glyphs)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/","title":"FontSpec.UnderlineStyle","text":"<p>Package io.github.sandydunlop.cupra.common.fonts</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#enum-fontspecunderlinestyle","title":"Enum FontSpec.UnderlineStyle","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.cupra.common.fonts.FontSpec.UnderlineStyle&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.fonts.FontSpec.UnderlineStyle  Enclosing Class: FontSpec</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#enum-constants","title":"Enum Constants","text":"Enum Constant Description SOLID DOTTED"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static FontSpec.UnderlineStyle values() static FontSpec.UnderlineStyle valueOf(String name)"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#solid","title":"SOLID","text":"<p>public static final FontSpec.UnderlineStyle SOLID</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#dotted","title":"DOTTED","text":"<p>public static final FontSpec.UnderlineStyle DOTTED</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#values","title":"values","text":"<p>static FontSpec.UnderlineStyle values()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec.UnderlineStyle/#valueof","title":"valueOf","text":"<p>static FontSpec.UnderlineStyle valueOf(String name)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/","title":"FontSpec","text":"<p>Package io.github.sandydunlop.cupra.common.fonts</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#class-fontspec","title":"Class FontSpec","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.fonts.FontSpec </p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#constructor-summary","title":"Constructor Summary","text":"Constructor Description FontSpec()"},{"location":"cupra/javadoc/common/fonts/FontSpec/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description FontSpec setName(String name) FontSpec setSize(int size) FontSpec setColor(int color) FontSpec setShadow(boolean shadow) FontSpec setAntialias(boolean antialias) FontSpec setMonospaced(boolean monospaced) FontSpec setUnderline(boolean underline) FontSpec setStrikethrough(boolean strikethrough) FontSpec setBold(boolean bold) FontSpec setItalic(boolean italic) String getName() int getSize() int getColor() boolean getShadow() boolean getAntialias() boolean getMonospaced() boolean getUnderline() boolean getStrikethrough() boolean getBold() boolean getItalic() void setUnderlineStyle(int style) int getUnderlineStyle() void setAbsoluteSize(boolean b) boolean getAbsoluteSize() String getKey() FontSpec duplicate() FontSpec mergeFrom(FontSpec from)"},{"location":"cupra/javadoc/common/fonts/FontSpec/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/fonts/FontSpec/#setname","title":"setName","text":"<p>FontSpec setName(String name)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setsize","title":"setSize","text":"<p>FontSpec setSize(int size)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setcolor","title":"setColor","text":"<p>FontSpec setColor(int color)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setshadow","title":"setShadow","text":"<p>FontSpec setShadow(boolean shadow)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setantialias","title":"setAntialias","text":"<p>FontSpec setAntialias(boolean antialias)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setmonospaced","title":"setMonospaced","text":"<p>FontSpec setMonospaced(boolean monospaced)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setunderline","title":"setUnderline","text":"<p>FontSpec setUnderline(boolean underline)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setstrikethrough","title":"setStrikethrough","text":"<p>FontSpec setStrikethrough(boolean strikethrough)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setbold","title":"setBold","text":"<p>FontSpec setBold(boolean bold)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setitalic","title":"setItalic","text":"<p>FontSpec setItalic(boolean italic)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getsize","title":"getSize","text":"<p>int getSize()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getcolor","title":"getColor","text":"<p>int getColor()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getshadow","title":"getShadow","text":"<p>boolean getShadow()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getantialias","title":"getAntialias","text":"<p>boolean getAntialias()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getmonospaced","title":"getMonospaced","text":"<p>boolean getMonospaced()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getunderline","title":"getUnderline","text":"<p>boolean getUnderline()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getstrikethrough","title":"getStrikethrough","text":"<p>boolean getStrikethrough()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getbold","title":"getBold","text":"<p>boolean getBold()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getitalic","title":"getItalic","text":"<p>boolean getItalic()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setunderlinestyle","title":"setUnderlineStyle","text":"<p>void setUnderlineStyle(int style)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getunderlinestyle","title":"getUnderlineStyle","text":"<p>int getUnderlineStyle()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#setabsolutesize","title":"setAbsoluteSize","text":"<p>void setAbsoluteSize(boolean b)</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getabsolutesize","title":"getAbsoluteSize","text":"<p>boolean getAbsoluteSize()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#getkey","title":"getKey","text":"<p>String getKey()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#duplicate","title":"duplicate","text":"<p>FontSpec duplicate()</p>"},{"location":"cupra/javadoc/common/fonts/FontSpec/#mergefrom","title":"mergeFrom","text":"<p>FontSpec mergeFrom(FontSpec from)</p>"},{"location":"cupra/javadoc/common/input/","title":"Package io.github.sandydunlop.cupra.common.input","text":"Interfaces Class Description MouseInput KeyboardInput"},{"location":"cupra/javadoc/common/input/KeyboardInput/","title":"KeyboardInput","text":"<p>Package io.github.sandydunlop.cupra.common.input</p>"},{"location":"cupra/javadoc/common/input/KeyboardInput/#interface-keyboardinput","title":"Interface KeyboardInput","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.input.KeyboardInput </p>"},{"location":"cupra/javadoc/common/input/KeyboardInput/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void keyPressed(CKeyEvent k) abstract void charTyped(CKeyEvent e)"},{"location":"cupra/javadoc/common/input/KeyboardInput/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/input/KeyboardInput/#keypressed","title":"keyPressed","text":"<p>abstract void keyPressed(CKeyEvent k)</p>"},{"location":"cupra/javadoc/common/input/KeyboardInput/#chartyped","title":"charTyped","text":"<p>abstract void charTyped(CKeyEvent e)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/","title":"MouseInput","text":"<p>Package io.github.sandydunlop.cupra.common.input</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#interface-mouseinput","title":"Interface MouseInput","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.input.MouseInput </p>"},{"location":"cupra/javadoc/common/input/MouseInput/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) abstract boolean isMouseOver(CMouseEvent mouse) abstract boolean mousePressed(CMouseEvent mouse) abstract boolean mouseReleased(CMouseEvent mouse) abstract boolean mouseClicked(CMouseEvent mouse) abstract boolean mouseDoubleClicked(CMouseEvent mouse) abstract boolean mouseTripleClicked(CMouseEvent mouse) abstract boolean mouseScrolled(CMouseEvent mouse) abstract boolean mouseHovered(CMouseEvent mouse) abstract boolean mouseDragged(CMouseEvent mouse)"},{"location":"cupra/javadoc/common/input/MouseInput/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/input/MouseInput/#hoveredwidget","title":"hoveredWidget","text":"<p>abstract CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#ismouseover","title":"isMouseOver","text":"<p>abstract boolean isMouseOver(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mousepressed","title":"mousePressed","text":"<p>abstract boolean mousePressed(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mousereleased","title":"mouseReleased","text":"<p>abstract boolean mouseReleased(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mouseclicked","title":"mouseClicked","text":"<p>abstract boolean mouseClicked(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mousedoubleclicked","title":"mouseDoubleClicked","text":"<p>abstract boolean mouseDoubleClicked(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mousetripleclicked","title":"mouseTripleClicked","text":"<p>abstract boolean mouseTripleClicked(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mousescrolled","title":"mouseScrolled","text":"<p>abstract boolean mouseScrolled(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mousehovered","title":"mouseHovered","text":"<p>abstract boolean mouseHovered(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/input/MouseInput/#mousedragged","title":"mouseDragged","text":"<p>abstract boolean mouseDragged(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/logging/","title":"Package io.github.sandydunlop.cupra.common.logging","text":"Classes Class Description Logger LogManager"},{"location":"cupra/javadoc/common/logging/LogManager/","title":"LogManager","text":"<p>Package io.github.sandydunlop.cupra.common.logging</p>"},{"location":"cupra/javadoc/common/logging/LogManager/#class-logmanager","title":"Class LogManager","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.logging.LogManager </p>"},{"location":"cupra/javadoc/common/logging/LogManager/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Logger getLogger(String name)"},{"location":"cupra/javadoc/common/logging/LogManager/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/logging/LogManager/#getlogger","title":"getLogger","text":"<p>static Logger getLogger(String name)</p>"},{"location":"cupra/javadoc/common/logging/Logger/","title":"Logger","text":"<p>Package io.github.sandydunlop.cupra.common.logging</p>"},{"location":"cupra/javadoc/common/logging/Logger/#class-logger","title":"Class Logger","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.logging.Logger </p>"},{"location":"cupra/javadoc/common/logging/Logger/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Logger(String name)"},{"location":"cupra/javadoc/common/logging/Logger/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void error(String message) void error(String message, Object[] params) void info(String message) void info(String message, Object[] params) void debug(String message) void debug(String message, Object[] params)"},{"location":"cupra/javadoc/common/logging/Logger/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/logging/Logger/#error","title":"error","text":"<p>void error(String message)</p>"},{"location":"cupra/javadoc/common/logging/Logger/#error_1","title":"error","text":"<p>void error(String message, Object[] params)</p>"},{"location":"cupra/javadoc/common/logging/Logger/#info","title":"info","text":"<p>void info(String message)</p>"},{"location":"cupra/javadoc/common/logging/Logger/#info_1","title":"info","text":"<p>void info(String message, Object[] params)</p>"},{"location":"cupra/javadoc/common/logging/Logger/#debug","title":"debug","text":"<p>void debug(String message)</p>"},{"location":"cupra/javadoc/common/logging/Logger/#debug_1","title":"debug","text":"<p>void debug(String message, Object[] params)</p>"},{"location":"cupra/javadoc/common/palette/","title":"Package io.github.sandydunlop.cupra.common.palette","text":"Classes Class Description Blueberry Avocado The <code>Avocado</code> class defines a color palette inspired by avocado tones. Banana ColorPalette Watermelon Copper"},{"location":"cupra/javadoc/common/palette/Avocado/","title":"Avocado","text":"<p>Package io.github.sandydunlop.cupra.common.palette</p>"},{"location":"cupra/javadoc/common/palette/Avocado/#class-avocado","title":"Class Avocado","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.palette.ColorPalette \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.palette.Avocado </p> <p>This palette provides specific ARGB color values for various UI elements such as backgrounds,  text, borders, and widgets. It extends the ColorPalette base class and sets the following colors:</p> <p><code>REGULAR_BACKGROUND</code>: Default background color <code>REGULAR_TEXT</code>: Default text color <code>HOVERED_BACKGROUND</code>: Background color when hovered <code>HOVERED_BORDER</code>: Border color when hovered <code>SELECTED_BACKGROUND</code>: Background color when selected <code>SELECTED_TEXT</code>: Text color when selected <code>INPUT_BACKGROUND</code>: Background color for input fields <code>WIDGET_TEXT</code>: Text color for widgets </p> <p>All color values are specified in ARGB hexadecimal format.</p>"},{"location":"cupra/javadoc/common/palette/Avocado/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Avocado()"},{"location":"cupra/javadoc/common/palette/Banana/","title":"Banana","text":"<p>Package io.github.sandydunlop.cupra.common.palette</p>"},{"location":"cupra/javadoc/common/palette/Banana/#class-banana","title":"Class Banana","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.palette.ColorPalette \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.palette.Banana </p>"},{"location":"cupra/javadoc/common/palette/Banana/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Banana()"},{"location":"cupra/javadoc/common/palette/Blueberry/","title":"Blueberry","text":"<p>Package io.github.sandydunlop.cupra.common.palette</p>"},{"location":"cupra/javadoc/common/palette/Blueberry/#class-blueberry","title":"Class Blueberry","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.palette.ColorPalette \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.palette.Blueberry </p>"},{"location":"cupra/javadoc/common/palette/Blueberry/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Blueberry()"},{"location":"cupra/javadoc/common/palette/ColorPalette/","title":"ColorPalette","text":"<p>Package io.github.sandydunlop.cupra.common.palette</p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#class-colorpalette","title":"Class ColorPalette","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.palette.ColorPalette </p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description int REGULAR_BACKGROUND int REGULAR_TEXT int HOVERED_BACKGROUND int HOVERED_BORDER int SELECTED_BACKGROUND int SELECTED_TEXT int INPUT_BACKGROUND int INPUT_SEPARATOR int WIDGET_TEXT static final Copper Copper static final Watermelon Watermelon static final Avocado Avocado static final Blueberry Blueberry static final Banana Banana"},{"location":"cupra/javadoc/common/palette/ColorPalette/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ColorPalette()"},{"location":"cupra/javadoc/common/palette/ColorPalette/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static int argbLerp(float delta, int start, int end) static int lerp(float delta, int start, int end) static int getAlpha(int argb) static int getRed(int argb) static int getGreen(int argb) static int getBlue(int argb) static int getArgb(int alpha, int red, int green, int blue)"},{"location":"cupra/javadoc/common/palette/ColorPalette/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#regular_background","title":"REGULAR_BACKGROUND","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#regular_text","title":"REGULAR_TEXT","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#hovered_background","title":"HOVERED_BACKGROUND","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#hovered_border","title":"HOVERED_BORDER","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#selected_background","title":"SELECTED_BACKGROUND","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#selected_text","title":"SELECTED_TEXT","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#input_background","title":"INPUT_BACKGROUND","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#input_separator","title":"INPUT_SEPARATOR","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#widget_text","title":"WIDGET_TEXT","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#copper","title":"Copper","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#watermelon","title":"Watermelon","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#avocado","title":"Avocado","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#blueberry","title":"Blueberry","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#banana","title":"Banana","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/palette/ColorPalette/#argblerp","title":"argbLerp","text":"<p>static int argbLerp(float delta, int start, int end)</p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#lerp","title":"lerp","text":"<p>static int lerp(float delta, int start, int end)</p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#getalpha","title":"getAlpha","text":"<p>static int getAlpha(int argb)</p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#getred","title":"getRed","text":"<p>static int getRed(int argb)</p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#getgreen","title":"getGreen","text":"<p>static int getGreen(int argb)</p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#getblue","title":"getBlue","text":"<p>static int getBlue(int argb)</p>"},{"location":"cupra/javadoc/common/palette/ColorPalette/#getargb","title":"getArgb","text":"<p>static int getArgb(int alpha, int red, int green, int blue)</p>"},{"location":"cupra/javadoc/common/palette/Copper/","title":"Copper","text":"<p>Package io.github.sandydunlop.cupra.common.palette</p>"},{"location":"cupra/javadoc/common/palette/Copper/#class-copper","title":"Class Copper","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.palette.ColorPalette \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.palette.Copper </p>"},{"location":"cupra/javadoc/common/palette/Copper/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Copper()"},{"location":"cupra/javadoc/common/palette/Watermelon/","title":"Watermelon","text":"<p>Package io.github.sandydunlop.cupra.common.palette</p>"},{"location":"cupra/javadoc/common/palette/Watermelon/#class-watermelon","title":"Class Watermelon","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.palette.ColorPalette \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.palette.Watermelon </p>"},{"location":"cupra/javadoc/common/palette/Watermelon/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Watermelon()"},{"location":"cupra/javadoc/common/render/","title":"Package io.github.sandydunlop.cupra.common.render","text":"Interfaces Class Description BaseRenderer"},{"location":"cupra/javadoc/common/render/BaseRenderer/","title":"BaseRenderer","text":"<p>Package io.github.sandydunlop.cupra.common.render</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#interface-baserenderer","title":"Interface BaseRenderer","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.render.BaseRenderer </p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void enableClipping(int x1, int y1, int x2, int y2) abstract void disableClipping() abstract void fill(int x1, int y1, int x2, int y2, int color) abstract void drawRectangle(int x1, int y1, int x2, int y2, int color) abstract void drawHorizontalLine(int x1, int x2, int y, int color) abstract void drawVerticalLine(int x, int y1, int y2, int color) abstract void drawImage(String name, BufferedImage image, int x, int y, int width, int height) abstract void setFont(FontSpec fo) abstract void drawText(String text, int x, int y) abstract void drawText(String text, int x, int y, int wrapAt) abstract void drawSymbol(Symbol s, int x, int y, int size, int color)"},{"location":"cupra/javadoc/common/render/BaseRenderer/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/render/BaseRenderer/#enableclipping","title":"enableClipping","text":"<p>abstract void enableClipping(int x1, int y1, int x2, int y2)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#disableclipping","title":"disableClipping","text":"<p>abstract void disableClipping()</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#fill","title":"fill","text":"<p>abstract void fill(int x1, int y1, int x2, int y2, int color)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#drawrectangle","title":"drawRectangle","text":"<p>abstract void drawRectangle(int x1, int y1, int x2, int y2, int color)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#drawhorizontalline","title":"drawHorizontalLine","text":"<p>abstract void drawHorizontalLine(int x1, int x2, int y, int color)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#drawverticalline","title":"drawVerticalLine","text":"<p>abstract void drawVerticalLine(int x, int y1, int y2, int color)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#drawimage","title":"drawImage","text":"<p>abstract void drawImage(String name, BufferedImage image, int x, int y, int width, int height)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#setfont","title":"setFont","text":"<p>abstract void setFont(FontSpec fo)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#drawtext","title":"drawText","text":"<p>abstract void drawText(String text, int x, int y)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#drawtext_1","title":"drawText","text":"<p>abstract void drawText(String text, int x, int y, int wrapAt)</p>"},{"location":"cupra/javadoc/common/render/BaseRenderer/#drawsymbol","title":"drawSymbol","text":"<p>abstract void drawSymbol(Symbol s, int x, int y, int size, int color)</p>"},{"location":"cupra/javadoc/common/util/","title":"Package io.github.sandydunlop.cupra.common.util","text":"ClassesEnum Classes Class Description Math Align Utility class for alignment options used in layout or positioning logic. Dimension Class Description Orientation DepthLimit Symbol MousePointer"},{"location":"cupra/javadoc/common/util/Align.Horizontal/","title":"Align.Horizontal","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#enum-alignhorizontal","title":"Enum Align.Horizontal","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.cupra.common.util.Align.Horizontal&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.Align.Horizontal  Enclosing Class: Align</p> <p>#LEFT - Align content to the left.    #MIDDLE - Center content horizontally.    #SPREAD - Distribute content evenly across the horizontal space.    #RIGHT - Align content to the right. </p>"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#enum-constants","title":"Enum Constants","text":"Enum Constant Description LEFT MIDDLE SPREAD RIGHT"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Align.Horizontal values() static Align.Horizontal valueOf(String name)"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"cupra/javadoc/common/util/Align.Horizontal/#left","title":"LEFT","text":"<p>public static final Align.Horizontal LEFT</p>"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#middle","title":"MIDDLE","text":"<p>public static final Align.Horizontal MIDDLE</p>"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#spread","title":"SPREAD","text":"<p>public static final Align.Horizontal SPREAD</p>"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#right","title":"RIGHT","text":"<p>public static final Align.Horizontal RIGHT</p>"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/Align.Horizontal/#values","title":"values","text":"<p>static Align.Horizontal values()</p>"},{"location":"cupra/javadoc/common/util/Align.Horizontal/#valueof","title":"valueOf","text":"<p>static Align.Horizontal valueOf(String name)</p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/","title":"Align.Vertical","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/#enum-alignvertical","title":"Enum Align.Vertical","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.cupra.common.util.Align.Vertical&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.Align.Vertical  Enclosing Class: Align</p> <p>#TOP - Aligns content to the top.    #MIDDLE - Centers content vertically.    #SPREAD - Evenly distributes content vertically.    #BOTTOM - Aligns content to the bottom. </p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/#enum-constants","title":"Enum Constants","text":"Enum Constant Description TOP MIDDLE SPREAD BOTTOM"},{"location":"cupra/javadoc/common/util/Align.Vertical/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Align.Vertical values() static Align.Vertical valueOf(String name)"},{"location":"cupra/javadoc/common/util/Align.Vertical/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"cupra/javadoc/common/util/Align.Vertical/#top","title":"TOP","text":"<p>public static final Align.Vertical TOP</p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/#middle","title":"MIDDLE","text":"<p>public static final Align.Vertical MIDDLE</p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/#spread","title":"SPREAD","text":"<p>public static final Align.Vertical SPREAD</p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/#bottom","title":"BOTTOM","text":"<p>public static final Align.Vertical BOTTOM</p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/Align.Vertical/#values","title":"values","text":"<p>static Align.Vertical values()</p>"},{"location":"cupra/javadoc/common/util/Align.Vertical/#valueof","title":"valueOf","text":"<p>static Align.Vertical valueOf(String name)</p>"},{"location":"cupra/javadoc/common/util/Align/","title":"Align","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/Align/#class-align","title":"Class Align","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.Align </p> <p>Provides enumerations for horizontal and vertical alignment:</p> <p>Horizontal - LEFT, MIDDLE, SPREAD, RIGHT    Vertical - TOP, MIDDLE, SPREAD, BOTTOM   This class cannot be instantiated.</p>"},{"location":"cupra/javadoc/common/util/DepthLimit/","title":"DepthLimit","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/DepthLimit/#enum-depthlimit","title":"Enum DepthLimit","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.cupra.common.util.DepthLimit&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.DepthLimit </p>"},{"location":"cupra/javadoc/common/util/DepthLimit/#enum-constants","title":"Enum Constants","text":"Enum Constant Description COMPONENT WIDGET SCROLLABLE"},{"location":"cupra/javadoc/common/util/DepthLimit/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static DepthLimit values() static DepthLimit valueOf(String name)"},{"location":"cupra/javadoc/common/util/DepthLimit/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"cupra/javadoc/common/util/DepthLimit/#component","title":"COMPONENT","text":"<p>public static final DepthLimit COMPONENT</p>"},{"location":"cupra/javadoc/common/util/DepthLimit/#widget","title":"WIDGET","text":"<p>public static final DepthLimit WIDGET</p>"},{"location":"cupra/javadoc/common/util/DepthLimit/#scrollable","title":"SCROLLABLE","text":"<p>public static final DepthLimit SCROLLABLE</p>"},{"location":"cupra/javadoc/common/util/DepthLimit/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/DepthLimit/#values","title":"values","text":"<p>static DepthLimit values()</p>"},{"location":"cupra/javadoc/common/util/DepthLimit/#valueof","title":"valueOf","text":"<p>static DepthLimit valueOf(String name)</p>"},{"location":"cupra/javadoc/common/util/Dimension/","title":"Dimension","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/Dimension/#class-dimension","title":"Class Dimension","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.Dimension </p>"},{"location":"cupra/javadoc/common/util/Dimension/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Dimension() Dimension(int width, int height, int nextCharX, int nextCharY)"},{"location":"cupra/javadoc/common/util/Dimension/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description int getWidth() Dimension setWidth(int w) int getHeight() Dimension setHeight(int h) int getNextCharX() void setNextCharX(int nx) int getNextCharY() void setNextCHarY(int ny) void setCanvasWidth(int w) int getCanvasWidth() void setCanvasHeight(int h) int getCanvasHeight()"},{"location":"cupra/javadoc/common/util/Dimension/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/Dimension/#getwidth","title":"getWidth","text":"<p>int getWidth()</p>"},{"location":"cupra/javadoc/common/util/Dimension/#setwidth","title":"setWidth","text":"<p>Dimension setWidth(int w)</p>"},{"location":"cupra/javadoc/common/util/Dimension/#getheight","title":"getHeight","text":"<p>int getHeight()</p>"},{"location":"cupra/javadoc/common/util/Dimension/#setheight","title":"setHeight","text":"<p>Dimension setHeight(int h)</p>"},{"location":"cupra/javadoc/common/util/Dimension/#getnextcharx","title":"getNextCharX","text":"<p>int getNextCharX()</p>"},{"location":"cupra/javadoc/common/util/Dimension/#setnextcharx","title":"setNextCharX","text":"<p>void setNextCharX(int nx)</p>"},{"location":"cupra/javadoc/common/util/Dimension/#getnextchary","title":"getNextCharY","text":"<p>int getNextCharY()</p>"},{"location":"cupra/javadoc/common/util/Dimension/#setnextchary","title":"setNextCHarY","text":"<p>void setNextCHarY(int ny)</p>"},{"location":"cupra/javadoc/common/util/Dimension/#setcanvaswidth","title":"setCanvasWidth","text":"<p>void setCanvasWidth(int w)</p>"},{"location":"cupra/javadoc/common/util/Dimension/#getcanvaswidth","title":"getCanvasWidth","text":"<p>int getCanvasWidth()</p>"},{"location":"cupra/javadoc/common/util/Dimension/#setcanvasheight","title":"setCanvasHeight","text":"<p>void setCanvasHeight(int h)</p>"},{"location":"cupra/javadoc/common/util/Dimension/#getcanvasheight","title":"getCanvasHeight","text":"<p>int getCanvasHeight()</p>"},{"location":"cupra/javadoc/common/util/Math/","title":"Math","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/Math/#class-math","title":"Class Math","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.Math </p>"},{"location":"cupra/javadoc/common/util/Math/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Math()"},{"location":"cupra/javadoc/common/util/Math/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static int min(int a, int b) static int max(int a, int b) static double min(double a, double b) static double max(double a, double b) static int floor(double value) static int clamp(int value, int min, int max) static double clamp(double value, double min, double max)"},{"location":"cupra/javadoc/common/util/Math/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/Math/#min","title":"min","text":"<p>static int min(int a, int b)</p>"},{"location":"cupra/javadoc/common/util/Math/#max","title":"max","text":"<p>static int max(int a, int b)</p>"},{"location":"cupra/javadoc/common/util/Math/#min_1","title":"min","text":"<p>static double min(double a, double b)</p>"},{"location":"cupra/javadoc/common/util/Math/#max_1","title":"max","text":"<p>static double max(double a, double b)</p>"},{"location":"cupra/javadoc/common/util/Math/#floor","title":"floor","text":"<p>static int floor(double value)</p>"},{"location":"cupra/javadoc/common/util/Math/#clamp","title":"clamp","text":"<p>static int clamp(int value, int min, int max)</p>"},{"location":"cupra/javadoc/common/util/Math/#clamp_1","title":"clamp","text":"<p>static double clamp(double value, double min, double max)</p>"},{"location":"cupra/javadoc/common/util/MousePointer/","title":"MousePointer","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/MousePointer/#enum-mousepointer","title":"Enum MousePointer","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.cupra.common.util.MousePointer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.MousePointer </p>"},{"location":"cupra/javadoc/common/util/MousePointer/#enum-constants","title":"Enum Constants","text":"Enum Constant Description ARROW POINTING_HAND I_BEAM MOVE_LEFT_RIGHT"},{"location":"cupra/javadoc/common/util/MousePointer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static MousePointer values() static MousePointer valueOf(String name)"},{"location":"cupra/javadoc/common/util/MousePointer/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"cupra/javadoc/common/util/MousePointer/#arrow","title":"ARROW","text":"<p>public static final MousePointer ARROW</p>"},{"location":"cupra/javadoc/common/util/MousePointer/#pointing_hand","title":"POINTING_HAND","text":"<p>public static final MousePointer POINTING_HAND</p>"},{"location":"cupra/javadoc/common/util/MousePointer/#i_beam","title":"I_BEAM","text":"<p>public static final MousePointer I_BEAM</p>"},{"location":"cupra/javadoc/common/util/MousePointer/#move_left_right","title":"MOVE_LEFT_RIGHT","text":"<p>public static final MousePointer MOVE_LEFT_RIGHT</p>"},{"location":"cupra/javadoc/common/util/MousePointer/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/MousePointer/#values","title":"values","text":"<p>static MousePointer values()</p>"},{"location":"cupra/javadoc/common/util/MousePointer/#valueof","title":"valueOf","text":"<p>static MousePointer valueOf(String name)</p>"},{"location":"cupra/javadoc/common/util/Orientation/","title":"Orientation","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/Orientation/#enum-orientation","title":"Enum Orientation","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.cupra.common.util.Orientation&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.Orientation </p>"},{"location":"cupra/javadoc/common/util/Orientation/#enum-constants","title":"Enum Constants","text":"Enum Constant Description HORIZONTAL VERTICAL"},{"location":"cupra/javadoc/common/util/Orientation/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Orientation values() static Orientation valueOf(String name)"},{"location":"cupra/javadoc/common/util/Orientation/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"cupra/javadoc/common/util/Orientation/#horizontal","title":"HORIZONTAL","text":"<p>public static final Orientation HORIZONTAL</p>"},{"location":"cupra/javadoc/common/util/Orientation/#vertical","title":"VERTICAL","text":"<p>public static final Orientation VERTICAL</p>"},{"location":"cupra/javadoc/common/util/Orientation/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/Orientation/#values","title":"values","text":"<p>static Orientation values()</p>"},{"location":"cupra/javadoc/common/util/Orientation/#valueof","title":"valueOf","text":"<p>static Orientation valueOf(String name)</p>"},{"location":"cupra/javadoc/common/util/Symbol/","title":"Symbol","text":"<p>Package io.github.sandydunlop.cupra.common.util</p>"},{"location":"cupra/javadoc/common/util/Symbol/#enum-symbol","title":"Enum Symbol","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.cupra.common.util.Symbol&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.util.Symbol </p>"},{"location":"cupra/javadoc/common/util/Symbol/#enum-constants","title":"Enum Constants","text":"Enum Constant Description SPACE WARNING_SIGN BANK_NOTE MONEY_BAG CHECK_MARK STOP_SIGN TOOLS ROSETTE STAR PLUS LOCATION UP SHOPPING_CART DOWN VOLUME_MUTE VOLUME_DOWN VOLUME_UP GRID ROWS COLUMNS LINE_CHART BAR_CHART PIE_CHART BELL COLON SEMICOLON LEFT INFORMATION RIGHT QUESTION AT CAMERA BOOK SPOOL DOWNLOAD VIEW FACEBOOK FACEBOOK2 MOVIE_CAMERA TRASH TAG DOCUMENT THUMB_DOWN IPOD MOBILE SMARTPHONE YOUTUBE IPAD REDO PRESENTATION TWITTER TWITTER2 CREATE COPY DELETE ANNOUNCE LEFT_JUSTIFY DOWN_ARROW KEYS UP_ARROW WIFI COMODE GSM FAX SMS LANDLINE PRINTER PEN PESON PEOPLE VIDEO_CAMERA SHOPPING_CART2 HEART PERSON2 THUMB_UP MAIL CLOSED_LOCK SHARE HOUSE OPEN_LOCK PENCIL FIND TWEET SHRINK EXPAND GLOBE DELETE_GLOBE ZOOM_IN ZOOM_OUT CLOCK1 BAR CLOCK2 MULTIPLY PENCIL2 COPYT"},{"location":"cupra/javadoc/common/util/Symbol/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Symbol values() static Symbol valueOf(String name) static String asString(Symbol symbol)"},{"location":"cupra/javadoc/common/util/Symbol/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"cupra/javadoc/common/util/Symbol/#space","title":"SPACE","text":"<p>public static final Symbol SPACE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#warning_sign","title":"WARNING_SIGN","text":"<p>public static final Symbol WARNING_SIGN</p>"},{"location":"cupra/javadoc/common/util/Symbol/#bank_note","title":"BANK_NOTE","text":"<p>public static final Symbol BANK_NOTE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#money_bag","title":"MONEY_BAG","text":"<p>public static final Symbol MONEY_BAG</p>"},{"location":"cupra/javadoc/common/util/Symbol/#check_mark","title":"CHECK_MARK","text":"<p>public static final Symbol CHECK_MARK</p>"},{"location":"cupra/javadoc/common/util/Symbol/#stop_sign","title":"STOP_SIGN","text":"<p>public static final Symbol STOP_SIGN</p>"},{"location":"cupra/javadoc/common/util/Symbol/#tools","title":"TOOLS","text":"<p>public static final Symbol TOOLS</p>"},{"location":"cupra/javadoc/common/util/Symbol/#rosette","title":"ROSETTE","text":"<p>public static final Symbol ROSETTE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#star","title":"STAR","text":"<p>public static final Symbol STAR</p>"},{"location":"cupra/javadoc/common/util/Symbol/#plus","title":"PLUS","text":"<p>public static final Symbol PLUS</p>"},{"location":"cupra/javadoc/common/util/Symbol/#location","title":"LOCATION","text":"<p>public static final Symbol LOCATION</p>"},{"location":"cupra/javadoc/common/util/Symbol/#up","title":"UP","text":"<p>public static final Symbol UP</p>"},{"location":"cupra/javadoc/common/util/Symbol/#shopping_cart","title":"SHOPPING_CART","text":"<p>public static final Symbol SHOPPING_CART</p>"},{"location":"cupra/javadoc/common/util/Symbol/#down","title":"DOWN","text":"<p>public static final Symbol DOWN</p>"},{"location":"cupra/javadoc/common/util/Symbol/#volume_mute","title":"VOLUME_MUTE","text":"<p>public static final Symbol VOLUME_MUTE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#volume_down","title":"VOLUME_DOWN","text":"<p>public static final Symbol VOLUME_DOWN</p>"},{"location":"cupra/javadoc/common/util/Symbol/#volume_up","title":"VOLUME_UP","text":"<p>public static final Symbol VOLUME_UP</p>"},{"location":"cupra/javadoc/common/util/Symbol/#grid","title":"GRID","text":"<p>public static final Symbol GRID</p>"},{"location":"cupra/javadoc/common/util/Symbol/#rows","title":"ROWS","text":"<p>public static final Symbol ROWS</p>"},{"location":"cupra/javadoc/common/util/Symbol/#columns","title":"COLUMNS","text":"<p>public static final Symbol COLUMNS</p>"},{"location":"cupra/javadoc/common/util/Symbol/#line_chart","title":"LINE_CHART","text":"<p>public static final Symbol LINE_CHART</p>"},{"location":"cupra/javadoc/common/util/Symbol/#bar_chart","title":"BAR_CHART","text":"<p>public static final Symbol BAR_CHART</p>"},{"location":"cupra/javadoc/common/util/Symbol/#pie_chart","title":"PIE_CHART","text":"<p>public static final Symbol PIE_CHART</p>"},{"location":"cupra/javadoc/common/util/Symbol/#bell","title":"BELL","text":"<p>public static final Symbol BELL</p>"},{"location":"cupra/javadoc/common/util/Symbol/#colon","title":"COLON","text":"<p>public static final Symbol COLON</p>"},{"location":"cupra/javadoc/common/util/Symbol/#semicolon","title":"SEMICOLON","text":"<p>public static final Symbol SEMICOLON</p>"},{"location":"cupra/javadoc/common/util/Symbol/#left","title":"LEFT","text":"<p>public static final Symbol LEFT</p>"},{"location":"cupra/javadoc/common/util/Symbol/#information","title":"INFORMATION","text":"<p>public static final Symbol INFORMATION</p>"},{"location":"cupra/javadoc/common/util/Symbol/#right","title":"RIGHT","text":"<p>public static final Symbol RIGHT</p>"},{"location":"cupra/javadoc/common/util/Symbol/#question","title":"QUESTION","text":"<p>public static final Symbol QUESTION</p>"},{"location":"cupra/javadoc/common/util/Symbol/#at","title":"AT","text":"<p>public static final Symbol AT</p>"},{"location":"cupra/javadoc/common/util/Symbol/#camera","title":"CAMERA","text":"<p>public static final Symbol CAMERA</p>"},{"location":"cupra/javadoc/common/util/Symbol/#book","title":"BOOK","text":"<p>public static final Symbol BOOK</p>"},{"location":"cupra/javadoc/common/util/Symbol/#spool","title":"SPOOL","text":"<p>public static final Symbol SPOOL</p>"},{"location":"cupra/javadoc/common/util/Symbol/#download","title":"DOWNLOAD","text":"<p>public static final Symbol DOWNLOAD</p>"},{"location":"cupra/javadoc/common/util/Symbol/#view","title":"VIEW","text":"<p>public static final Symbol VIEW</p>"},{"location":"cupra/javadoc/common/util/Symbol/#facebook","title":"FACEBOOK","text":"<p>public static final Symbol FACEBOOK</p>"},{"location":"cupra/javadoc/common/util/Symbol/#facebook2","title":"FACEBOOK2","text":"<p>public static final Symbol FACEBOOK2</p>"},{"location":"cupra/javadoc/common/util/Symbol/#movie_camera","title":"MOVIE_CAMERA","text":"<p>public static final Symbol MOVIE_CAMERA</p>"},{"location":"cupra/javadoc/common/util/Symbol/#trash","title":"TRASH","text":"<p>public static final Symbol TRASH</p>"},{"location":"cupra/javadoc/common/util/Symbol/#tag","title":"TAG","text":"<p>public static final Symbol TAG</p>"},{"location":"cupra/javadoc/common/util/Symbol/#document","title":"DOCUMENT","text":"<p>public static final Symbol DOCUMENT</p>"},{"location":"cupra/javadoc/common/util/Symbol/#thumb_down","title":"THUMB_DOWN","text":"<p>public static final Symbol THUMB_DOWN</p>"},{"location":"cupra/javadoc/common/util/Symbol/#ipod","title":"IPOD","text":"<p>public static final Symbol IPOD</p>"},{"location":"cupra/javadoc/common/util/Symbol/#mobile","title":"MOBILE","text":"<p>public static final Symbol MOBILE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#smartphone","title":"SMARTPHONE","text":"<p>public static final Symbol SMARTPHONE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#youtube","title":"YOUTUBE","text":"<p>public static final Symbol YOUTUBE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#ipad","title":"IPAD","text":"<p>public static final Symbol IPAD</p>"},{"location":"cupra/javadoc/common/util/Symbol/#redo","title":"REDO","text":"<p>public static final Symbol REDO</p>"},{"location":"cupra/javadoc/common/util/Symbol/#presentation","title":"PRESENTATION","text":"<p>public static final Symbol PRESENTATION</p>"},{"location":"cupra/javadoc/common/util/Symbol/#twitter","title":"TWITTER","text":"<p>public static final Symbol TWITTER</p>"},{"location":"cupra/javadoc/common/util/Symbol/#twitter2","title":"TWITTER2","text":"<p>public static final Symbol TWITTER2</p>"},{"location":"cupra/javadoc/common/util/Symbol/#create","title":"CREATE","text":"<p>public static final Symbol CREATE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#copy","title":"COPY","text":"<p>public static final Symbol COPY</p>"},{"location":"cupra/javadoc/common/util/Symbol/#delete","title":"DELETE","text":"<p>public static final Symbol DELETE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#announce","title":"ANNOUNCE","text":"<p>public static final Symbol ANNOUNCE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#left_justify","title":"LEFT_JUSTIFY","text":"<p>public static final Symbol LEFT_JUSTIFY</p>"},{"location":"cupra/javadoc/common/util/Symbol/#down_arrow","title":"DOWN_ARROW","text":"<p>public static final Symbol DOWN_ARROW</p>"},{"location":"cupra/javadoc/common/util/Symbol/#keys","title":"KEYS","text":"<p>public static final Symbol KEYS</p>"},{"location":"cupra/javadoc/common/util/Symbol/#up_arrow","title":"UP_ARROW","text":"<p>public static final Symbol UP_ARROW</p>"},{"location":"cupra/javadoc/common/util/Symbol/#wifi","title":"WIFI","text":"<p>public static final Symbol WIFI</p>"},{"location":"cupra/javadoc/common/util/Symbol/#comode","title":"COMODE","text":"<p>public static final Symbol COMODE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#gsm","title":"GSM","text":"<p>public static final Symbol GSM</p>"},{"location":"cupra/javadoc/common/util/Symbol/#fax","title":"FAX","text":"<p>public static final Symbol FAX</p>"},{"location":"cupra/javadoc/common/util/Symbol/#sms","title":"SMS","text":"<p>public static final Symbol SMS</p>"},{"location":"cupra/javadoc/common/util/Symbol/#landline","title":"LANDLINE","text":"<p>public static final Symbol LANDLINE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#printer","title":"PRINTER","text":"<p>public static final Symbol PRINTER</p>"},{"location":"cupra/javadoc/common/util/Symbol/#pen","title":"PEN","text":"<p>public static final Symbol PEN</p>"},{"location":"cupra/javadoc/common/util/Symbol/#peson","title":"PESON","text":"<p>public static final Symbol PESON</p>"},{"location":"cupra/javadoc/common/util/Symbol/#people","title":"PEOPLE","text":"<p>public static final Symbol PEOPLE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#video_camera","title":"VIDEO_CAMERA","text":"<p>public static final Symbol VIDEO_CAMERA</p>"},{"location":"cupra/javadoc/common/util/Symbol/#shopping_cart2","title":"SHOPPING_CART2","text":"<p>public static final Symbol SHOPPING_CART2</p>"},{"location":"cupra/javadoc/common/util/Symbol/#heart","title":"HEART","text":"<p>public static final Symbol HEART</p>"},{"location":"cupra/javadoc/common/util/Symbol/#person2","title":"PERSON2","text":"<p>public static final Symbol PERSON2</p>"},{"location":"cupra/javadoc/common/util/Symbol/#thumb_up","title":"THUMB_UP","text":"<p>public static final Symbol THUMB_UP</p>"},{"location":"cupra/javadoc/common/util/Symbol/#mail","title":"MAIL","text":"<p>public static final Symbol MAIL</p>"},{"location":"cupra/javadoc/common/util/Symbol/#closed_lock","title":"CLOSED_LOCK","text":"<p>public static final Symbol CLOSED_LOCK</p>"},{"location":"cupra/javadoc/common/util/Symbol/#share","title":"SHARE","text":"<p>public static final Symbol SHARE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#house","title":"HOUSE","text":"<p>public static final Symbol HOUSE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#open_lock","title":"OPEN_LOCK","text":"<p>public static final Symbol OPEN_LOCK</p>"},{"location":"cupra/javadoc/common/util/Symbol/#pencil","title":"PENCIL","text":"<p>public static final Symbol PENCIL</p>"},{"location":"cupra/javadoc/common/util/Symbol/#find","title":"FIND","text":"<p>public static final Symbol FIND</p>"},{"location":"cupra/javadoc/common/util/Symbol/#tweet","title":"TWEET","text":"<p>public static final Symbol TWEET</p>"},{"location":"cupra/javadoc/common/util/Symbol/#shrink","title":"SHRINK","text":"<p>public static final Symbol SHRINK</p>"},{"location":"cupra/javadoc/common/util/Symbol/#expand","title":"EXPAND","text":"<p>public static final Symbol EXPAND</p>"},{"location":"cupra/javadoc/common/util/Symbol/#globe","title":"GLOBE","text":"<p>public static final Symbol GLOBE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#delete_globe","title":"DELETE_GLOBE","text":"<p>public static final Symbol DELETE_GLOBE</p>"},{"location":"cupra/javadoc/common/util/Symbol/#zoom_in","title":"ZOOM_IN","text":"<p>public static final Symbol ZOOM_IN</p>"},{"location":"cupra/javadoc/common/util/Symbol/#zoom_out","title":"ZOOM_OUT","text":"<p>public static final Symbol ZOOM_OUT</p>"},{"location":"cupra/javadoc/common/util/Symbol/#clock1","title":"CLOCK1","text":"<p>public static final Symbol CLOCK1</p>"},{"location":"cupra/javadoc/common/util/Symbol/#bar","title":"BAR","text":"<p>public static final Symbol BAR</p>"},{"location":"cupra/javadoc/common/util/Symbol/#clock2","title":"CLOCK2","text":"<p>public static final Symbol CLOCK2</p>"},{"location":"cupra/javadoc/common/util/Symbol/#multiply","title":"MULTIPLY","text":"<p>public static final Symbol MULTIPLY</p>"},{"location":"cupra/javadoc/common/util/Symbol/#pencil2","title":"PENCIL2","text":"<p>public static final Symbol PENCIL2</p>"},{"location":"cupra/javadoc/common/util/Symbol/#copyt","title":"COPYT","text":"<p>public static final Symbol COPYT</p>"},{"location":"cupra/javadoc/common/util/Symbol/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/util/Symbol/#values","title":"values","text":"<p>static Symbol values()</p>"},{"location":"cupra/javadoc/common/util/Symbol/#valueof","title":"valueOf","text":"<p>static Symbol valueOf(String name)</p>"},{"location":"cupra/javadoc/common/util/Symbol/#asstring","title":"asString","text":"<p>static String asString(Symbol symbol)</p>"},{"location":"cupra/javadoc/common/widgets/","title":"Package io.github.sandydunlop.cupra.common.widgets","text":"Classes Class Description CAbstractScrollable CListBox CSlider CLabel CLinkLabel CTextBox CImage CWidget CFlexiSpacer CCheckBox CContainer CButton CSymbolButton CScrollableContainer CFormattedLabel CSpacer CListBoxEntry CNumberBox CDropdownListBox CDropdownListBox is a widget that provides a dropdown list. CDropdownTextBox CDropdownTextBox is a composite widget that combines a text box with a dropdown list. CGrid CScrollBar CListBoxColumn"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable.PositionChangedAction/","title":"CAbstractScrollable.PositionChangedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable.PositionChangedAction/#interface-cabstractscrollablepositionchangedaction","title":"Interface CAbstractScrollable.PositionChangedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CAbstractScrollable.PositionChangedAction  Enclosing Class: CAbstractScrollable</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable.PositionChangedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onPositionChanged(double position)"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable.PositionChangedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable.PositionChangedAction/#onpositionchanged","title":"onPositionChanged","text":"<p>abstract void onPositionChanged(double position)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/","title":"CAbstractScrollable","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#class-cabstractscrollable","title":"Class CAbstractScrollable","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CAbstractScrollable </p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected int defaultThickness protected int defaultSize protected Orientation orientation protected CAbstractScrollable.PositionChangedAction onPositionChanged protected boolean showButtons protected double min protected double max protected int contentHeight protected double scrollAmount protected boolean scrolling"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CAbstractScrollable(CContainer parent) CAbstractScrollable(CContainer parent, Orientation orientation)"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void onPositionChanged(CAbstractScrollable.PositionChangedAction action) void setShowButtons(boolean show) boolean getShowButtons() void setMin(double min) double getMin() void setMax(double max) double getMax() protected double getMaxScroll() int getDefaultWidth() int getDefaultHeight() protected double getScrollAmount() protected void setScrollAmount(double amount) protected void updateScrollingState(CMouseEvent mouse) void layout() abstract void render(BaseRenderer renderer, CMouseEvent mouse) protected int getRenderSize() protected int getRenderThickness() protected int getRenderPosition() protected int getScrollerStart(int renderSize, int renderPosition, int scrollerSize) protected int getScrollerSize() CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) boolean mouseReleased(CMouseEvent mouse) boolean mousePressed(CMouseEvent mouse) boolean mouseDragged(CMouseEvent mouse) boolean mouseScrolled(CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#defaultthickness","title":"defaultThickness","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#defaultsize","title":"defaultSize","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#orientation","title":"orientation","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#onpositionchanged","title":"onPositionChanged","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#showbuttons","title":"showButtons","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#min","title":"min","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#max","title":"max","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#contentheight","title":"contentHeight","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#scrollamount","title":"scrollAmount","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#scrolling","title":"scrolling","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#onpositionchanged_1","title":"onPositionChanged","text":"<p>void onPositionChanged(CAbstractScrollable.PositionChangedAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#setshowbuttons","title":"setShowButtons","text":"<p>void setShowButtons(boolean show)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getshowbuttons","title":"getShowButtons","text":"<p>boolean getShowButtons()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#setmin","title":"setMin","text":"<p>void setMin(double min)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getmin","title":"getMin","text":"<p>double getMin()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#setmax","title":"setMax","text":"<p>void setMax(double max)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getmax","title":"getMax","text":"<p>double getMax()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getmaxscroll","title":"getMaxScroll","text":"<p>protected double getMaxScroll()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getdefaultwidth","title":"getDefaultWidth","text":"<p>int getDefaultWidth()</p> <p>Overrides:</p> <p>getDefaultWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getdefaultheight","title":"getDefaultHeight","text":"<p>int getDefaultHeight()</p> <p>Overrides:</p> <p>getDefaultHeight from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getscrollamount","title":"getScrollAmount","text":"<p>protected double getScrollAmount()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#setscrollamount","title":"setScrollAmount","text":"<p>protected void setScrollAmount(double amount)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#updatescrollingstate","title":"updateScrollingState","text":"<p>protected void updateScrollingState(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#render","title":"render","text":"<p>abstract void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getrendersize","title":"getRenderSize","text":"<p>protected int getRenderSize()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getrenderthickness","title":"getRenderThickness","text":"<p>protected int getRenderThickness()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getrenderposition","title":"getRenderPosition","text":"<p>protected int getRenderPosition()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getscrollerstart","title":"getScrollerStart","text":"<p>protected int getScrollerStart(int renderSize, int renderPosition, int scrollerSize)</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#getscrollersize","title":"getScrollerSize","text":"<p>protected int getScrollerSize()</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#mousereleased","title":"mouseReleased","text":"<p>boolean mouseReleased(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseReleased from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#mousepressed","title":"mousePressed","text":"<p>boolean mousePressed(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mousePressed from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#mousedragged","title":"mouseDragged","text":"<p>boolean mouseDragged(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseDragged from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CAbstractScrollable/#mousescrolled","title":"mouseScrolled","text":"<p>boolean mouseScrolled(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseScrolled from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CButton.CClickAction/","title":"CButton.CClickAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CButton.CClickAction/#interface-cbuttoncclickaction","title":"Interface CButton.CClickAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CButton.CClickAction  Enclosing Class: CButton</p>"},{"location":"cupra/javadoc/common/widgets/CButton.CClickAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onClick(CButton click)"},{"location":"cupra/javadoc/common/widgets/CButton.CClickAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CButton.CClickAction/#onclick","title":"onClick","text":"<p>abstract void onClick(CButton click)</p>"},{"location":"cupra/javadoc/common/widgets/CButton/","title":"CButton","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#class-cbutton","title":"Class CButton","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CButton </p>"},{"location":"cupra/javadoc/common/widgets/CButton/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CButton(CContainer parent, String text, CButton.CClickAction onClick)"},{"location":"cupra/javadoc/common/widgets/CButton/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setFont(FontSpec font) void setText(String text) String getText() void recalculateSize() void layout() void render(BaseRenderer renderer, CMouseEvent mouse) boolean mousePressed(CMouseEvent mouse) String toString()"},{"location":"cupra/javadoc/common/widgets/CButton/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CButton/#setfont","title":"setFont","text":"<p>void setFont(FontSpec font)</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#settext","title":"setText","text":"<p>void setText(String text)</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#gettext","title":"getText","text":"<p>String getText()</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#recalculatesize","title":"recalculateSize","text":"<p>void recalculateSize()</p> <p>Overrides:</p> <p>recalculateSize from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#mousepressed","title":"mousePressed","text":"<p>boolean mousePressed(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mousePressed from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CButton/#tostring","title":"toString","text":"<p>String toString()</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/","title":"CCheckBox","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#class-ccheckbox","title":"Class CCheckBox","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CCheckBox </p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CCheckBox(CContainer parent, String text) CCheckBox(CContainer parent, String text, boolean checked)"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setText(String text) String getText() void setChecked(boolean checked) boolean isChecked() void recalculateSize() void layout() void render(BaseRenderer renderer, CMouseEvent mouse) boolean mousePressed(CMouseEvent mouse) String toString()"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CCheckBox/#settext","title":"setText","text":"<p>void setText(String text)</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#gettext","title":"getText","text":"<p>String getText()</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#setchecked","title":"setChecked","text":"<p>void setChecked(boolean checked)</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#ischecked","title":"isChecked","text":"<p>boolean isChecked()</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#recalculatesize","title":"recalculateSize","text":"<p>void recalculateSize()</p> <p>Overrides:</p> <p>recalculateSize from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#mousepressed","title":"mousePressed","text":"<p>boolean mousePressed(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mousePressed from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CCheckBox/#tostring","title":"toString","text":"<p>String toString()</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/","title":"CContainer","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#class-ccontainer","title":"Class CContainer","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CContainer </p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected boolean containerHasBackground protected int containerBackgroundColor protected boolean containerHasBorder protected int containerBorderColor protected int topOffset"},{"location":"cupra/javadoc/common/widgets/CContainer/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CContainer(CContainer parent, Orientation orientation) CContainer(CContainer parent, boolean isHorizontal) CContainer(CContainer parent) CContainer()"},{"location":"cupra/javadoc/common/widgets/CContainer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setTopOffset(int gap) int getTopOffset() void setParent(CContainer parent) FontSpec getFont() CContainer setFont(FontSpec font) CContainer setAlignVertical(Align.Vertical align) Align.Vertical getAlignVertical() CContainer setAlignHorizontal(Align.Horizontal align) Align.Horizontal getAlignHorizontal() void setHorizontal(boolean flag) boolean isHorizontal() void setBackgroundColor(int color) void setBorderColor(int color) CContainer setDebug(int color) int getCalculatedX() int getCalculatedY() void clear() void add(Object[] o) int getCalculatedWidth() int getCalculatedHeight() void layout() void render(BaseRenderer renderer, CMouseEvent mouse) CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) String toString()"},{"location":"cupra/javadoc/common/widgets/CContainer/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CContainer/#containerhasbackground","title":"containerHasBackground","text":""},{"location":"cupra/javadoc/common/widgets/CContainer/#containerbackgroundcolor","title":"containerBackgroundColor","text":""},{"location":"cupra/javadoc/common/widgets/CContainer/#containerhasborder","title":"containerHasBorder","text":""},{"location":"cupra/javadoc/common/widgets/CContainer/#containerbordercolor","title":"containerBorderColor","text":""},{"location":"cupra/javadoc/common/widgets/CContainer/#topoffset","title":"topOffset","text":""},{"location":"cupra/javadoc/common/widgets/CContainer/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CContainer/#settopoffset","title":"setTopOffset","text":"<p>void setTopOffset(int gap)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#gettopoffset","title":"getTopOffset","text":"<p>int getTopOffset()</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#setparent","title":"setParent","text":"<p>void setParent(CContainer parent)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#getfont","title":"getFont","text":"<p>FontSpec getFont()</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#setfont","title":"setFont","text":"<p>CContainer setFont(FontSpec font)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#setalignvertical","title":"setAlignVertical","text":"<p>CContainer setAlignVertical(Align.Vertical align)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#getalignvertical","title":"getAlignVertical","text":"<p>Align.Vertical getAlignVertical()</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#setalignhorizontal","title":"setAlignHorizontal","text":"<p>CContainer setAlignHorizontal(Align.Horizontal align)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#getalignhorizontal","title":"getAlignHorizontal","text":"<p>Align.Horizontal getAlignHorizontal()</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#sethorizontal","title":"setHorizontal","text":"<p>void setHorizontal(boolean flag)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#ishorizontal","title":"isHorizontal","text":"<p>boolean isHorizontal()</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#setbackgroundcolor","title":"setBackgroundColor","text":"<p>void setBackgroundColor(int color)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#setbordercolor","title":"setBorderColor","text":"<p>void setBorderColor(int color)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#setdebug","title":"setDebug","text":"<p>CContainer setDebug(int color)</p> <p>Overrides:</p> <p>setDebug from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#getcalculatedx","title":"getCalculatedX","text":"<p>int getCalculatedX()</p> <p>Overrides:</p> <p>getCalculatedX from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#getcalculatedy","title":"getCalculatedY","text":"<p>int getCalculatedY()</p> <p>Overrides:</p> <p>getCalculatedY from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#clear","title":"clear","text":"<p>void clear()</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#add","title":"add","text":"<p>void add(Object[] o)</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#getcalculatedwidth","title":"getCalculatedWidth","text":"<p>int getCalculatedWidth()</p> <p>Overrides:</p> <p>getCalculatedWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#getcalculatedheight","title":"getCalculatedHeight","text":"<p>int getCalculatedHeight()</p> <p>Overrides:</p> <p>getCalculatedHeight from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CContainer/#tostring","title":"toString","text":"<p>String toString()</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox.CSelectionChangedAction/","title":"CDropdownListBox.CSelectionChangedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox.CSelectionChangedAction/#interface-cdropdownlistboxcselectionchangedaction","title":"Interface CDropdownListBox.CSelectionChangedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CDropdownListBox.CSelectionChangedAction  Enclosing Class: CDropdownListBox</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox.CSelectionChangedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onSelectionChanged(CListBoxEntry selection)"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox.CSelectionChangedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox.CSelectionChangedAction/#onselectionchanged","title":"onSelectionChanged","text":"<p>abstract void onSelectionChanged(CListBoxEntry selection)</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/","title":"CDropdownListBox","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#class-cdropdownlistbox","title":"Class CDropdownListBox","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CDropdownListBox </p> <p>Features:</p> <p>Dropdown button to display a list of selectable entries.    Callback interfaces for selection changes.    Customizable width and automatic layout of child components. </p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected CTextBox textbox protected CSymbolButton button protected CListBox listbox protected CDropdownListBox.CSelectionChangedAction onSelectionChanged protected int buttonWidth"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CDropdownListBox(CContainer parent) CDropdownListBox is a widget that provides a dropdown list."},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setWidth(int width) Sets the width of the dropdown text box component. int getDefaultWidth() int getDefaultHeight() void setSelectedIndex(int index) int getSelectedIndex() CListBoxEntry getSelected() void setSelected(CListBoxEntry entry) Sets the specified CListBoxEntry as the selected entry in the list box. void add(CListBoxEntry entry) Adds a CListBoxEntry to the list box and updates its height. void layout() Lays out the components of the dropdown text box, adjusting their sizes and positions  based on the current font and widget dimensions. void render(BaseRenderer renderer, CMouseEvent mouse) Renders the dropdown text box and its child components. boolean isMouseOver(CMouseEvent mouse) Determines whether the mouse pointer is currently over this dropdown text box or its associated listbox. CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) void onSelectionChanged(CDropdownListBox.CSelectionChangedAction action)"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#textbox","title":"textbox","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#button","title":"button","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#listbox","title":"listbox","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#onselectionchanged","title":"onSelectionChanged","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#buttonwidth","title":"buttonWidth","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#setwidth","title":"setWidth","text":"<p>void setWidth(int width)</p> <p>Sets the width of the dropdown text box component.</p> <p>This method updates the width of the main component as well as its internal  textbox and listbox elements. The textbox width is set to the specified width  minus the width of the button, while the listbox width matches the specified width.</p> <p>Parameters:</p> <p><code>width</code> - the total width to set for the dropdown text box, in pixels</p> <p>Overrides:</p> <p>setWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#getdefaultwidth","title":"getDefaultWidth","text":"<p>int getDefaultWidth()</p> <p>Overrides:</p> <p>getDefaultWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#getdefaultheight","title":"getDefaultHeight","text":"<p>int getDefaultHeight()</p> <p>Overrides:</p> <p>getDefaultHeight from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#setselectedindex","title":"setSelectedIndex","text":"<p>void setSelectedIndex(int index)</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#getselectedindex","title":"getSelectedIndex","text":"<p>int getSelectedIndex()</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#getselected","title":"getSelected","text":"<p>CListBoxEntry getSelected()</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#setselected","title":"setSelected","text":"<p>void setSelected(CListBoxEntry entry)</p> <p>Sets the specified CListBoxEntry as the selected entry in the list box.</p> <p>Parameters:</p> <p><code>entry</code> - the <code>CListBoxEntry</code> to be selected</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#add","title":"add","text":"<p>void add(CListBoxEntry entry)</p> <p>Adds a CListBoxEntry to the list box and updates its height.</p> <p>Parameters:</p> <p><code>entry</code> - the entry to be added to the list box</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#layout","title":"layout","text":"<p>void layout()</p> <p>Lays out the components of the dropdown text box, adjusting their sizes and positions  based on the current font and widget dimensions. This method recalculates the height  using the loaded font and padding, updates the width and height of the textbox and button,  and triggers a layout update for the listbox if the font cache is invalidated.  Also sets the parameters for the listbox.</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Renders the dropdown text box and its child components.</p> <p>This method first calls the superclass's render method, then positions and renders  the child components: textbox, button, and listbox. If debug mode is enabled (i.e.,   <code>getDebug()</code> returns a non-zero value), it draws a debug rectangle around the   component using the specified debug color.</p> <p>Parameters:</p> <p><code>renderer</code> - the renderer used to draw the component</p> <p><code>mouse</code> - all mouse information</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#ismouseover","title":"isMouseOver","text":"<p>boolean isMouseOver(CMouseEvent mouse)</p> <p>Determines whether the mouse pointer is currently over this dropdown text box or its associated listbox.</p> <p>Parameters:</p> <p><code>mouse</code> - the mouse event containing the current mouse position</p> <p>Returns:</p> <p><code>true</code> if the mouse is over this component or the visible listbox; <code>false</code> otherwise</p> <p>Overrides:</p> <p>isMouseOver from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownListBox/#onselectionchanged_1","title":"onSelectionChanged","text":"<p>void onSelectionChanged(CDropdownListBox.CSelectionChangedAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox.EnterPressedAction/","title":"CDropdownTextBox.EnterPressedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox.EnterPressedAction/#interface-cdropdowntextboxenterpressedaction","title":"Interface CDropdownTextBox.EnterPressedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CDropdownTextBox.EnterPressedAction  Enclosing Class: CDropdownTextBox</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox.EnterPressedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onEnterPressed(CTextBox enter)"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox.EnterPressedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox.EnterPressedAction/#onenterpressed","title":"onEnterPressed","text":"<p>abstract void onEnterPressed(CTextBox enter)</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/","title":"CDropdownTextBox","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/#class-cdropdowntextbox","title":"Class CDropdownTextBox","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CDropdownListBox \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CDropdownTextBox </p> <p>It allows users to either type text directly or select from a list of predefined entries.</p> <p>Features:</p> <p>Editable text box for user input.    Dropdown button to display a list of selectable entries.    Callback interfaces for selection changes and enter key presses.    Customizable width and automatic layout of child components. </p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CDropdownTextBox(CContainer parent) CDropdownTextBox is a custom widget that combines a text box with a dropdown list. CDropdownTextBox(CContainer parent, String text)"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setText(String text) Sets the text of the textbox to the specified value. String getText() Returns the current text contained in the textbox component. void onEnterPressed(CDropdownTextBox.EnterPressedAction action)"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/#settext","title":"setText","text":"<p>void setText(String text)</p> <p>Sets the text of the textbox to the specified value.</p> <p>Parameters:</p> <p><code>text</code> - the text to set in the textbox</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/#gettext","title":"getText","text":"<p>String getText()</p> <p>Returns the current text contained in the textbox component.</p> <p>Returns:</p> <p>the text currently entered in the textbox</p>"},{"location":"cupra/javadoc/common/widgets/CDropdownTextBox/#onenterpressed","title":"onEnterPressed","text":"<p>void onEnterPressed(CDropdownTextBox.EnterPressedAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CFlexiSpacer/","title":"CFlexiSpacer","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CFlexiSpacer/#class-cflexispacer","title":"Class CFlexiSpacer","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CFlexiSpacer </p>"},{"location":"cupra/javadoc/common/widgets/CFlexiSpacer/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CFlexiSpacer(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CFlexiSpacer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void render(BaseRenderer renderer, CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CFlexiSpacer/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CFlexiSpacer/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel.CNewLine/","title":"CFormattedLabel.CNewLine","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel.CNewLine/#class-cformattedlabelcnewline","title":"Class CFormattedLabel.CNewLine","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CFormattedLabel.CNewLine  Enclosing Class: CFormattedLabel</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel.CNewLine/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CFormattedLabel.CNewLine() CFormattedLabel.CNewLine(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel.CNewLine/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void render(BaseRenderer renderer, CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel.CNewLine/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CFormattedLabel.CNewLine/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/","title":"CFormattedLabel","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#class-cformattedlabel","title":"Class CFormattedLabel","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CContainer \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CFormattedLabel </p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description static CFormattedLabel.CNewLine"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CFormattedLabel(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description synchronized void customLayout() static CFormattedLabel.CNewLine newLine() void layout() CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#customlayout","title":"customLayout","text":"<p>synchronized void customLayout()</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#newline","title":"newLine","text":"<p>static CFormattedLabel.CNewLine newLine()</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CFormattedLabel/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/","title":"CGrid","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#class-cgrid","title":"Class CGrid","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CContainer \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CGrid </p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CGrid(CContainer parent, int widthInCells) CGrid(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CGrid/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setWidthInCells(int widthInCells) int getWidthInCells() int getHhorizontalPadding() void add(CWidget widget) void layout() CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) void render(BaseRenderer renderer, CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CGrid/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CGrid/#setwidthincells","title":"setWidthInCells","text":"<p>void setWidthInCells(int widthInCells)</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#getwidthincells","title":"getWidthInCells","text":"<p>int getWidthInCells()</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#gethhorizontalpadding","title":"getHhorizontalPadding","text":"<p>int getHhorizontalPadding()</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#add","title":"add","text":"<p>void add(CWidget widget)</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CGrid/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CImage/","title":"CImage","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CImage/#class-cimage","title":"Class CImage","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CImage </p>"},{"location":"cupra/javadoc/common/widgets/CImage/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CImage(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CImage/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void fromResource(String res) void render(BaseRenderer renderer, CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CImage/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CImage/#fromresource","title":"fromResource","text":"<p>void fromResource(String res)</p>"},{"location":"cupra/javadoc/common/widgets/CImage/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/","title":"CLabel","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#class-clabel","title":"Class CLabel","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CLabel </p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected String text protected Align.Horizontal align"},{"location":"cupra/javadoc/common/widgets/CLabel/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CLabel(CContainer parent, String text) CLabel(CContainer parent, String text, Align.Horizontal align)"},{"location":"cupra/javadoc/common/widgets/CLabel/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description CLabel setFont(FontSpec spec) FontSpec getFontOptions() CLabel fontSize(int size) CLabel color(int color) CLabel bold() CLabel italic() CLabel shadow() CLabel fontName(String fontName) CLabel align(Align.Horizontal alignment) CLabel setText(String text) String getText() void layout() void render(BaseRenderer renderer, CMouseEvent mouse) String toString()"},{"location":"cupra/javadoc/common/widgets/CLabel/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CLabel/#text","title":"text","text":""},{"location":"cupra/javadoc/common/widgets/CLabel/#align","title":"align","text":""},{"location":"cupra/javadoc/common/widgets/CLabel/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CLabel/#setfont","title":"setFont","text":"<p>CLabel setFont(FontSpec spec)</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#getfontoptions","title":"getFontOptions","text":"<p>FontSpec getFontOptions()</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#fontsize","title":"fontSize","text":"<p>CLabel fontSize(int size)</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#color","title":"color","text":"<p>CLabel color(int color)</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#bold","title":"bold","text":"<p>CLabel bold()</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#italic","title":"italic","text":"<p>CLabel italic()</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#shadow","title":"shadow","text":"<p>CLabel shadow()</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#fontname","title":"fontName","text":"<p>CLabel fontName(String fontName)</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#align_1","title":"align","text":"<p>CLabel align(Align.Horizontal alignment)</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#settext","title":"setText","text":"<p>CLabel setText(String text)</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#gettext","title":"getText","text":"<p>String getText()</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CLabel/#tostring","title":"toString","text":"<p>String toString()</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel.CPressAction/","title":"CLinkLabel.CPressAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel.CPressAction/#interface-clinklabelcpressaction","title":"Interface CLinkLabel.CPressAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CLinkLabel.CPressAction  Enclosing Class: CLinkLabel</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel.CPressAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onClickLink(CLinkLabel click)"},{"location":"cupra/javadoc/common/widgets/CLinkLabel.CPressAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CLinkLabel.CPressAction/#onclicklink","title":"onClickLink","text":"<p>abstract void onClickLink(CLinkLabel click)</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/","title":"CLinkLabel","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#class-clinklabel","title":"Class CLinkLabel","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CLabel \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CLinkLabel </p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CLinkLabel(CContainer parent, String text, String title, String url, CLinkLabel.CPressAction onClickLink)"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setTitle(String title) String getTitle() void setUrl(String url) String getUrl() boolean mousePressed(CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#settitle","title":"setTitle","text":"<p>void setTitle(String title)</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#gettitle","title":"getTitle","text":"<p>String getTitle()</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#seturl","title":"setUrl","text":"<p>void setUrl(String url)</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#geturl","title":"getUrl","text":"<p>String getUrl()</p>"},{"location":"cupra/javadoc/common/widgets/CLinkLabel/#mousepressed","title":"mousePressed","text":"<p>boolean mousePressed(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mousePressed from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBox.ClickAction/","title":"CListBox.ClickAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CListBox.ClickAction/#interface-clistboxclickaction","title":"Interface CListBox.ClickAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CListBox.ClickAction  Enclosing Class: CListBox</p>"},{"location":"cupra/javadoc/common/widgets/CListBox.ClickAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onClick(CListBoxEntry selection)"},{"location":"cupra/javadoc/common/widgets/CListBox.ClickAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CListBox.ClickAction/#onclick","title":"onClick","text":"<p>abstract void onClick(CListBoxEntry selection)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox.SelectionChangedAction/","title":"CListBox.SelectionChangedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CListBox.SelectionChangedAction/#interface-clistboxselectionchangedaction","title":"Interface CListBox.SelectionChangedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CListBox.SelectionChangedAction  Enclosing Class: CListBox</p>"},{"location":"cupra/javadoc/common/widgets/CListBox.SelectionChangedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onSelectionChanged(CListBoxEntry selection)"},{"location":"cupra/javadoc/common/widgets/CListBox.SelectionChangedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CListBox.SelectionChangedAction/#onselectionchanged","title":"onSelectionChanged","text":"<p>abstract void onSelectionChanged(CListBoxEntry selection)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/","title":"CListBox","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#class-clistbox","title":"Class CListBox","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CContainer io.github.sandydunlop.cupra.common.widgets.CScrollableContainer \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CListBox </p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected boolean listHasBackground protected int listBackgroundColor protected boolean listHasBorder protected int listBorderColor"},{"location":"cupra/javadoc/common/widgets/CListBox/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CListBox(CContainer parent) CListBox(CContainer parent, CListBox.SelectionChangedAction onSelectionChanged)"},{"location":"cupra/javadoc/common/widgets/CListBox/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void onClick(CListBox.ClickAction action) void setBackgroundColor(int color) void setBorderColor(int color) void setSelected(CListBoxEntry entry) void setSelectedIndex(int index) CListBoxEntry getSelected() int getSelectedIndex() int getIndexOf(CListBoxEntry entry) int getItemHeight() CListBoxEntry getEntry(String key) CListBoxEntry getEntry(int index) List&lt;CWidget&gt; getEntries() int count() void add(Object[] o) synchronized void add(CListBoxEntry item) synchronized void insertAt(int index, CListBoxEntry item) void clear() void addColumn(String name, int width) int getDefaultHeight() int getDefaultWidth() void setWidth(int width) void setHeight(int height) int getCalculatedWidth() int getCalculatedHeight() void layout() void render(BaseRenderer renderer, CMouseEvent mouse) int componentVisibleWidth() protected int headerHeightUsed() protected CListBoxEntry entryAtMousePointer(CMouseEvent mouse) CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) boolean mousePressed(CMouseEvent mouse) boolean mouseDragged(CMouseEvent mouse) boolean mouseReleased(CMouseEvent mouse) void removeListBoxSelectionChangedListener(CListBoxSelectionChangedListener listener) void addListBoxSelectionChangedListener(CListBoxSelectionChangedListener listener)"},{"location":"cupra/javadoc/common/widgets/CListBox/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CListBox/#listhasbackground","title":"listHasBackground","text":""},{"location":"cupra/javadoc/common/widgets/CListBox/#listbackgroundcolor","title":"listBackgroundColor","text":""},{"location":"cupra/javadoc/common/widgets/CListBox/#listhasborder","title":"listHasBorder","text":""},{"location":"cupra/javadoc/common/widgets/CListBox/#listbordercolor","title":"listBorderColor","text":""},{"location":"cupra/javadoc/common/widgets/CListBox/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CListBox/#onclick","title":"onClick","text":"<p>void onClick(CListBox.ClickAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#setbackgroundcolor","title":"setBackgroundColor","text":"<p>void setBackgroundColor(int color)</p> <p>Overrides:</p> <p>setBackgroundColor from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#setbordercolor","title":"setBorderColor","text":"<p>void setBorderColor(int color)</p> <p>Overrides:</p> <p>setBorderColor from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#setselected","title":"setSelected","text":"<p>void setSelected(CListBoxEntry entry)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#setselectedindex","title":"setSelectedIndex","text":"<p>void setSelectedIndex(int index)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getselected","title":"getSelected","text":"<p>CListBoxEntry getSelected()</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getselectedindex","title":"getSelectedIndex","text":"<p>int getSelectedIndex()</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getindexof","title":"getIndexOf","text":"<p>int getIndexOf(CListBoxEntry entry)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getitemheight","title":"getItemHeight","text":"<p>int getItemHeight()</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getentry","title":"getEntry","text":"<p>CListBoxEntry getEntry(String key)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getentry_1","title":"getEntry","text":"<p>CListBoxEntry getEntry(int index)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getentries","title":"getEntries","text":"<p>List&lt;CWidget&gt; getEntries()</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#count","title":"count","text":"<p>int count()</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#add","title":"add","text":"<p>void add(Object[] o)</p> <p>Overrides:</p> <p>add from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#add_1","title":"add","text":"<p>synchronized void add(CListBoxEntry item)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#insertat","title":"insertAt","text":"<p>synchronized void insertAt(int index, CListBoxEntry item)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#clear","title":"clear","text":"<p>void clear()</p> <p>Overrides:</p> <p>clear from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#addcolumn","title":"addColumn","text":"<p>void addColumn(String name, int width)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getdefaultheight","title":"getDefaultHeight","text":"<p>int getDefaultHeight()</p> <p>Overrides:</p> <p>getDefaultHeight from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getdefaultwidth","title":"getDefaultWidth","text":"<p>int getDefaultWidth()</p> <p>Overrides:</p> <p>getDefaultWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#setwidth","title":"setWidth","text":"<p>void setWidth(int width)</p> <p>Overrides:</p> <p>setWidth from CScrollableContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#setheight","title":"setHeight","text":"<p>void setHeight(int height)</p> <p>Overrides:</p> <p>setHeight from CScrollableContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getcalculatedwidth","title":"getCalculatedWidth","text":"<p>int getCalculatedWidth()</p> <p>Overrides:</p> <p>getCalculatedWidth from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#getcalculatedheight","title":"getCalculatedHeight","text":"<p>int getCalculatedHeight()</p> <p>Overrides:</p> <p>getCalculatedHeight from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CScrollableContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CScrollableContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#componentvisiblewidth","title":"componentVisibleWidth","text":"<p>int componentVisibleWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#headerheightused","title":"headerHeightUsed","text":"<p>protected int headerHeightUsed()</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#entryatmousepointer","title":"entryAtMousePointer","text":"<p>protected CListBoxEntry entryAtMousePointer(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CScrollableContainer</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#mousepressed","title":"mousePressed","text":"<p>boolean mousePressed(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mousePressed from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#mousedragged","title":"mouseDragged","text":"<p>boolean mouseDragged(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseDragged from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#mousereleased","title":"mouseReleased","text":"<p>boolean mouseReleased(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseReleased from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#removelistboxselectionchangedlistener","title":"removeListBoxSelectionChangedListener","text":"<p>void removeListBoxSelectionChangedListener(CListBoxSelectionChangedListener listener)</p>"},{"location":"cupra/javadoc/common/widgets/CListBox/#addlistboxselectionchangedlistener","title":"addListBoxSelectionChangedListener","text":"<p>void addListBoxSelectionChangedListener(CListBoxSelectionChangedListener listener)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/","title":"CListBoxColumn","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#class-clistboxcolumn","title":"Class CListBoxColumn","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CListBoxColumn </p>"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CListBoxColumn() CListBoxColumn(String name, int width)"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setName(String name) String getName() void setWidth(int width) int getWidth()"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#setname","title":"setName","text":"<p>void setName(String name)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#setwidth","title":"setWidth","text":"<p>void setWidth(int width)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxColumn/#getwidth","title":"getWidth","text":"<p>int getWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/","title":"CListBoxEntry","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#class-clistboxentry","title":"Class CListBoxEntry","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CListBoxEntry </p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CListBoxEntry(String title, String key, Object value) CListBoxEntry(String title, Object value)"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setValues(Object[] values) void setParent(CContainer parent) void setSelected(boolean selected) boolean isSelected() Object getValue() String getKey() void setKey(String key) void setListBox(CListBox listBox) void recalculateSize() void render(BaseRenderer renderer, CMouseEvent mouse) boolean isHovered(CMouseEvent mouse) String getText() String toString()"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#setvalues","title":"setValues","text":"<p>void setValues(Object[] values)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#setparent","title":"setParent","text":"<p>void setParent(CContainer parent)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#setselected","title":"setSelected","text":"<p>void setSelected(boolean selected)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#isselected","title":"isSelected","text":"<p>boolean isSelected()</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#getvalue","title":"getValue","text":"<p>Object getValue()</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#getkey","title":"getKey","text":"<p>String getKey()</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#setkey","title":"setKey","text":"<p>void setKey(String key)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#setlistbox","title":"setListBox","text":"<p>void setListBox(CListBox listBox)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#recalculatesize","title":"recalculateSize","text":"<p>void recalculateSize()</p> <p>Overrides:</p> <p>recalculateSize from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#ishovered","title":"isHovered","text":"<p>boolean isHovered(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#gettext","title":"getText","text":"<p>String getText()</p>"},{"location":"cupra/javadoc/common/widgets/CListBoxEntry/#tostring","title":"toString","text":"<p>String toString()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox.NumberChangedAction/","title":"CNumberBox.NumberChangedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox.NumberChangedAction/#interface-cnumberboxnumberchangedaction","title":"Interface CNumberBox.NumberChangedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CNumberBox.NumberChangedAction  Enclosing Class: CNumberBox</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox.NumberChangedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onNumberChanged(CNumberBox number)"},{"location":"cupra/javadoc/common/widgets/CNumberBox.NumberChangedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox.NumberChangedAction/#onnumberchanged","title":"onNumberChanged","text":"<p>abstract void onNumberChanged(CNumberBox number)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/","title":"CNumberBox","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#class-cnumberbox","title":"Class CNumberBox","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CNumberBox </p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected CTextBox textbox protected CSymbolButton upButton protected CSymbolButton downButton protected int buttonWidth protected CNumberBox.NumberChangedAction onNumberChanged protected double number protected int precision protected double increment protected double min protected double max protected boolean rangeConstrained protected String decimalFormat"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CNumberBox(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setWidth(int width) Sets the width of the number box component. void setEditable(boolean editable) boolean getEditable() void setPrecision(int digits) int getPrecision() void setIncrement(double increment) double getIncrement() void setMin(double min) double getMin() void setMax(double max) double getMax() void setNumber(double number) double getDouble() float getFloat() int getInt() void setRangeConstrained(boolean constrained) void layout() void render(BaseRenderer renderer, CMouseEvent mouse) CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) void onNumberChanged(CNumberBox.NumberChangedAction action)"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#textbox","title":"textbox","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#upbutton","title":"upButton","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#downbutton","title":"downButton","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#buttonwidth","title":"buttonWidth","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#onnumberchanged","title":"onNumberChanged","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#number","title":"number","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#precision","title":"precision","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#increment","title":"increment","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#min","title":"min","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#max","title":"max","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#rangeconstrained","title":"rangeConstrained","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#decimalformat","title":"decimalFormat","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CNumberBox/#setwidth","title":"setWidth","text":"<p>void setWidth(int width)</p> <p>Sets the width of the number box component.</p> <p>Parameters:</p> <p><code>width</code> - the total width to set for the number box, in pixels</p> <p>Overrides:</p> <p>setWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#seteditable","title":"setEditable","text":"<p>void setEditable(boolean editable)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#geteditable","title":"getEditable","text":"<p>boolean getEditable()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#setprecision","title":"setPrecision","text":"<p>void setPrecision(int digits)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#getprecision","title":"getPrecision","text":"<p>int getPrecision()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#setincrement","title":"setIncrement","text":"<p>void setIncrement(double increment)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#getincrement","title":"getIncrement","text":"<p>double getIncrement()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#setmin","title":"setMin","text":"<p>void setMin(double min)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#getmin","title":"getMin","text":"<p>double getMin()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#setmax","title":"setMax","text":"<p>void setMax(double max)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#getmax","title":"getMax","text":"<p>double getMax()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#setnumber","title":"setNumber","text":"<p>void setNumber(double number)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#getdouble","title":"getDouble","text":"<p>double getDouble()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#getfloat","title":"getFloat","text":"<p>float getFloat()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#getint","title":"getInt","text":"<p>int getInt()</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#setrangeconstrained","title":"setRangeConstrained","text":"<p>void setRangeConstrained(boolean constrained)</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CNumberBox/#onnumberchanged_1","title":"onNumberChanged","text":"<p>void onNumberChanged(CNumberBox.NumberChangedAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollBar/","title":"CScrollBar","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CScrollBar/#class-cscrollbar","title":"Class CScrollBar","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CAbstractScrollable \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CScrollBar </p>"},{"location":"cupra/javadoc/common/widgets/CScrollBar/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected static final int DEFAULT_THICKNESS"},{"location":"cupra/javadoc/common/widgets/CScrollBar/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CScrollBar(CContainer parent) CScrollBar(CContainer parent, Orientation orientation)"},{"location":"cupra/javadoc/common/widgets/CScrollBar/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void render(BaseRenderer renderer, CMouseEvent mouse) synchronized void scrollTo(CWidget widget)"},{"location":"cupra/javadoc/common/widgets/CScrollBar/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CScrollBar/#default_thickness","title":"DEFAULT_THICKNESS","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/widgets/CScrollBar/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CScrollBar/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CAbstractScrollable</p>"},{"location":"cupra/javadoc/common/widgets/CScrollBar/#scrollto","title":"scrollTo","text":"<p>synchronized void scrollTo(CWidget widget)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/","title":"CScrollableContainer","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#class-cscrollablecontainer","title":"Class CScrollableContainer","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CContainer \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CScrollableContainer </p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected CContainer content protected CScrollBar verticalScrollBar protected CScrollBar horizontalScrollBar protected double verticalScrollAmount protected double horizontalScrollAmount protected boolean scrolling protected boolean horizontalScrollingEnabled"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CScrollableContainer(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setHorizontalScrollingEnabled(boolean enabled) boolean getHorizontalScrollingEnabled() void setX(int x) void setY(int y) void setWidth(int width) void setHeight(int height) protected int verticalScrollBarWidthUsed() protected int horizontalScrollBarHeightUsed() void layout() void render(BaseRenderer renderer, CMouseEvent mouse) CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) protected CWidget internalHoveredWidget(CMouseEvent mouse) boolean mouseScrolled(CMouseEvent mouse) protected synchronized void calculateHeight() protected synchronized void calculateWidth() synchronized void setContentHeight(int height) synchronized void setContentWidth(int width) synchronized int getContentHeight() synchronized int getContentWidth() int getVerticalMaxScroll() int getHorizontalMaxScroll() protected int getVerticalMaxPosition() protected int getHorizontalMaxPosition() synchronized void scrollTo(CWidget widget) double getVerticalScrollAmount() void setVerticalScrollAmount(double amount) void updateContentPosition() double getHorizontalScrollAmount() void setHorizontalScrollAmount(double amount)"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#content","title":"content","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#verticalscrollbar","title":"verticalScrollBar","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#horizontalscrollbar","title":"horizontalScrollBar","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#verticalscrollamount","title":"verticalScrollAmount","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#horizontalscrollamount","title":"horizontalScrollAmount","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#scrolling","title":"scrolling","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#horizontalscrollingenabled","title":"horizontalScrollingEnabled","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#sethorizontalscrollingenabled","title":"setHorizontalScrollingEnabled","text":"<p>void setHorizontalScrollingEnabled(boolean enabled)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#gethorizontalscrollingenabled","title":"getHorizontalScrollingEnabled","text":"<p>boolean getHorizontalScrollingEnabled()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#setx","title":"setX","text":"<p>void setX(int x)</p> <p>Overrides:</p> <p>setX from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#sety","title":"setY","text":"<p>void setY(int y)</p> <p>Overrides:</p> <p>setY from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#setwidth","title":"setWidth","text":"<p>void setWidth(int width)</p> <p>Overrides:</p> <p>setWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#setheight","title":"setHeight","text":"<p>void setHeight(int height)</p> <p>Overrides:</p> <p>setHeight from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#verticalscrollbarwidthused","title":"verticalScrollBarWidthUsed","text":"<p>protected int verticalScrollBarWidthUsed()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#horizontalscrollbarheightused","title":"horizontalScrollBarHeightUsed","text":"<p>protected int horizontalScrollBarHeightUsed()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Overrides:</p> <p>hoveredWidget from CContainer</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#internalhoveredwidget","title":"internalHoveredWidget","text":"<p>protected CWidget internalHoveredWidget(CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#mousescrolled","title":"mouseScrolled","text":"<p>boolean mouseScrolled(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseScrolled from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#calculateheight","title":"calculateHeight","text":"<p>protected synchronized void calculateHeight()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#calculatewidth","title":"calculateWidth","text":"<p>protected synchronized void calculateWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#setcontentheight","title":"setContentHeight","text":"<p>synchronized void setContentHeight(int height)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#setcontentwidth","title":"setContentWidth","text":"<p>synchronized void setContentWidth(int width)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#getcontentheight","title":"getContentHeight","text":"<p>synchronized int getContentHeight()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#getcontentwidth","title":"getContentWidth","text":"<p>synchronized int getContentWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#getverticalmaxscroll","title":"getVerticalMaxScroll","text":"<p>int getVerticalMaxScroll()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#gethorizontalmaxscroll","title":"getHorizontalMaxScroll","text":"<p>int getHorizontalMaxScroll()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#getverticalmaxposition","title":"getVerticalMaxPosition","text":"<p>protected int getVerticalMaxPosition()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#gethorizontalmaxposition","title":"getHorizontalMaxPosition","text":"<p>protected int getHorizontalMaxPosition()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#scrollto","title":"scrollTo","text":"<p>synchronized void scrollTo(CWidget widget)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#getverticalscrollamount","title":"getVerticalScrollAmount","text":"<p>double getVerticalScrollAmount()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#setverticalscrollamount","title":"setVerticalScrollAmount","text":"<p>void setVerticalScrollAmount(double amount)</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#updatecontentposition","title":"updateContentPosition","text":"<p>void updateContentPosition()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#gethorizontalscrollamount","title":"getHorizontalScrollAmount","text":"<p>double getHorizontalScrollAmount()</p>"},{"location":"cupra/javadoc/common/widgets/CScrollableContainer/#sethorizontalscrollamount","title":"setHorizontalScrollAmount","text":"<p>void setHorizontalScrollAmount(double amount)</p>"},{"location":"cupra/javadoc/common/widgets/CSlider/","title":"CSlider","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CSlider/#class-cslider","title":"Class CSlider","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CAbstractScrollable \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CSlider </p>"},{"location":"cupra/javadoc/common/widgets/CSlider/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CSlider(CContainer parent) CSlider(CContainer parent, Orientation orientation)"},{"location":"cupra/javadoc/common/widgets/CSlider/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setValue(double value) double getValue() protected double getMaxScroll() void render(BaseRenderer renderer, CMouseEvent mouse) protected int getScrollerSize()"},{"location":"cupra/javadoc/common/widgets/CSlider/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CSlider/#setvalue","title":"setValue","text":"<p>void setValue(double value)</p>"},{"location":"cupra/javadoc/common/widgets/CSlider/#getvalue","title":"getValue","text":"<p>double getValue()</p>"},{"location":"cupra/javadoc/common/widgets/CSlider/#getmaxscroll","title":"getMaxScroll","text":"<p>protected double getMaxScroll()</p> <p>Overrides:</p> <p>getMaxScroll from CAbstractScrollable</p>"},{"location":"cupra/javadoc/common/widgets/CSlider/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CAbstractScrollable</p>"},{"location":"cupra/javadoc/common/widgets/CSlider/#getscrollersize","title":"getScrollerSize","text":"<p>protected int getScrollerSize()</p>"},{"location":"cupra/javadoc/common/widgets/CSpacer/","title":"CSpacer","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CSpacer/#class-cspacer","title":"Class CSpacer","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CSpacer </p>"},{"location":"cupra/javadoc/common/widgets/CSpacer/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CSpacer(CContainer parent, int gap)"},{"location":"cupra/javadoc/common/widgets/CSpacer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void layout() void render(BaseRenderer renderer, CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CSpacer/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CSpacer/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CSpacer/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CSymbolButton/","title":"CSymbolButton","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CSymbolButton/#class-csymbolbutton","title":"Class CSymbolButton","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CButton \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CSymbolButton </p>"},{"location":"cupra/javadoc/common/widgets/CSymbolButton/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CSymbolButton(CContainer parent, Symbol symbol, CButton.CClickAction onClick)"},{"location":"cupra/javadoc/common/widgets/CTextBox.EnterPressedAction/","title":"CTextBox.EnterPressedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.EnterPressedAction/#interface-ctextboxenterpressedaction","title":"Interface CTextBox.EnterPressedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CTextBox.EnterPressedAction  Enclosing Class: CTextBox</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.EnterPressedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onEnterPressed(CTextBox enter)"},{"location":"cupra/javadoc/common/widgets/CTextBox.EnterPressedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox.EnterPressedAction/#onenterpressed","title":"onEnterPressed","text":"<p>abstract void onEnterPressed(CTextBox enter)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.KeyPressedAction/","title":"CTextBox.KeyPressedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.KeyPressedAction/#interface-ctextboxkeypressedaction","title":"Interface CTextBox.KeyPressedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CTextBox.KeyPressedAction  Enclosing Class: CTextBox</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.KeyPressedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onKeyPressed(CKeyEvent key)"},{"location":"cupra/javadoc/common/widgets/CTextBox.KeyPressedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox.KeyPressedAction/#onkeypressed","title":"onKeyPressed","text":"<p>abstract void onKeyPressed(CKeyEvent key)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.MousClickedAction/","title":"CTextBox.MousClickedAction","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.MousClickedAction/#interface-ctextboxmousclickedaction","title":"Interface CTextBox.MousClickedAction","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CTextBox.MousClickedAction  Enclosing Class: CTextBox</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox.MousClickedAction/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void onMouseClicked(CTextBox enter)"},{"location":"cupra/javadoc/common/widgets/CTextBox.MousClickedAction/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox.MousClickedAction/#onmouseclicked","title":"onMouseClicked","text":"<p>abstract void onMouseClicked(CTextBox enter)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/","title":"CTextBox","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#class-ctextbox","title":"Class CTextBox","text":"<p>java.lang.Object io.github.sandydunlop.cupra.common.widgets.CWidget io.github.sandydunlop.cupra.common.widgets.CLabel \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CTextBox </p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description static final int TEXT_PADDING protected int caretPos protected double mousePressX protected double mousePressY protected int selectionStart protected int selectionEnd protected int selectFromPos protected int selectToPos protected boolean selecting protected boolean editable"},{"location":"cupra/javadoc/common/widgets/CTextBox/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CTextBox(CContainer parent) CTextBox(CContainer parent, String text)"},{"location":"cupra/javadoc/common/widgets/CTextBox/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description CTextBox setText(String text) String getText() void setEditable(boolean editable) boolean getEditable() int getDefaultWidth() int getDefaultHeight() void layout() void render(BaseRenderer renderer, CMouseEvent mouse) void renderSelection(BaseRenderer renderer, int renderX) void onKeyPressed(CTextBox.KeyPressedAction action) void onEnterPressed(CTextBox.EnterPressedAction action) void handleControlKeypress(CKeyEvent e) void charTyped(CKeyEvent e) void keyPressed(CKeyEvent k) void onMouseClicked(CTextBox.MousClickedAction action) boolean mouseDoubleClicked(CMouseEvent mouse) boolean mouseTripleClicked(CMouseEvent mouse) boolean mousePressed(CMouseEvent mouse) boolean mouseScrolled(CMouseEvent mouse) boolean mouseDragged(CMouseEvent mouse) String getSelectedText()"},{"location":"cupra/javadoc/common/widgets/CTextBox/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#text_padding","title":"TEXT_PADDING","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#caretpos","title":"caretPos","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#mousepressx","title":"mousePressX","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#mousepressy","title":"mousePressY","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#selectionstart","title":"selectionStart","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#selectionend","title":"selectionEnd","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#selectfrompos","title":"selectFromPos","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#selecttopos","title":"selectToPos","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#selecting","title":"selecting","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#editable","title":"editable","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CTextBox/#settext","title":"setText","text":"<p>CTextBox setText(String text)</p> <p>Overrides:</p> <p>setText from CLabel</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#gettext","title":"getText","text":"<p>String getText()</p> <p>Overrides:</p> <p>getText from CLabel</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#seteditable","title":"setEditable","text":"<p>void setEditable(boolean editable)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#geteditable","title":"getEditable","text":"<p>boolean getEditable()</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#getdefaultwidth","title":"getDefaultWidth","text":"<p>int getDefaultWidth()</p> <p>Overrides:</p> <p>getDefaultWidth from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#getdefaultheight","title":"getDefaultHeight","text":"<p>int getDefaultHeight()</p> <p>Overrides:</p> <p>getDefaultHeight from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#layout","title":"layout","text":"<p>void layout()</p> <p>Overrides:</p> <p>layout from CLabel</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p> <p>Overrides:</p> <p>render from CLabel</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#renderselection","title":"renderSelection","text":"<p>void renderSelection(BaseRenderer renderer, int renderX)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#onkeypressed","title":"onKeyPressed","text":"<p>void onKeyPressed(CTextBox.KeyPressedAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#onenterpressed","title":"onEnterPressed","text":"<p>void onEnterPressed(CTextBox.EnterPressedAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#handlecontrolkeypress","title":"handleControlKeypress","text":"<p>void handleControlKeypress(CKeyEvent e)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#chartyped","title":"charTyped","text":"<p>void charTyped(CKeyEvent e)</p> <p>Overrides:</p> <p>charTyped from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#keypressed","title":"keyPressed","text":"<p>void keyPressed(CKeyEvent k)</p> <p>Overrides:</p> <p>keyPressed from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#onmouseclicked","title":"onMouseClicked","text":"<p>void onMouseClicked(CTextBox.MousClickedAction action)</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#mousedoubleclicked","title":"mouseDoubleClicked","text":"<p>boolean mouseDoubleClicked(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseDoubleClicked from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#mousetripleclicked","title":"mouseTripleClicked","text":"<p>boolean mouseTripleClicked(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseTripleClicked from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#mousepressed","title":"mousePressed","text":"<p>boolean mousePressed(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mousePressed from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#mousescrolled","title":"mouseScrolled","text":"<p>boolean mouseScrolled(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseScrolled from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#mousedragged","title":"mouseDragged","text":"<p>boolean mouseDragged(CMouseEvent mouse)</p> <p>Overrides:</p> <p>mouseDragged from CWidget</p>"},{"location":"cupra/javadoc/common/widgets/CTextBox/#getselectedtext","title":"getSelectedText","text":"<p>String getSelectedText()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/","title":"CWidget","text":"<p>Package io.github.sandydunlop.cupra.common.widgets</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#class-cwidget","title":"Class CWidget","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.common.widgets.CWidget  All Implemented Interfaces: KeyboardInput, MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected static final Logger LOGGER protected FontSpec font protected String id protected CContainer parent protected int debug protected int x protected int y protected int width protected int height protected int maxWidth protected int maxHeight protected int color protected int padding protected boolean resizeToContents protected boolean focusable protected boolean focused protected boolean expandable protected boolean scrollable protected boolean visible protected boolean enabled protected boolean usesCustomLayout protected boolean mouseOverEffects protected boolean hyperlink protected String tooltip protected List&lt;CWidget&gt; contents protected MousePointer mousePointer"},{"location":"cupra/javadoc/common/widgets/CWidget/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CWidget(CContainer parent)"},{"location":"cupra/javadoc/common/widgets/CWidget/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void setBaseFontSize(int size) static int getBaseFontSize() static void setFontCacheInvalidated(boolean invalidated) static boolean isFontCacheInvalidated() void setId(String id) String getId() boolean hasMosueOverEffects() void setMouseOverEffects(boolean effects) void setEnabled(boolean flag) boolean isEnabled() static void setPalette(ColorPalette p) static ColorPalette getPalette() void setTooltip(String tooltip) String getTooltip() CWidget getParent() void setMaxWidth(int width) int getMaxWidth() void setMaxHeight(int height) int getMaxHeight() void setUsesCustomLayout(boolean uses) boolean usesCustomLayout() void setX(int x) void setY(int y) void setWidth(int width) void setHeight(int height) void setExpandable(boolean expandable) boolean isExpandable() void setScrollable(boolean scrollable) boolean isScrollable() int getX() int getY() int getCalculatedX() int getCalculatedY() int getHeight() int getWidth() int getRight() int getDefaultHeight() int getDefaultWidth() int getBottom() void setFocused(boolean focused) CWidget setDebug(int color) int getDebug() void setPadding(int padding) int getPadding() void setIsHoveringOverHyperlink(boolean b) boolean isHoveringOverHyperlink() void setResizeToContents(boolean on) boolean getResizeToContents() void setMousePointer(MousePointer pointer) MousePointer getMousePointer() void setFocusable(boolean focusable) boolean isFocusable() boolean isFocused() void setVisible(boolean visible) boolean isVisible() int getCalculatedWidth() int getCalculatedHeight() void recalculateSize() protected void giveWidthHint(String text, int extra) protected void giveHeightHint(String text, int extra) Dimension size() List&lt;CWidget&gt; contents() void layout() boolean isMouseOver(CMouseEvent mouse) boolean mouseReleased(CMouseEvent mouse) boolean mousePressed(CMouseEvent mouse) boolean mouseClicked(CMouseEvent mouse) boolean mouseDoubleClicked(CMouseEvent mouse) boolean mouseTripleClicked(CMouseEvent mouse) boolean mouseScrolled(CMouseEvent mouse) boolean mouseHovered(CMouseEvent mouse) boolean mouseDragged(CMouseEvent mouse) CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth) void charTyped(CKeyEvent e) void keyPressed(CKeyEvent k) void render(BaseRenderer renderer, CMouseEvent mouse)"},{"location":"cupra/javadoc/common/widgets/CWidget/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#logger","title":"LOGGER","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#font","title":"font","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#id","title":"id","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#parent","title":"parent","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#debug","title":"debug","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#x","title":"x","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#y","title":"y","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#width","title":"width","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#height","title":"height","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#maxwidth","title":"maxWidth","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#maxheight","title":"maxHeight","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#color","title":"color","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#padding","title":"padding","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#resizetocontents","title":"resizeToContents","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#focusable","title":"focusable","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#focused","title":"focused","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#expandable","title":"expandable","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#scrollable","title":"scrollable","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#visible","title":"visible","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#enabled","title":"enabled","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#usescustomlayout","title":"usesCustomLayout","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#mouseovereffects","title":"mouseOverEffects","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#hyperlink","title":"hyperlink","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#tooltip","title":"tooltip","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#contents","title":"contents","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#mousepointer","title":"mousePointer","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/common/widgets/CWidget/#setbasefontsize","title":"setBaseFontSize","text":"<p>static void setBaseFontSize(int size)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getbasefontsize","title":"getBaseFontSize","text":"<p>static int getBaseFontSize()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setfontcacheinvalidated","title":"setFontCacheInvalidated","text":"<p>static void setFontCacheInvalidated(boolean invalidated)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#isfontcacheinvalidated","title":"isFontCacheInvalidated","text":"<p>static boolean isFontCacheInvalidated()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setid","title":"setId","text":"<p>void setId(String id)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getid","title":"getId","text":"<p>String getId()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#hasmosueovereffects","title":"hasMosueOverEffects","text":"<p>boolean hasMosueOverEffects()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setmouseovereffects","title":"setMouseOverEffects","text":"<p>void setMouseOverEffects(boolean effects)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setenabled","title":"setEnabled","text":"<p>void setEnabled(boolean flag)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#isenabled","title":"isEnabled","text":"<p>boolean isEnabled()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setpalette","title":"setPalette","text":"<p>static void setPalette(ColorPalette p)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getpalette","title":"getPalette","text":"<p>static ColorPalette getPalette()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#settooltip","title":"setTooltip","text":"<p>void setTooltip(String tooltip)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#gettooltip","title":"getTooltip","text":"<p>String getTooltip()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getparent","title":"getParent","text":"<p>CWidget getParent()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setmaxwidth","title":"setMaxWidth","text":"<p>void setMaxWidth(int width)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getmaxwidth","title":"getMaxWidth","text":"<p>int getMaxWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setmaxheight","title":"setMaxHeight","text":"<p>void setMaxHeight(int height)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getmaxheight","title":"getMaxHeight","text":"<p>int getMaxHeight()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setusescustomlayout","title":"setUsesCustomLayout","text":"<p>void setUsesCustomLayout(boolean uses)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#usescustomlayout_1","title":"usesCustomLayout","text":"<p>boolean usesCustomLayout()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setx","title":"setX","text":"<p>void setX(int x)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#sety","title":"setY","text":"<p>void setY(int y)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setwidth","title":"setWidth","text":"<p>void setWidth(int width)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setheight","title":"setHeight","text":"<p>void setHeight(int height)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setexpandable","title":"setExpandable","text":"<p>void setExpandable(boolean expandable)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#isexpandable","title":"isExpandable","text":"<p>boolean isExpandable()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setscrollable","title":"setScrollable","text":"<p>void setScrollable(boolean scrollable)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#isscrollable","title":"isScrollable","text":"<p>boolean isScrollable()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getx","title":"getX","text":"<p>int getX()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#gety","title":"getY","text":"<p>int getY()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getcalculatedx","title":"getCalculatedX","text":"<p>int getCalculatedX()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getcalculatedy","title":"getCalculatedY","text":"<p>int getCalculatedY()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getheight","title":"getHeight","text":"<p>int getHeight()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getwidth","title":"getWidth","text":"<p>int getWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getright","title":"getRight","text":"<p>int getRight()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getdefaultheight","title":"getDefaultHeight","text":"<p>int getDefaultHeight()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getdefaultwidth","title":"getDefaultWidth","text":"<p>int getDefaultWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getbottom","title":"getBottom","text":"<p>int getBottom()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setfocused","title":"setFocused","text":"<p>void setFocused(boolean focused)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setdebug","title":"setDebug","text":"<p>CWidget setDebug(int color)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getdebug","title":"getDebug","text":"<p>int getDebug()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setpadding","title":"setPadding","text":"<p>void setPadding(int padding)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getpadding","title":"getPadding","text":"<p>int getPadding()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setishoveringoverhyperlink","title":"setIsHoveringOverHyperlink","text":"<p>void setIsHoveringOverHyperlink(boolean b)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#ishoveringoverhyperlink","title":"isHoveringOverHyperlink","text":"<p>boolean isHoveringOverHyperlink()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setresizetocontents","title":"setResizeToContents","text":"<p>void setResizeToContents(boolean on)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getresizetocontents","title":"getResizeToContents","text":"<p>boolean getResizeToContents()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setmousepointer","title":"setMousePointer","text":"<p>void setMousePointer(MousePointer pointer)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getmousepointer","title":"getMousePointer","text":"<p>MousePointer getMousePointer()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setfocusable","title":"setFocusable","text":"<p>void setFocusable(boolean focusable)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#isfocusable","title":"isFocusable","text":"<p>boolean isFocusable()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#isfocused","title":"isFocused","text":"<p>boolean isFocused()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#setvisible","title":"setVisible","text":"<p>void setVisible(boolean visible)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#isvisible","title":"isVisible","text":"<p>boolean isVisible()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getcalculatedwidth","title":"getCalculatedWidth","text":"<p>int getCalculatedWidth()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#getcalculatedheight","title":"getCalculatedHeight","text":"<p>int getCalculatedHeight()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#recalculatesize","title":"recalculateSize","text":"<p>void recalculateSize()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#givewidthhint","title":"giveWidthHint","text":"<p>protected void giveWidthHint(String text, int extra)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#giveheighthint","title":"giveHeightHint","text":"<p>protected void giveHeightHint(String text, int extra)</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#size","title":"size","text":"<p>Dimension size()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#contents_1","title":"contents","text":"<p>List&lt;CWidget&gt; contents()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#layout","title":"layout","text":"<p>void layout()</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#ismouseover","title":"isMouseOver","text":"<p>boolean isMouseOver(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mousereleased","title":"mouseReleased","text":"<p>boolean mouseReleased(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mousepressed","title":"mousePressed","text":"<p>boolean mousePressed(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mouseclicked","title":"mouseClicked","text":"<p>boolean mouseClicked(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mousedoubleclicked","title":"mouseDoubleClicked","text":"<p>boolean mouseDoubleClicked(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mousetripleclicked","title":"mouseTripleClicked","text":"<p>boolean mouseTripleClicked(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mousescrolled","title":"mouseScrolled","text":"<p>boolean mouseScrolled(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mousehovered","title":"mouseHovered","text":"<p>boolean mouseHovered(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#mousedragged","title":"mouseDragged","text":"<p>boolean mouseDragged(CMouseEvent mouse)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#hoveredwidget","title":"hoveredWidget","text":"<p>CWidget hoveredWidget(CMouseEvent mouse, DepthLimit depth)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.MouseInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#chartyped","title":"charTyped","text":"<p>void charTyped(CKeyEvent e)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.KeyboardInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#keypressed","title":"keyPressed","text":"<p>void keyPressed(CKeyEvent k)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.input.KeyboardInput</p>"},{"location":"cupra/javadoc/common/widgets/CWidget/#render","title":"render","text":"<p>void render(BaseRenderer renderer, CMouseEvent mouse)</p>"},{"location":"cupra/javadoc/platform/","title":"Package io.github.sandydunlop.cupra.platform","text":"Classes Class Description PlatformServices"},{"location":"cupra/javadoc/platform/PlatformServices/","title":"PlatformServices","text":"<p>Package io.github.sandydunlop.cupra.platform</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#class-platformservices","title":"Class PlatformServices","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.PlatformServices </p>"},{"location":"cupra/javadoc/platform/PlatformServices/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected static PlatformServices instance protected CupraApp app protected int width protected int height"},{"location":"cupra/javadoc/platform/PlatformServices/#constructor-summary","title":"Constructor Summary","text":"Constructor Description PlatformServices()"},{"location":"cupra/javadoc/platform/PlatformServices/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static synchronized PlatformServices getInstance() void setDebugLogging(boolean enable) boolean isDebugLogging() Path getConfigDir() boolean isCursorVisible() void setCloseRequested(boolean b) boolean closeRequested() void open(CupraScreen screen) void close(CupraScreen screen) void openLinkInBrowser(String address) CupraApp getApp() void setApp(CupraApp app) int getWidth() int getHeight() void setWindowTitle(CupraScreen screen, String title) void screenChanged(CupraScreen screen) void render() void render(CWidget widget) void setSize(int width, int height) void setOverlaid(CWidget widget, CWidget parent) CWidget getOverlaid() void setWindowSize(CupraScreen screen, int width, int height) void showNotification(String message) boolean isMacOS() String getClipboardText() void copyTextToClipboard(String text) void setInvertMouseScrolling(boolean invert) boolean getInvertMouseScrolling()"},{"location":"cupra/javadoc/platform/PlatformServices/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/platform/PlatformServices/#instance","title":"instance","text":""},{"location":"cupra/javadoc/platform/PlatformServices/#app","title":"app","text":""},{"location":"cupra/javadoc/platform/PlatformServices/#width","title":"width","text":""},{"location":"cupra/javadoc/platform/PlatformServices/#height","title":"height","text":""},{"location":"cupra/javadoc/platform/PlatformServices/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/PlatformServices/#getinstance","title":"getInstance","text":"<p>static synchronized PlatformServices getInstance()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setdebuglogging","title":"setDebugLogging","text":"<p>void setDebugLogging(boolean enable)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#isdebuglogging","title":"isDebugLogging","text":"<p>boolean isDebugLogging()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#getconfigdir","title":"getConfigDir","text":"<p>Path getConfigDir()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#iscursorvisible","title":"isCursorVisible","text":"<p>boolean isCursorVisible()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setcloserequested","title":"setCloseRequested","text":"<p>void setCloseRequested(boolean b)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#closerequested","title":"closeRequested","text":"<p>boolean closeRequested()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#open","title":"open","text":"<p>void open(CupraScreen screen)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#close","title":"close","text":"<p>void close(CupraScreen screen)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#openlinkinbrowser","title":"openLinkInBrowser","text":"<p>void openLinkInBrowser(String address)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#getapp","title":"getApp","text":"<p>CupraApp getApp()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setapp","title":"setApp","text":"<p>void setApp(CupraApp app)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#getwidth","title":"getWidth","text":"<p>int getWidth()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#getheight","title":"getHeight","text":"<p>int getHeight()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setwindowtitle","title":"setWindowTitle","text":"<p>void setWindowTitle(CupraScreen screen, String title)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#screenchanged","title":"screenChanged","text":"<p>void screenChanged(CupraScreen screen)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#render","title":"render","text":"<p>void render()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#render_1","title":"render","text":"<p>void render(CWidget widget)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setsize","title":"setSize","text":"<p>void setSize(int width, int height)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setoverlaid","title":"setOverlaid","text":"<p>void setOverlaid(CWidget widget, CWidget parent)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#getoverlaid","title":"getOverlaid","text":"<p>CWidget getOverlaid()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setwindowsize","title":"setWindowSize","text":"<p>void setWindowSize(CupraScreen screen, int width, int height)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#shownotification","title":"showNotification","text":"<p>void showNotification(String message)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#ismacos","title":"isMacOS","text":"<p>boolean isMacOS()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#getclipboardtext","title":"getClipboardText","text":"<p>String getClipboardText()</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#copytexttoclipboard","title":"copyTextToClipboard","text":"<p>void copyTextToClipboard(String text)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#setinvertmousescrolling","title":"setInvertMouseScrolling","text":"<p>void setInvertMouseScrolling(boolean invert)</p>"},{"location":"cupra/javadoc/platform/PlatformServices/#getinvertmousescrolling","title":"getInvertMouseScrolling","text":"<p>boolean getInvertMouseScrolling()</p>"},{"location":"cupra/javadoc/platform/desktop/","title":"Package io.github.sandydunlop.cupra.platform.desktop","text":"Classes Class Description WindowManager FrameMonitor AbstractMouseInputHandler An abstract base class for handling mouse input events on widgets. CupraWindow CoalescedEventUpdater AwtRenderer DesktopServices KeyboardInputHandler"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/","title":"AbstractMouseInputHandler","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#class-abstractmouseinputhandler","title":"Class AbstractMouseInputHandler","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.AbstractMouseInputHandler </p> <p>Subclasses should implement the methods to define custom behavior for  mouse press, scroll, move, and click events.  </p>"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#constructor-summary","title":"Constructor Summary","text":"Constructor Description AbstractMouseInputHandler()"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract boolean mousePressed(CWidget widget, CMouseEvent mouse) Invoked when a mouse button has been pressed on a widget abstract boolean mouseScrolled(CWidget widget, CMouseEvent mouse) Invoked when a mouse wheel is scrolled over a widget abstract boolean mouseMoved(CWidget widget, CMouseEvent mouse) Invoked when the mouse pointer moves over a widget abstract boolean mouseClicked(CWidget widget, CMouseEvent mouse) Invoked when the mouse button has been clicked on a widget"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#mousepressed","title":"mousePressed","text":"<p>abstract boolean mousePressed(CWidget widget, CMouseEvent mouse)</p> <p>Invoked when a mouse button has been pressed on a widget</p> <p>Parameters:</p> <p><code>widget</code> - The widget the event pertains to</p> <p><code>mouse</code> - Details of the mouse event</p> <p>Returns:</p> <p>True if the event was handled</p>"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#mousescrolled","title":"mouseScrolled","text":"<p>abstract boolean mouseScrolled(CWidget widget, CMouseEvent mouse)</p> <p>Invoked when a mouse wheel is scrolled over a widget</p> <p>Parameters:</p> <p><code>widget</code> - The widget the event pertains to</p> <p><code>mouse</code> - Details of the mouse event</p> <p>Returns:</p> <p>True if the event was handled</p>"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#mousemoved","title":"mouseMoved","text":"<p>abstract boolean mouseMoved(CWidget widget, CMouseEvent mouse)</p> <p>Invoked when the mouse pointer moves over a widget</p> <p>Parameters:</p> <p><code>widget</code> - The widget the event pertains to</p> <p><code>mouse</code> - Details of the mouse event</p> <p>Returns:</p> <p>True if the event was handled</p>"},{"location":"cupra/javadoc/platform/desktop/AbstractMouseInputHandler/#mouseclicked","title":"mouseClicked","text":"<p>abstract boolean mouseClicked(CWidget widget, CMouseEvent mouse)</p> <p>Invoked when the mouse button has been clicked on a widget</p> <p>Parameters:</p> <p><code>widget</code> - The widget the event pertains to</p> <p><code>mouse</code> - Details of the mouse event</p> <p>Returns:</p> <p>True if the event was handled</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/","title":"AwtRenderer","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#class-awtrenderer","title":"Class AwtRenderer","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.AwtRenderer  All Implemented Interfaces: BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#constructor-summary","title":"Constructor Summary","text":"Constructor Description AwtRenderer(Graphics2D g2d) Constructs an <code>AwtRenderer</code> with the specified Graphics2D context."},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void enableClipping(int x1, int y1, int x2, int y2) Enables clipping for the graphics context, restricting rendering to the specified rectangular area. void disableClipping() Disables any current clipping region on the graphics context, allowing drawing operations  to affect the entire surface without restriction. void fill(int x1, int y1, int x2, int y2, int color) Fills a rectangular area on the graphics context with the specified color. void drawRectangle(int x1, int y1, int x2, int y2, int color) Draws a rectangle on the graphics context using the specified coordinates and color. void drawHorizontalLine(int x1, int x2, int y, int color) Draws a horizontal line between two x-coordinates at a specified y-coordinate with the given color. void drawVerticalLine(int x, int y1, int y2, int color) Draws a vertical line on the graphics context from (x, y1) to (x, y2) with the specified color. void drawImage(String name, BufferedImage image, int x, int y, int width, int height) Draws the specified BufferedImage at the given coordinates with the specified width and height. void setFont(FontSpec fo) Sets the font options for the renderer. void drawText(String text, int x, int y) Draws the specified text at the given (x, y) coordinates. void drawText(String text, int x, int y, int wrapAt) Draws the specified text at the given (x, y) coordinates, with optional word wrapping. void drawText(String text, int x, int y, int wrapAt, String glyphs) Renders the specified text onto an image buffer and draws it at the given coordinates. static Color colorFromInt(int color) Converts an integer representation of a color (in 0xRRGGBB format) to a Color object. void drawSymbol(Symbol s, int x, int y, int size, int color) Draws a symbol at the specified coordinates with the given size and color."},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#enableclipping","title":"enableClipping","text":"<p>void enableClipping(int x1, int y1, int x2, int y2)</p> <p>Enables clipping for the graphics context, restricting rendering to the specified rectangular area.</p> <p>Parameters:</p> <p><code>x1</code> - the x-coordinate of the upper-left corner of the clipping rectangle</p> <p><code>y1</code> - the y-coordinate of the upper-left corner of the clipping rectangle</p> <p><code>x2</code> - the x-coordinate of the lower-right corner of the clipping rectangle</p> <p><code>y2</code> - the y-coordinate of the lower-right corner of the clipping rectangle</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#disableclipping","title":"disableClipping","text":"<p>void disableClipping()</p> <p>Disables any current clipping region on the graphics context, allowing drawing operations  to affect the entire surface without restriction.</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#fill","title":"fill","text":"<p>void fill(int x1, int y1, int x2, int y2, int color)</p> <p>Fills a rectangular area on the graphics context with the specified color.</p> <p>Parameters:</p> <p><code>x1</code> - the x-coordinate of the upper-left corner of the rectangle</p> <p><code>y1</code> - the y-coordinate of the upper-left corner of the rectangle</p> <p><code>x2</code> - the x-coordinate of the lower-right corner of the rectangle</p> <p><code>y2</code> - the y-coordinate of the lower-right corner of the rectangle</p> <p><code>color</code> - the color to fill the rectangle, represented as an integer</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawrectangle","title":"drawRectangle","text":"<p>void drawRectangle(int x1, int y1, int x2, int y2, int color)</p> <p>Draws a rectangle on the graphics context using the specified coordinates and color.</p> <p>Parameters:</p> <p><code>x1</code> - the x-coordinate of the top-left corner of the rectangle</p> <p><code>y1</code> - the y-coordinate of the top-left corner of the rectangle</p> <p><code>x2</code> - the x-coordinate of the bottom-right corner of the rectangle</p> <p><code>y2</code> - the y-coordinate of the bottom-right corner of the rectangle</p> <p><code>color</code> - the color of the rectangle, represented as an integer</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawhorizontalline","title":"drawHorizontalLine","text":"<p>void drawHorizontalLine(int x1, int x2, int y, int color)</p> <p>Draws a horizontal line between two x-coordinates at a specified y-coordinate with the given color.</p> <p>Parameters:</p> <p><code>x1</code> - the starting x-coordinate of the line</p> <p><code>x2</code> - the ending x-coordinate of the line</p> <p><code>y</code> - the y-coordinate at which to draw the line</p> <p><code>color</code> - the color of the line, represented as an integer</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawverticalline","title":"drawVerticalLine","text":"<p>void drawVerticalLine(int x, int y1, int y2, int color)</p> <p>Draws a vertical line on the graphics context from (x, y1) to (x, y2) with the specified color.</p> <p>Parameters:</p> <p><code>x</code> - the x-coordinate of the vertical line</p> <p><code>y1</code> - the starting y-coordinate of the line</p> <p><code>y2</code> - the ending y-coordinate of the line</p> <p><code>color</code> - the color of the line, represented as an integer (ARGB format)</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawimage","title":"drawImage","text":"<p>void drawImage(String name, BufferedImage image, int x, int y, int width, int height)</p> <p>Draws the specified BufferedImage at the given coordinates with the specified width and height.</p> <p>Parameters:</p> <p><code>name</code> - the name or identifier for the image (may be used for logging or debugging)</p> <p><code>image</code> - the BufferedImage to be drawn</p> <p><code>x</code> - the x-coordinate of the top-left corner where the image will be drawn</p> <p><code>y</code> - the y-coordinate of the top-left corner where the image will be drawn</p> <p><code>width</code> - the width to scale the image to when drawing</p> <p><code>height</code> - the height to scale the image to when drawing</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#setfont","title":"setFont","text":"<p>void setFont(FontSpec fo)</p> <p>Sets the font options for the renderer.</p> <p>If the current font options are not set, this method duplicates the provided <code>FontSpec</code>  and assigns it. If font options are already set, it merges the new <code>FontSpec</code> into the existing options.  </p> <p>Parameters:</p> <p><code>fo</code> - the <code>FontSpec</code> containing font settings to apply</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawtext","title":"drawText","text":"<p>void drawText(String text, int x, int y)</p> <p>Draws the specified text at the given (x, y) coordinates.</p> <p>This method draws the text using default or previously set styling options.  If more control over text rendering is required (such as specifying a maximum width),  use the overloaded [#Text#Text#Text#Text(String](##Text#Text#Text#Text(String) method.</p> <p>Parameters:</p> <p><code>text</code> - the text to be drawn</p> <p><code>x</code> - the x-coordinate where the text should start</p> <p><code>y</code> - the y-coordinate where the text baseline should be placed</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawtext_1","title":"drawText","text":"<p>void drawText(String text, int x, int y, int wrapAt)</p> <p>Draws the specified text at the given (x, y) coordinates, with optional word wrapping.</p> <p>Parameters:</p> <p><code>text</code> - the text to be drawn</p> <p><code>x</code> - the x-coordinate where the text should start</p> <p><code>y</code> - the y-coordinate where the text should start</p> <p><code>wrapAt</code> - the maximum width in pixels at which the text should wrap; if 0 or negative, no wrapping is applied</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawtext_2","title":"drawText","text":"<p>void drawText(String text, int x, int y, int wrapAt, String glyphs)</p> <p>Renders the specified text onto an image buffer and draws it at the given coordinates.  Supports optional word wrapping and custom glyph sets.</p> <p>Parameters:</p> <p><code>text</code> - The text string to render. If blank, nothing is drawn.</p> <p><code>x</code> - The x-coordinate where the rendered text image will be drawn.</p> <p><code>y</code> - The y-coordinate where the rendered text image will be drawn.</p> <p><code>wrapAt</code> - The maximum width in pixels before wrapping text to a new line.                   If -1, no wrapping is applied.</p> <p><code>glyphs</code> - An optional string specifying the set of glyphs to use for rendering.                  If null, the default glyph set is used.</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#colorfromint","title":"colorFromInt","text":"<p>static Color colorFromInt(int color)</p> <p>Converts an integer representation of a color (in 0xRRGGBB format) to a Color object.</p> <p>Parameters:</p> <p><code>color</code> - the integer value representing the color, where the highest byte is red,               the middle byte is green, and the lowest byte is blue (0xRRGGBB)</p> <p>Returns:</p> <p>a Color object corresponding to the specified RGB value</p>"},{"location":"cupra/javadoc/platform/desktop/AwtRenderer/#drawsymbol","title":"drawSymbol","text":"<p>void drawSymbol(Symbol s, int x, int y, int size, int color)</p> <p>Draws a symbol at the specified coordinates with the given size and color.</p> <p>This method selects a symbol from a predefined set based on the ordinal value  of the provided Symbol enum. It uses a custom font (\"modernpics\") to render  the symbol as text at the specified (x, y) position.</p> <p>Parameters:</p> <p><code>s</code> - the Symbol to draw, selected by its ordinal position</p> <p><code>x</code> - the x-coordinate where the symbol will be drawn</p> <p><code>y</code> - the y-coordinate where the symbol will be drawn</p> <p><code>size</code> - the font size to use when drawing the symbol</p> <p><code>color</code> - the color to use when drawing the symbol</p> <p>Specified By:</p> <p>io.github.sandydunlop.cupra.common.render.BaseRenderer</p>"},{"location":"cupra/javadoc/platform/desktop/CoalescedEventUpdater/","title":"CoalescedEventUpdater","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/CoalescedEventUpdater/#class-coalescedeventupdater","title":"Class CoalescedEventUpdater","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.CoalescedEventUpdater </p>"},{"location":"cupra/javadoc/platform/desktop/CoalescedEventUpdater/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CoalescedEventUpdater(int delay, Runnable callback)"},{"location":"cupra/javadoc/platform/desktop/CoalescedEventUpdater/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void update()"},{"location":"cupra/javadoc/platform/desktop/CoalescedEventUpdater/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/CoalescedEventUpdater/#update","title":"update","text":"<p>void update()</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/","title":"CupraWindow","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#class-cuprawindow","title":"Class CupraWindow","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.awt.Component \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.awt.Container \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.swing.JComponent \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.swing.JPanel \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.CupraWindow  All Implemented Interfaces: \u00a0\u00a0\u00a0\u00a0WindowStateListener, MouseListener, MouseMotionListener, MouseWheelListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected double mouseX protected double mouseY protected double dragFromX protected double dragFromY"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#constructor-summary","title":"Constructor Summary","text":"Constructor Description CupraWindow(CupraScreen screen)"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description JFrame getFrame() CupraScreen getScreen() void setWindowSize(int width, int height) void setInputHandler(AbstractMouseInputHandler inputHandler) void setDesignMode(boolean designMode) boolean getDesignMode() void setBackgroundColor(int color) void swingStuff(int color) void windowStateChanged(WindowEvent e) protected void paintComponent(Graphics g) protected void paintComponent(Graphics g, CWidget widget, int mouseX, int mouseY, float delta) void renderWidget(CWidget widget) void render() void setWindowTitle(String title) void mouseClicked(MouseEvent e) void mousePressed(MouseEvent e) void mouseReleased(MouseEvent e) void mouseEntered(MouseEvent e) void mouseExited(MouseEvent e) void mouseWheelMoved(MouseWheelEvent e) void mouseDragged(MouseEvent e) void mouseMoved(MouseEvent e)"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#field-details","title":"Field Details","text":""},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mousex","title":"mouseX","text":""},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mousey","title":"mouseY","text":""},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#dragfromx","title":"dragFromX","text":""},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#dragfromy","title":"dragFromY","text":""},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#getframe","title":"getFrame","text":"<p>JFrame getFrame()</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#getscreen","title":"getScreen","text":"<p>CupraScreen getScreen()</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#setwindowsize","title":"setWindowSize","text":"<p>void setWindowSize(int width, int height)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#setinputhandler","title":"setInputHandler","text":"<p>void setInputHandler(AbstractMouseInputHandler inputHandler)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#setdesignmode","title":"setDesignMode","text":"<p>void setDesignMode(boolean designMode)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#getdesignmode","title":"getDesignMode","text":"<p>boolean getDesignMode()</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#setbackgroundcolor","title":"setBackgroundColor","text":"<p>void setBackgroundColor(int color)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#swingstuff","title":"swingStuff","text":"<p>void swingStuff(int color)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#windowstatechanged","title":"windowStateChanged","text":"<p>void windowStateChanged(WindowEvent e)</p> <p>Specified By:</p> <p>java.awt.event.WindowStateListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#paintcomponent","title":"paintComponent","text":"<p>protected void paintComponent(Graphics g)</p> <p>Overrides:</p> <p>paintComponent from JComponent</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#paintcomponent_1","title":"paintComponent","text":"<p>protected void paintComponent(Graphics g, CWidget widget, int mouseX, int mouseY, float delta)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#renderwidget","title":"renderWidget","text":"<p>void renderWidget(CWidget widget)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#render","title":"render","text":"<p>void render()</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#setwindowtitle","title":"setWindowTitle","text":"<p>void setWindowTitle(String title)</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mouseclicked","title":"mouseClicked","text":"<p>void mouseClicked(MouseEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mousepressed","title":"mousePressed","text":"<p>void mousePressed(MouseEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mousereleased","title":"mouseReleased","text":"<p>void mouseReleased(MouseEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mouseentered","title":"mouseEntered","text":"<p>void mouseEntered(MouseEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mouseexited","title":"mouseExited","text":"<p>void mouseExited(MouseEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mousewheelmoved","title":"mouseWheelMoved","text":"<p>void mouseWheelMoved(MouseWheelEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseWheelListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mousedragged","title":"mouseDragged","text":"<p>void mouseDragged(MouseEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseMotionListener</p>"},{"location":"cupra/javadoc/platform/desktop/CupraWindow/#mousemoved","title":"mouseMoved","text":"<p>void mouseMoved(MouseEvent e)</p> <p>Specified By:</p> <p>java.awt.event.MouseMotionListener</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/","title":"DesktopServices","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#class-desktopservices","title":"Class DesktopServices","text":"<p>java.lang.Object io.github.sandydunlop.cupra.platform.PlatformServices \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.DesktopServices </p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static synchronized DesktopServices getInstance() boolean isCursorVisible() WindowManager getWindowManager() void open(CupraScreen screen) void close(CupraScreen screen) void setWindowSize(CupraScreen screen, int width, int height) void setWindowTitle(CupraScreen screen, String title) KeyboardInputHandler getKeyboardManager() void render() void render(CWidget widget) Path getConfigDir() void openLinkInBrowser(String address) void showNotification(String message) String getClipboardText() void copyTextToClipboard(String text)"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#getinstance","title":"getInstance","text":"<p>static synchronized DesktopServices getInstance()</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#iscursorvisible","title":"isCursorVisible","text":"<p>boolean isCursorVisible()</p> <p>Overrides:</p> <p>isCursorVisible from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#getwindowmanager","title":"getWindowManager","text":"<p>WindowManager getWindowManager()</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#open","title":"open","text":"<p>void open(CupraScreen screen)</p> <p>Overrides:</p> <p>open from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#close","title":"close","text":"<p>void close(CupraScreen screen)</p> <p>Overrides:</p> <p>close from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#setwindowsize","title":"setWindowSize","text":"<p>void setWindowSize(CupraScreen screen, int width, int height)</p> <p>Overrides:</p> <p>setWindowSize from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#setwindowtitle","title":"setWindowTitle","text":"<p>void setWindowTitle(CupraScreen screen, String title)</p> <p>Overrides:</p> <p>setWindowTitle from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#getkeyboardmanager","title":"getKeyboardManager","text":"<p>KeyboardInputHandler getKeyboardManager()</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#render","title":"render","text":"<p>void render()</p> <p>Overrides:</p> <p>render from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#render_1","title":"render","text":"<p>void render(CWidget widget)</p> <p>Overrides:</p> <p>render from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#getconfigdir","title":"getConfigDir","text":"<p>Path getConfigDir()</p> <p>Overrides:</p> <p>getConfigDir from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#openlinkinbrowser","title":"openLinkInBrowser","text":"<p>void openLinkInBrowser(String address)</p> <p>Overrides:</p> <p>openLinkInBrowser from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#shownotification","title":"showNotification","text":"<p>void showNotification(String message)</p> <p>Overrides:</p> <p>showNotification from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#getclipboardtext","title":"getClipboardText","text":"<p>String getClipboardText()</p> <p>Overrides:</p> <p>getClipboardText from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/DesktopServices/#copytexttoclipboard","title":"copyTextToClipboard","text":"<p>void copyTextToClipboard(String text)</p> <p>Overrides:</p> <p>copyTextToClipboard from PlatformServices</p>"},{"location":"cupra/javadoc/platform/desktop/FrameMonitor/","title":"FrameMonitor","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/FrameMonitor/#class-framemonitor","title":"Class FrameMonitor","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.FrameMonitor </p>"},{"location":"cupra/javadoc/platform/desktop/FrameMonitor/#constructor-summary","title":"Constructor Summary","text":"Constructor Description FrameMonitor()"},{"location":"cupra/javadoc/platform/desktop/FrameMonitor/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void registerFrame(JFrame frame, CupraScreen screen, String frameUniqueId, int defaultX, int defaultY, int defaultW, int defaultH)"},{"location":"cupra/javadoc/platform/desktop/FrameMonitor/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/FrameMonitor/#registerframe","title":"registerFrame","text":"<p>static void registerFrame(JFrame frame, CupraScreen screen, String frameUniqueId, int defaultX, int defaultY, int defaultW, int defaultH)</p>"},{"location":"cupra/javadoc/platform/desktop/KeyboardInputHandler/","title":"KeyboardInputHandler","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/KeyboardInputHandler/#class-keyboardinputhandler","title":"Class KeyboardInputHandler","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.KeyboardInputHandler </p>"},{"location":"cupra/javadoc/platform/desktop/KeyboardInputHandler/#constructor-summary","title":"Constructor Summary","text":"Constructor Description KeyboardInputHandler()"},{"location":"cupra/javadoc/platform/desktop/KeyboardInputHandler/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void listen() void setWindow(CupraWindow window)"},{"location":"cupra/javadoc/platform/desktop/KeyboardInputHandler/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/KeyboardInputHandler/#listen","title":"listen","text":"<p>void listen()</p>"},{"location":"cupra/javadoc/platform/desktop/KeyboardInputHandler/#setwindow","title":"setWindow","text":"<p>void setWindow(CupraWindow window)</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/","title":"WindowManager","text":"<p>Package io.github.sandydunlop.cupra.platform.desktop</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#class-windowmanager","title":"Class WindowManager","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.cupra.platform.desktop.WindowManager </p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#constructor-summary","title":"Constructor Summary","text":"Constructor Description WindowManager()"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description CupraWindow getActiveWindow() void open(CupraScreen screen) CupraWindow getWindow(CupraScreen screen) void close(CupraScreen screen) void setWindowSize(CupraScreen screen, int width, int height) void setWindowTitle(CupraScreen screen, String title) JMenu getWindowMenu()"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#method-details","title":"Method Details","text":""},{"location":"cupra/javadoc/platform/desktop/WindowManager/#getactivewindow","title":"getActiveWindow","text":"<p>CupraWindow getActiveWindow()</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#open","title":"open","text":"<p>void open(CupraScreen screen)</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#getwindow","title":"getWindow","text":"<p>CupraWindow getWindow(CupraScreen screen)</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#close","title":"close","text":"<p>void close(CupraScreen screen)</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#setwindowsize","title":"setWindowSize","text":"<p>void setWindowSize(CupraScreen screen, int width, int height)</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#setwindowtitle","title":"setWindowTitle","text":"<p>void setWindowTitle(CupraScreen screen, String title)</p>"},{"location":"cupra/javadoc/platform/desktop/WindowManager/#getwindowmenu","title":"getWindowMenu","text":"<p>JMenu getWindowMenu()</p>"},{"location":"food/consumer/","title":"Module consumer","text":"<p>The consumer</p> RequiresUses Module Description java.base serviceinterface Package Description ServiceInterface"},{"location":"food/consumer/serviceconsumer/","title":"Package example.serviceconsumer","text":"Classes Class Description Consumer"},{"location":"food/consumer/serviceconsumer/Consumer/","title":"Consumer","text":"<p>Package example.serviceconsumer</p>"},{"location":"food/consumer/serviceconsumer/Consumer/#class-consumer","title":"Class Consumer","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0example.serviceconsumer.Consumer </p>"},{"location":"food/consumer/serviceconsumer/Consumer/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Consumer()"},{"location":"food/consumer/serviceconsumer/Consumer/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void main(String[] args)"},{"location":"food/consumer/serviceconsumer/Consumer/#method-details","title":"Method Details","text":""},{"location":"food/consumer/serviceconsumer/Consumer/#main","title":"main","text":"<p>static void main(String[] args)</p>"},{"location":"food/provider/","title":"Module provider","text":"<p>The provider</p> RequiresProvides Module Description java.base serviceinterface Interface Implementations ServiceInterface Provider"},{"location":"food/provider/serviceprovider/","title":"Package example.serviceprovider","text":"Classes Class Description Provider"},{"location":"food/provider/serviceprovider/Provider/","title":"Provider","text":"<p>Package example.serviceprovider</p>"},{"location":"food/provider/serviceprovider/Provider/#class-provider","title":"Class Provider","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0example.serviceprovider.Provider  All Implemented Interfaces: ServiceInterface</p>"},{"location":"food/provider/serviceprovider/Provider/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Provider()"},{"location":"food/provider/serviceprovider/Provider/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description int theAnswer()"},{"location":"food/provider/serviceprovider/Provider/#method-details","title":"Method Details","text":""},{"location":"food/provider/serviceprovider/Provider/#theanswer","title":"theAnswer","text":"<p>int theAnswer()</p> <p>Specified By:</p> <p>example.serviceinterface.ServiceInterface</p>"},{"location":"food/serviceinterface/","title":"Module serviceinterface","text":"<p>The interface</p> ExportsRequires Package Description example.serviceinterface Module Description java.base"},{"location":"food/serviceinterface/serviceinterface/","title":"Package example.serviceinterface","text":"Interfaces Class Description ServiceInterface"},{"location":"food/serviceinterface/serviceinterface/ServiceInterface/","title":"ServiceInterface","text":"<p>Package example.serviceinterface</p>"},{"location":"food/serviceinterface/serviceinterface/ServiceInterface/#interface-serviceinterface","title":"Interface ServiceInterface","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0example.serviceinterface.ServiceInterface </p>"},{"location":"food/serviceinterface/serviceinterface/ServiceInterface/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract int theAnswer()"},{"location":"food/serviceinterface/serviceinterface/ServiceInterface/#method-details","title":"Method Details","text":""},{"location":"food/serviceinterface/serviceinterface/ServiceInterface/#theanswer","title":"theAnswer","text":"<p>abstract int theAnswer()</p>"},{"location":"markista/","title":"Markista","text":"<p>Serving Markdown Flavored Documentation</p>"},{"location":"markista/#introduction","title":"Introduction","text":"<p>Markista is a doclet that turns your Java documentation comments into Markdown, suitable for use with Github, MkDocs, etc. </p> <p>Marklist is under active development and has reached a point where it is becoming useful. There will be features that aren't completely implemented yet.</p> <p>As a demonstration, the Markdown Javadoc for Markista itself is available here. It was produced with the <code>-private</code> parameter which tells Markista to document private members of classes. By default only public and protected members are documented.</p>"},{"location":"markista/#gradle","title":"Gradle","text":"<p>Markista can be used from a Gradle build by following these simple steps:</p>"},{"location":"markista/#step-1-define-a-configuration-for-the-doclet","title":"Step 1: Define a Configuration for the Doclet","text":"<p>Create a configuration in your build.gradle file to manage the Markista dependency.</p> <pre><code>configurations {\n    markista\n}\n</code></pre>"},{"location":"markista/#step-2-add-the-markista-dependency","title":"Step 2: Add the Markista Dependency","text":"<p>Add Markista as a dependency under the configuration you just created. Markista is available in the Maven Central repository.</p> <pre><code>dependencies {\n    markista(\"io.github.sandydunlop:markista:0.1.4\")\n}\n</code></pre>"},{"location":"markista/#step-3-configure-the-javadoc-task","title":"Step 3: Configure the Javadoc Task","text":"<p>In the Javadoc task, specify the doclet path and the doclet class. This tells Gradle where to find the doclet and which one to use.</p> <pre><code>javadoc {\n    options {\n        docletpath = configurations.markista.files.asType(List)\n        doclet = 'io.github.sandydunlop.markista.doclet.MarkdownDoclet'\n        source = null\n        addBooleanOption('flatten', true)\n        addBooleanOption('external', true)\n    }\n}\n</code></pre>"},{"location":"markista/#command-line","title":"Command Line","text":"<p>Markista can be used from the command line with the <code>javadoc</code> command as follows:</p> <pre><code>javadoc -docletpath libs/markista-0.1.4.jar -doclet io.github.sandydunlop.markista.doclet.MarkdownDoclet src/main/java/my.package/Hello.java\n</code></pre>"},{"location":"markista/#parameters","title":"Parameters","text":"<code>-d &lt;directory&gt;</code> The directory to write the Markdown files to. <code>-private</code> Generate docs for private members. By default only public  and abstract members are documented. <code>-external</code> Create links to classes defined outside of the API being     documented (eg. java.utils.String) <code>-flatten</code> Don't create directories that contain no classes <code>-verbose</code> Display progress information"},{"location":"markista/#download","title":"Download","text":"<p>JAR files for version 0.1.4 are available to download here.</p>"},{"location":"markista/#source-code","title":"Source Code","text":"<p>Markista's souce code is available on Github under the GPLv3 license.</p>"},{"location":"markista/javadoc/markista/","title":"Module markista","text":"<p>Markista is a tool for generating Markdown documentation from Java source code. It is designed to work with Java 11 and later versions. The module-info.java file defines the module and its exports. It exports the doclet, model, and util packages for use by other modules.</p> ExportsRequires Package Description io.github.sandydunlop.markista.doclet This package contains the main doclet classes. Module Description java.base jdk.compiler jdk.javadoc java.compiler"},{"location":"markista/javadoc/markista/constant-values/","title":"Constant Field Values","text":"Modifier and Type Constant Field Value String TEXT_CLASS Class String TEXT_DESCRIPTION Description String TEXT_MODIFIER_AND_TYPE Modifier and Type String BR String NBSP String TITLE_API API String TITLE_CONSTANT_FIELD Constant Field String TITLE_CONSTANT_FIELD_VALUES Constant Field Values String TITLE_DESCRIPTION Description String TITLE_EXPORTS Exports String TITLE_IMPLEMENTATIONS Implementations String TITLE_INTERFACE Interface String TITLE_MODIFIER_AND_TYPE Modifier and Type String TITLE_MODULE Module String TITLE_OPENS Opens String TITLE_PACKAGE Package String TITLE_PACKAGES Packages String TITLE_PROVIDES Provides String TITLE_REQUIRES Requires String TITLE_USES Uses String TITLE_VALUE Value boolean OK true boolean FAILED false String DOT_HTML .html String JAVA_24_URL https://docs.oracle.com/en/java/javase/24/docs/api/ String UNUSED_OPTION_DESCRIPTION Unused option"},{"location":"markista/javadoc/markista/doclet/","title":"Package io.github.sandydunlop.markista.doclet","text":"<p>This package contains the main doclet classes.</p> <p>The Markista doclet has 3 main functions:</p> <ul> <li>Collecting API and documentation infomation from the Java compiler</li> <li>Arranging the infomation into an API tree using model.* classes</li> <li>Outputting the documentation from the API tree as Markdown</li> </ul> Classes Class Description MarkdownTable A utility class for creating tables in Markdown documents. PackageWriter A class that outputs API documentation as Markdown. ModuleWriter MarkdownDoclet A doclet that renders javadoc comments as Markdown ApiScanner A class that scans code and generates an API tree representing code and Javadoc comments."},{"location":"markista/javadoc/markista/doclet/ApiScanner/","title":"ApiScanner","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#class-apiscanner","title":"Class ApiScanner","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.AbstractElementVisitor6&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner6&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner7&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner8&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner9&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.ApiScanner </p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Api api private DocletEnvironment environment private ModuleNode unnamedModule private ModuleNode currentModule"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ApiScanner(DocletEnvironment environment)"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description Api scan(Set&lt;? extends Element&gt; elements) Void scan(Element e, Integer depth) Void visitModule(ModuleElement e, Integer depth) Void visitPackage(PackageElement ee, Integer depth) Void visitType(TypeElement e, Integer depth) Void visitExecutable(ExecutableElement ee, Integer depth) Void visitVariable(VariableElement ve, Integer depth) Void visitTypeParameter(TypeParameterElement e, Integer depth) Void visitRecordComponent(RecordComponentElement e, Integer depth)"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/doclet/ApiScanner/#api","title":"api","text":""},{"location":"markista/javadoc/markista/doclet/ApiScanner/#environment","title":"environment","text":""},{"location":"markista/javadoc/markista/doclet/ApiScanner/#unnamedmodule","title":"unnamedModule","text":""},{"location":"markista/javadoc/markista/doclet/ApiScanner/#currentmodule","title":"currentModule","text":""},{"location":"markista/javadoc/markista/doclet/ApiScanner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/doclet/ApiScanner/#scan","title":"scan","text":"<p>Api scan(Set&lt;? extends Element&gt; elements)</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#scan_1","title":"scan","text":"<p>Void scan(Element e, Integer depth)</p> <p>Overrides:</p> <p>scan from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#visitmodule","title":"visitModule","text":"<p>Void visitModule(ModuleElement e, Integer depth)</p> <p>Overrides:</p> <p>visitmodule from ElementScanner9&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#visitpackage","title":"visitPackage","text":"<p>Void visitPackage(PackageElement ee, Integer depth)</p> <p>Overrides:</p> <p>visitpackage from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#visittype","title":"visitType","text":"<p>Void visitType(TypeElement e, Integer depth)</p> <p>Overrides:</p> <p>visittype from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#visitexecutable","title":"visitExecutable","text":"<p>Void visitExecutable(ExecutableElement ee, Integer depth)</p> <p>Overrides:</p> <p>visitexecutable from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#visitvariable","title":"visitVariable","text":"<p>Void visitVariable(VariableElement ve, Integer depth)</p> <p>Overrides:</p> <p>visitvariable from ElementScanner7&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#visittypeparameter","title":"visitTypeParameter","text":"<p>Void visitTypeParameter(TypeParameterElement e, Integer depth)</p> <p>Overrides:</p> <p>visittypeparameter from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/ApiScanner/#visitrecordcomponent","title":"visitRecordComponent","text":"<p>Void visitRecordComponent(RecordComponentElement e, Integer depth)</p> <p>Overrides:</p> <p>visitrecordcomponent from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/","title":"MarkdownDoclet.Option","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#class-markdowndocletoption","title":"Class MarkdownDoclet.Option","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownDoclet.Option  All Implemented Interfaces: Doclet.Option</p> <p>Enclosing Class: MarkdownDoclet</p> <p>Subtypes for specific options should implement the #process method to handle instances of the option found on the command line.</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private final String name private final boolean hasArg private final String description private final String parameters"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownDoclet.Option(String name, boolean hasArg, String description, String parameters)"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description int getArgumentCount() String getDescription() Doclet.Option.Kind getKind() List&lt;String&gt; getNames() String getParameters()"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#name","title":"name","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#hasarg","title":"hasArg","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#description","title":"description","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#parameters","title":"parameters","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#getargumentcount","title":"getArgumentCount","text":"<p>int getArgumentCount()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#getdescription","title":"getDescription","text":"<p>String getDescription()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#getkind","title":"getKind","text":"<p>Doclet.Option.Kind getKind()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#getnames","title":"getNames","text":"<p>List&lt;String&gt; getNames()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet.Option/#getparameters","title":"getParameters","text":"<p>String getParameters()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/","title":"MarkdownDoclet","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#class-markdowndoclet","title":"Class MarkdownDoclet","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownDoclet  All Implemented Interfaces: Doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description abstract MarkdownDoclet.Option A base class for declaring options."},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description static final boolean OK private static final boolean FAILED private static final String DOT_HTML private static final String JAVA_24_URL private static final String UNUSED_OPTION_DESCRIPTION private final Set&lt;MarkdownDoclet.Option&gt; options"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownDoclet() The default constructor, does nothing."},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void main(String[] args) The starting point of Markista if it is being used without the Javadoc command. void init(Locale locale, Reporter reporter) Initializes the doclet. String getName() Set&lt;? extends MarkdownDoclet.Option&gt; getSupportedOptions() SourceVersion getSupportedSourceVersion() boolean run(DocletEnvironment environment) private void addNativeModule(String moduleName)"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#ok","title":"OK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#failed","title":"FAILED","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#dot_html","title":"DOT_HTML","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#java_24_url","title":"JAVA_24_URL","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#unused_option_description","title":"UNUSED_OPTION_DESCRIPTION","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#options","title":"options","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#main","title":"main","text":"<p>static void main(String[] args)</p> <p>The starting point of Markista if it is being used without the Javadoc command. This is useful for debugging.</p> <p>Parameters:</p> <p><code>args</code> - this parameter is ignored.</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#init","title":"init","text":"<p>void init(Locale locale, Reporter reporter)</p> <p>Initializes the doclet.</p> <p>Parameters:</p> <p><code>locale</code> - The locale used for messages</p> <p><code>reporter</code> - The reporter used for messages</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#getname","title":"getName","text":"<p>String getName()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#getsupportedoptions","title":"getSupportedOptions","text":"<p>Set&lt;? extends MarkdownDoclet.Option&gt; getSupportedOptions()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#getsupportedsourceversion","title":"getSupportedSourceVersion","text":"<p>SourceVersion getSupportedSourceVersion()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#run","title":"run","text":"<p>boolean run(DocletEnvironment environment)</p> <p>Parameters:</p> <p><code>environment</code> - Represents the operating environment of a single invocation of the doclet.</p> <p>Returns:</p> <p>true if completed without errors, false if errors occurred.</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownDoclet/#addnativemodule","title":"addNativeModule","text":"<p>private void addNativeModule(String moduleName)</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable.Column/","title":"MarkdownTable.Column","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable.Column/#class-markdowntablecolumn","title":"Class MarkdownTable.Column","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownTable.Column  Enclosing Class: MarkdownTable</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable.Column/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description String name int width"},{"location":"markista/javadoc/markista/doclet/MarkdownTable.Column/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownTable.Column(String name) Constructs a new <code>Column</code> object with the specified name."},{"location":"markista/javadoc/markista/doclet/MarkdownTable.Column/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownTable.Column/#name","title":"name","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownTable.Column/#width","title":"width","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownTable/","title":"MarkdownTable","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#class-markdowntable","title":"Class MarkdownTable","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownTable </p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description MarkdownTable.Column A class to represent the name and width of a column within a table"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description List&lt;MarkdownTable.Column&gt; columns List&lt;String[]&gt; rows"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownTable()"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description MarkdownTable addColumn(String heading) Adds a column with the specified heading to the table MarkdownTable addRow(String[] valueStrings) Adds a row of data to the table void render(Writer writer) Renders the table as Markdown text without any indentation void render(Writer writer, int indent) Renders the table as Markdown text with a given indentation level"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#columns","title":"columns","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#rows","title":"rows","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#addcolumn","title":"addColumn","text":"<p>MarkdownTable addColumn(String heading)</p> <p>Adds a column with the specified heading to the table</p> <p>Parameters:</p> <p><code>heading</code> - String to be used as the column heading</p> <p>Returns:</p> <p>The table</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#addrow","title":"addRow","text":"<p>MarkdownTable addRow(String[] valueStrings)</p> <p>Adds a row of data to the table</p> <p>Parameters:</p> <p><code>valueStrings</code> - one or more strings which represnet the data for this row</p> <p>Returns:</p> <p>The table</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#render","title":"render","text":"<p>void render(Writer writer)</p> <p>Renders the table as Markdown text without any indentation</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/MarkdownTable/#render_1","title":"render","text":"<p>void render(Writer writer, int indent)</p> <p>Renders the table as Markdown text with a given indentation level</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/","title":"ModuleWriter","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#class-modulewriter","title":"Class ModuleWriter","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.ModuleWriter </p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final String TITLE_API private static final String TITLE_CONSTANT_FIELD private static final String TITLE_CONSTANT_FIELD_VALUES private static final String TITLE_DESCRIPTION private static final String TITLE_EXPORTS private static final String TITLE_IMPLEMENTATIONS private static final String TITLE_INTERFACE private static final String TITLE_MODIFIER_AND_TYPE private static final String TITLE_MODULE private static final String TITLE_OPENS private static final String TITLE_PACKAGE private static final String TITLE_PACKAGES private static final String TITLE_PROVIDES private static final String TITLE_REQUIRES private static final String TITLE_USES private static final String TITLE_VALUE private FileUtils fileUtils private Writer writer private Api api"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleWriter() Constructor that sets up the locations API documents will be written to."},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void writeDocs(Api api) Output the documentation files for the specified API private void outputModuleDoc(ModuleNode moduleNode) private void outputModuleDirectives(String title, String kind, List&lt;DirectiveNode&gt; directives) private void outputModuleProvidesDirectives(List&lt;DirectiveNode&gt; directives) private String multiLink(List&lt;String&gt; names) private String formatDirectivePackageDoc(DirectiveNode directive) private void outputConstantValues(ModuleNode moduleNode)"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_api","title":"TITLE_API","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_constant_field","title":"TITLE_CONSTANT_FIELD","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_constant_field_values","title":"TITLE_CONSTANT_FIELD_VALUES","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_description","title":"TITLE_DESCRIPTION","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_exports","title":"TITLE_EXPORTS","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_implementations","title":"TITLE_IMPLEMENTATIONS","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_interface","title":"TITLE_INTERFACE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_modifier_and_type","title":"TITLE_MODIFIER_AND_TYPE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_module","title":"TITLE_MODULE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_opens","title":"TITLE_OPENS","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_package","title":"TITLE_PACKAGE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_packages","title":"TITLE_PACKAGES","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_provides","title":"TITLE_PROVIDES","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_requires","title":"TITLE_REQUIRES","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_uses","title":"TITLE_USES","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#title_value","title":"TITLE_VALUE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#fileutils","title":"fileUtils","text":""},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#writer","title":"writer","text":""},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#api","title":"api","text":""},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#writedocs","title":"writeDocs","text":"<p>void writeDocs(Api api)</p> <p>Output the documentation files for the specified API</p> <p>Parameters:</p> <p><code>api</code> - The API to output the documentation for</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#outputmoduledoc","title":"outputModuleDoc","text":"<p>private void outputModuleDoc(ModuleNode moduleNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#outputmoduledirectives","title":"outputModuleDirectives","text":"<p>private void outputModuleDirectives(String title, String kind, List&lt;DirectiveNode&gt; directives)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#outputmoduleprovidesdirectives","title":"outputModuleProvidesDirectives","text":"<p>private void outputModuleProvidesDirectives(List&lt;DirectiveNode&gt; directives)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#multilink","title":"multiLink","text":"<p>private String multiLink(List&lt;String&gt; names)</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#formatdirectivepackagedoc","title":"formatDirectivePackageDoc","text":"<p>private String formatDirectivePackageDoc(DirectiveNode directive)</p>"},{"location":"markista/javadoc/markista/doclet/ModuleWriter/#outputconstantvalues","title":"outputConstantValues","text":"<p>private void outputConstantValues(ModuleNode moduleNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/","title":"PackageWriter","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#class-packagewriter","title":"Class PackageWriter","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.PackageWriter </p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final String TEXT_CLASS private static final String TEXT_DESCRIPTION private static final String TEXT_MODIFIER_AND_TYPE private static final String BR private static final String NBSP private String outputDirectory private Writer writer private FileUtils fileUtils"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#constructor-summary","title":"Constructor Summary","text":"Constructor Description PackageWriter(String outputDirectory) Constructor that sets up the locations API documents will be written to."},{"location":"markista/javadoc/markista/doclet/PackageWriter/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void writeDocs(ModuleNode moduleNode) Output the documentation files for the specified API private void outputPackageDoc(PackageNode packageNode) private void outputPackageMembers(String title, List&lt;PackageMember&gt; members) private void outputTypeDoc(TypeNode typeNode) private void outputTypeDoc(TypeNode typeNode, String typeKind) private void outputSupertypes(TypeNode typeDoc) private void outputImplementedInterfaces(TypeNode typeDoc) private void outputEnclosingClass(TypeNode typeDoc) private void outputNestedClassSummary(List&lt;PackageMember&gt; nestedClasses) private void outputEnumConstantsSummary(EnumNode enumNode) private void outputFieldSummary(List&lt;FieldNode&gt; fields) private void outputConstructorSummary(List&lt;MethodNode&gt; methods) private void outputMethodSummary(List&lt;MethodNode&gt; methods) Writes the markdown for a class's method summary table private void outputEnumConstantDetails(List&lt;FieldNode&gt; constants, EnumNode enumNode) private void outputDetails(List&lt;Node&gt; nodes) Writes the markdown for a class's method or field details. private void outputReferences(Node node) private void outputMethodDetails(MethodNode method) private void outputMethodParams(MethodNode method) private void outputDeprecation(Deprecation status, Text text)"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/doclet/PackageWriter/#text_class","title":"TEXT_CLASS","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#text_description","title":"TEXT_DESCRIPTION","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#text_modifier_and_type","title":"TEXT_MODIFIER_AND_TYPE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#br","title":"BR","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#nbsp","title":"NBSP","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputdirectory","title":"outputDirectory","text":""},{"location":"markista/javadoc/markista/doclet/PackageWriter/#writer","title":"writer","text":""},{"location":"markista/javadoc/markista/doclet/PackageWriter/#fileutils","title":"fileUtils","text":""},{"location":"markista/javadoc/markista/doclet/PackageWriter/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/doclet/PackageWriter/#writedocs","title":"writeDocs","text":"<p>void writeDocs(ModuleNode moduleNode)</p> <p>Output the documentation files for the specified API</p> <p>Parameters:</p> <p><code>moduleNode</code> - The module containing the packages to output the documentation for</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputpackagedoc","title":"outputPackageDoc","text":"<p>private void outputPackageDoc(PackageNode packageNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputpackagemembers","title":"outputPackageMembers","text":"<p>private void outputPackageMembers(String title, List&lt;PackageMember&gt; members)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputtypedoc","title":"outputTypeDoc","text":"<p>private void outputTypeDoc(TypeNode typeNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputtypedoc_1","title":"outputTypeDoc","text":"<p>private void outputTypeDoc(TypeNode typeNode, String typeKind)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputsupertypes","title":"outputSupertypes","text":"<p>private void outputSupertypes(TypeNode typeDoc)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputimplementedinterfaces","title":"outputImplementedInterfaces","text":"<p>private void outputImplementedInterfaces(TypeNode typeDoc)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputenclosingclass","title":"outputEnclosingClass","text":"<p>private void outputEnclosingClass(TypeNode typeDoc)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputnestedclasssummary","title":"outputNestedClassSummary","text":"<p>private void outputNestedClassSummary(List&lt;PackageMember&gt; nestedClasses)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputenumconstantssummary","title":"outputEnumConstantsSummary","text":"<p>private void outputEnumConstantsSummary(EnumNode enumNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputfieldsummary","title":"outputFieldSummary","text":"<p>private void outputFieldSummary(List&lt;FieldNode&gt; fields)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputconstructorsummary","title":"outputConstructorSummary","text":"<p>private void outputConstructorSummary(List&lt;MethodNode&gt; methods)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputmethodsummary","title":"outputMethodSummary","text":"<p>private void outputMethodSummary(List&lt;MethodNode&gt; methods)</p> <p>Writes the markdown for a class's method summary table</p> <p>Parameters:</p> <p><code>methods</code> - The list of methods to include in the summary table</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputenumconstantdetails","title":"outputEnumConstantDetails","text":"<p>private void outputEnumConstantDetails(List&lt;FieldNode&gt; constants, EnumNode enumNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputdetails","title":"outputDetails","text":"<p>private void outputDetails(List&lt;Node&gt; nodes)</p> <p>Writes the markdown for a class's method or field details.</p> <p>Parameters:</p> <p><code>nodes</code> - The list of methods to write the details of</p> <p>Throws:</p> <p>IOException</p> <p>Since:</p> <p>0.1.0</p> <p>See Also:</p> <p>http://example.com</p> <p>List</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputreferences","title":"outputReferences","text":"<p>private void outputReferences(Node node)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputmethoddetails","title":"outputMethodDetails","text":"<p>private void outputMethodDetails(MethodNode method)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputmethodparams","title":"outputMethodParams","text":"<p>private void outputMethodParams(MethodNode method)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/doclet/PackageWriter/#outputdeprecation","title":"outputDeprecation","text":"<p>private void outputDeprecation(Deprecation status, Text text)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/model/","title":"Package io.github.sandydunlop.markista.model","text":"<p>The classes used to store structure and docuemntation information in the API tree.</p> ClassesInterfacesEnum Classes Class Description Text ExceptionNode Node FieldNode A class to hold infomation about fields within a class, interface, or enum. ModuleNode DirectiveNode MethodNode PackageNode ParamNode A class to hold infomation about method parameters. AbstractTypeOwner Reference TypeNode AnnotationNode EnumNode OverriddenMethodNode Api InterfaceNode ClassNode Class Description PackageMember PackageOwner TypeOwner Class Description Modifier Deprecation"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/","title":"AbstractTypeOwner","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#class-abstracttypeowner","title":"Class AbstractTypeOwner","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.AbstractTypeOwner  All Implemented Interfaces: TypeOwner</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected List&lt;TypeNode&gt; types"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#constructor-summary","title":"Constructor Summary","text":"Constructor Description AbstractTypeOwner()"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void addType(TypeNode typeNode) List&lt;TypeNode&gt; getTypes() List&lt;PackageMember&gt; getClasses() List&lt;PackageMember&gt; getInterfaces() List&lt;PackageMember&gt; getEnums() List&lt;PackageMember&gt; getAnnotations() void addClass(ClassNode node) void addInterface(InterfaceNode node) void addEnum(EnumNode node) void addException(ExceptionNode node) void addAnnotation(AnnotationNode node) void sort()"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#types","title":"types","text":""},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#addtype","title":"addType","text":"<p>void addType(TypeNode typeNode)</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#gettypes","title":"getTypes","text":"<p>List&lt;TypeNode&gt; getTypes()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#getclasses","title":"getClasses","text":"<p>List&lt;PackageMember&gt; getClasses()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#getinterfaces","title":"getInterfaces","text":"<p>List&lt;PackageMember&gt; getInterfaces()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#getenums","title":"getEnums","text":"<p>List&lt;PackageMember&gt; getEnums()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#getannotations","title":"getAnnotations","text":"<p>List&lt;PackageMember&gt; getAnnotations()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#addclass","title":"addClass","text":"<p>void addClass(ClassNode node)</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#addinterface","title":"addInterface","text":"<p>void addInterface(InterfaceNode node)</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#addenum","title":"addEnum","text":"<p>void addEnum(EnumNode node)</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#addexception","title":"addException","text":"<p>void addException(ExceptionNode node)</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#addannotation","title":"addAnnotation","text":"<p>void addAnnotation(AnnotationNode node)</p>"},{"location":"markista/javadoc/markista/model/AbstractTypeOwner/#sort","title":"sort","text":"<p>void sort()</p>"},{"location":"markista/javadoc/markista/model/AnnotationNode/","title":"AnnotationNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/AnnotationNode/#class-annotationnode","title":"Class AnnotationNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.AnnotationNode </p>"},{"location":"markista/javadoc/markista/model/AnnotationNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description AnnotationNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/markista/model/Api/","title":"Api","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Api/#class-api","title":"Class Api","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Api </p>"},{"location":"markista/javadoc/markista/model/Api/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;ModuleNode&gt; modules private List&lt;PackageNode&gt; packages private ModuleNode unnamedModule"},{"location":"markista/javadoc/markista/model/Api/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Api()"},{"location":"markista/javadoc/markista/model/Api/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getName() void addModule(ModuleNode node) List&lt;ModuleNode&gt; getModules() ModuleNode getModuleNode(String qualifiedName) ModuleNode getUnnamedModuleNode() void addPackage(PackageNode node) List&lt;PackageNode&gt; getPackages() PackageNode getPackageNode(String qualifiedName) TypeNode getTypeNode(String qualifiedName) TypeNode getTypeNode(TypeElement type) ClassNode getClassNode(TypeElement type) void sort()"},{"location":"markista/javadoc/markista/model/Api/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/Api/#modules","title":"modules","text":""},{"location":"markista/javadoc/markista/model/Api/#packages","title":"packages","text":""},{"location":"markista/javadoc/markista/model/Api/#unnamedmodule","title":"unnamedModule","text":""},{"location":"markista/javadoc/markista/model/Api/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Api/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/markista/model/Api/#addmodule","title":"addModule","text":"<p>void addModule(ModuleNode node)</p>"},{"location":"markista/javadoc/markista/model/Api/#getmodules","title":"getModules","text":"<p>List&lt;ModuleNode&gt; getModules()</p>"},{"location":"markista/javadoc/markista/model/Api/#getmodulenode","title":"getModuleNode","text":"<p>ModuleNode getModuleNode(String qualifiedName)</p>"},{"location":"markista/javadoc/markista/model/Api/#getunnamedmodulenode","title":"getUnnamedModuleNode","text":"<p>ModuleNode getUnnamedModuleNode()</p>"},{"location":"markista/javadoc/markista/model/Api/#addpackage","title":"addPackage","text":"<p>void addPackage(PackageNode node)</p>"},{"location":"markista/javadoc/markista/model/Api/#getpackages","title":"getPackages","text":"<p>List&lt;PackageNode&gt; getPackages()</p>"},{"location":"markista/javadoc/markista/model/Api/#getpackagenode","title":"getPackageNode","text":"<p>PackageNode getPackageNode(String qualifiedName)</p>"},{"location":"markista/javadoc/markista/model/Api/#gettypenode","title":"getTypeNode","text":"<p>TypeNode getTypeNode(String qualifiedName)</p>"},{"location":"markista/javadoc/markista/model/Api/#gettypenode_1","title":"getTypeNode","text":"<p>TypeNode getTypeNode(TypeElement type)</p>"},{"location":"markista/javadoc/markista/model/Api/#getclassnode","title":"getClassNode","text":"<p>ClassNode getClassNode(TypeElement type)</p>"},{"location":"markista/javadoc/markista/model/Api/#sort","title":"sort","text":"<p>void sort()</p>"},{"location":"markista/javadoc/markista/model/ClassNode/","title":"ClassNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/ClassNode/#class-classnode","title":"Class ClassNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ClassNode </p>"},{"location":"markista/javadoc/markista/model/ClassNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ClassNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/markista/model/Deprecation/","title":"Deprecation","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Deprecation/#enum-deprecation","title":"Enum Deprecation","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Deprecation&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Deprecation </p>"},{"location":"markista/javadoc/markista/model/Deprecation/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE FOR_REMOVAL DEPRECATED"},{"location":"markista/javadoc/markista/model/Deprecation/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Deprecation()"},{"location":"markista/javadoc/markista/model/Deprecation/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Deprecation values() static Deprecation valueOf(String name)"},{"location":"markista/javadoc/markista/model/Deprecation/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/markista/model/Deprecation/#none","title":"NONE","text":"<p>public static final Deprecation NONE</p>"},{"location":"markista/javadoc/markista/model/Deprecation/#for_removal","title":"FOR_REMOVAL","text":"<p>public static final Deprecation FOR_REMOVAL</p>"},{"location":"markista/javadoc/markista/model/Deprecation/#deprecated","title":"DEPRECATED","text":"<p>public static final Deprecation DEPRECATED</p>"},{"location":"markista/javadoc/markista/model/Deprecation/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Deprecation/#values","title":"values","text":"<p>static Deprecation values()</p>"},{"location":"markista/javadoc/markista/model/Deprecation/#valueof","title":"valueOf","text":"<p>static Deprecation valueOf(String name)</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/","title":"DirectiveNode.Kind","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#enum-directivenodekind","title":"Enum DirectiveNode.Kind","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.DirectiveNode.Kind&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.DirectiveNode.Kind  Enclosing Class: DirectiveNode</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE REQUIRES EXPORTS OPENS USES PROVIDES"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#constructor-summary","title":"Constructor Summary","text":"Constructor Description DirectiveNode.Kind()"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static DirectiveNode.Kind values() static DirectiveNode.Kind valueOf(String name)"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#none","title":"NONE","text":"<p>public static final DirectiveNode.Kind NONE</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#requires","title":"REQUIRES","text":"<p>public static final DirectiveNode.Kind REQUIRES</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#exports","title":"EXPORTS","text":"<p>public static final DirectiveNode.Kind EXPORTS</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#opens","title":"OPENS","text":"<p>public static final DirectiveNode.Kind OPENS</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#uses","title":"USES","text":"<p>public static final DirectiveNode.Kind USES</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#provides","title":"PROVIDES","text":"<p>public static final DirectiveNode.Kind PROVIDES</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#values","title":"values","text":"<p>static DirectiveNode.Kind values()</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode.Kind/#valueof","title":"valueOf","text":"<p>static DirectiveNode.Kind valueOf(String name)</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/","title":"DirectiveNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#class-directivenode","title":"Class DirectiveNode","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.DirectiveNode </p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private DirectiveNode.Kind kind private String name private boolean transitive private List&lt;String&gt; packages private List&lt;String&gt; implementations private String interfaceName"},{"location":"markista/javadoc/markista/model/DirectiveNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description DirectiveNode(DirectiveNode.Kind kind, String name, boolean transitive) DirectiveNode(DirectiveNode.Kind kind, String name)"},{"location":"markista/javadoc/markista/model/DirectiveNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description DirectiveNode.Kind getKind() String getName() boolean isTransitive() void addPackage(String packageName) List&lt;String&gt; getPackages() void addImplementation(String implementationName) List&lt;String&gt; getImplementations() void setInterface(String interfaceName) String getInterface()"},{"location":"markista/javadoc/markista/model/DirectiveNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#kind","title":"kind","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#name","title":"name","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#transitive","title":"transitive","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#packages","title":"packages","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#implementations","title":"implementations","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#interfacename","title":"interfaceName","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/DirectiveNode/#getkind","title":"getKind","text":"<p>DirectiveNode.Kind getKind()</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#istransitive","title":"isTransitive","text":"<p>boolean isTransitive()</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#addpackage","title":"addPackage","text":"<p>void addPackage(String packageName)</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#getpackages","title":"getPackages","text":"<p>List&lt;String&gt; getPackages()</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#addimplementation","title":"addImplementation","text":"<p>void addImplementation(String implementationName)</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#getimplementations","title":"getImplementations","text":"<p>List&lt;String&gt; getImplementations()</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#setinterface","title":"setInterface","text":"<p>void setInterface(String interfaceName)</p>"},{"location":"markista/javadoc/markista/model/DirectiveNode/#getinterface","title":"getInterface","text":"<p>String getInterface()</p>"},{"location":"markista/javadoc/markista/model/EnumNode/","title":"EnumNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/EnumNode/#class-enumnode","title":"Class EnumNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.EnumNode </p>"},{"location":"markista/javadoc/markista/model/EnumNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;FieldNode&gt; constants"},{"location":"markista/javadoc/markista/model/EnumNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description EnumNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/markista/model/EnumNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void addConstant(FieldNode constant) List&lt;FieldNode&gt; getConstants()"},{"location":"markista/javadoc/markista/model/EnumNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/EnumNode/#constants","title":"constants","text":""},{"location":"markista/javadoc/markista/model/EnumNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/EnumNode/#addconstant","title":"addConstant","text":"<p>void addConstant(FieldNode constant)</p>"},{"location":"markista/javadoc/markista/model/EnumNode/#getconstants","title":"getConstants","text":"<p>List&lt;FieldNode&gt; getConstants()</p>"},{"location":"markista/javadoc/markista/model/ExceptionNode/","title":"ExceptionNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/ExceptionNode/#class-exceptionnode","title":"Class ExceptionNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ExceptionNode </p>"},{"location":"markista/javadoc/markista/model/ExceptionNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ExceptionNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/markista/model/FieldNode/","title":"FieldNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/FieldNode/#class-fieldnode","title":"Class FieldNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.ParamNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.FieldNode </p>"},{"location":"markista/javadoc/markista/model/FieldNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Serializable constantValue"},{"location":"markista/javadoc/markista/model/FieldNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description FieldNode(TypeNode type, String name)"},{"location":"markista/javadoc/markista/model/FieldNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description Serializable getConstantValue() void setConstantValue(Serializable constantValue) String fullSignature()"},{"location":"markista/javadoc/markista/model/FieldNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/FieldNode/#constantvalue","title":"constantValue","text":""},{"location":"markista/javadoc/markista/model/FieldNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/FieldNode/#getconstantvalue","title":"getConstantValue","text":"<p>Serializable getConstantValue()</p>"},{"location":"markista/javadoc/markista/model/FieldNode/#setconstantvalue","title":"setConstantValue","text":"<p>void setConstantValue(Serializable constantValue)</p>"},{"location":"markista/javadoc/markista/model/FieldNode/#fullsignature","title":"fullSignature","text":"<p>String fullSignature()</p>"},{"location":"markista/javadoc/markista/model/InterfaceNode/","title":"InterfaceNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/InterfaceNode/#class-interfacenode","title":"Class InterfaceNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.InterfaceNode </p>"},{"location":"markista/javadoc/markista/model/InterfaceNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description InterfaceNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/markista/model/MethodNode/","title":"MethodNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#class-methodnode","title":"Class MethodNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.MethodNode </p>"},{"location":"markista/javadoc/markista/model/MethodNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Text returnDescription private String specifiedBy private TypeNode returnType private OverriddenMethodNode overrides private List&lt;ParamNode&gt; params private List&lt;? extends TypeMirror&gt; thrownTypes private TypeNode owner"},{"location":"markista/javadoc/markista/model/MethodNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MethodNode(TypeNode returnType, String name)"},{"location":"markista/javadoc/markista/model/MethodNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setOverriddenMethod(OverriddenMethodNode overrides) OverriddenMethodNode getOverriddenMethod() void setReturnType(TypeNode returnType) TypeNode getReturnType() void addParam(ParamNode param) List&lt;ParamNode&gt; getParams() void setThrownTypes(List&lt;? extends TypeMirror&gt; thrownTypes) List&lt;? extends TypeMirror&gt; getThrownTypes() void setOwner(TypeNode owner) TypeNode getOwner() void setSpecifiedBy(String interfaceName) String getSpecifiedBy() void setReturnDescription(Text text) Text getReturnDescription() String signature() String fullSignature() String paramsString() void setSimpleName(String name) String getSimpleName() void setQualifiedName(String name) String getQualifiedName()"},{"location":"markista/javadoc/markista/model/MethodNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#returndescription","title":"returnDescription","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#specifiedby","title":"specifiedBy","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#returntype","title":"returnType","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#overrides","title":"overrides","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#params","title":"params","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#throwntypes","title":"thrownTypes","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#owner","title":"owner","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/MethodNode/#setoverriddenmethod","title":"setOverriddenMethod","text":"<p>void setOverriddenMethod(OverriddenMethodNode overrides)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getoverriddenmethod","title":"getOverriddenMethod","text":"<p>OverriddenMethodNode getOverriddenMethod()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#setreturntype","title":"setReturnType","text":"<p>void setReturnType(TypeNode returnType)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getreturntype","title":"getReturnType","text":"<p>TypeNode getReturnType()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#addparam","title":"addParam","text":"<p>void addParam(ParamNode param)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getparams","title":"getParams","text":"<p>List&lt;ParamNode&gt; getParams()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#setthrowntypes","title":"setThrownTypes","text":"<p>void setThrownTypes(List&lt;? extends TypeMirror&gt; thrownTypes)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getthrowntypes","title":"getThrownTypes","text":"<p>List&lt;? extends TypeMirror&gt; getThrownTypes()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#setowner","title":"setOwner","text":"<p>void setOwner(TypeNode owner)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getowner","title":"getOwner","text":"<p>TypeNode getOwner()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#setspecifiedby","title":"setSpecifiedBy","text":"<p>void setSpecifiedBy(String interfaceName)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getspecifiedby","title":"getSpecifiedBy","text":"<p>String getSpecifiedBy()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#setreturndescription","title":"setReturnDescription","text":"<p>void setReturnDescription(Text text)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getreturndescription","title":"getReturnDescription","text":"<p>Text getReturnDescription()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#signature","title":"signature","text":"<p>String signature()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#fullsignature","title":"fullSignature","text":"<p>String fullSignature()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#paramsstring","title":"paramsString","text":"<p>String paramsString()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#setsimplename","title":"setSimpleName","text":"<p>void setSimpleName(String name)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getsimplename","title":"getSimpleName","text":"<p>String getSimpleName()</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#setqualifiedname","title":"setQualifiedName","text":"<p>void setQualifiedName(String name)</p>"},{"location":"markista/javadoc/markista/model/MethodNode/#getqualifiedname","title":"getQualifiedName","text":"<p>String getQualifiedName()</p>"},{"location":"markista/javadoc/markista/model/Modifier/","title":"Modifier","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Modifier/#enum-modifier","title":"Enum Modifier","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Modifier&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Modifier </p>"},{"location":"markista/javadoc/markista/model/Modifier/#enum-constants","title":"Enum Constants","text":"Enum Constant Description PUBLIC PROTECTED PRIVATE STATIC FINAL ABSTRACT SYNCHRONIZED TRANSIENT VOLATILE NATIVE STRICTFP DEFAULT"},{"location":"markista/javadoc/markista/model/Modifier/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private final String name"},{"location":"markista/javadoc/markista/model/Modifier/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Modifier(String s)"},{"location":"markista/javadoc/markista/model/Modifier/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Modifier values() static Modifier valueOf(String name) String toString()"},{"location":"markista/javadoc/markista/model/Modifier/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/markista/model/Modifier/#public","title":"PUBLIC","text":"<p>public static final Modifier PUBLIC</p>"},{"location":"markista/javadoc/markista/model/Modifier/#protected","title":"PROTECTED","text":"<p>public static final Modifier PROTECTED</p>"},{"location":"markista/javadoc/markista/model/Modifier/#private","title":"PRIVATE","text":"<p>public static final Modifier PRIVATE</p>"},{"location":"markista/javadoc/markista/model/Modifier/#static","title":"STATIC","text":"<p>public static final Modifier STATIC</p>"},{"location":"markista/javadoc/markista/model/Modifier/#final","title":"FINAL","text":"<p>public static final Modifier FINAL</p>"},{"location":"markista/javadoc/markista/model/Modifier/#abstract","title":"ABSTRACT","text":"<p>public static final Modifier ABSTRACT</p>"},{"location":"markista/javadoc/markista/model/Modifier/#synchronized","title":"SYNCHRONIZED","text":"<p>public static final Modifier SYNCHRONIZED</p>"},{"location":"markista/javadoc/markista/model/Modifier/#transient","title":"TRANSIENT","text":"<p>public static final Modifier TRANSIENT</p>"},{"location":"markista/javadoc/markista/model/Modifier/#volatile","title":"VOLATILE","text":"<p>public static final Modifier VOLATILE</p>"},{"location":"markista/javadoc/markista/model/Modifier/#native","title":"NATIVE","text":"<p>public static final Modifier NATIVE</p>"},{"location":"markista/javadoc/markista/model/Modifier/#strictfp","title":"STRICTFP","text":"<p>public static final Modifier STRICTFP</p>"},{"location":"markista/javadoc/markista/model/Modifier/#default","title":"DEFAULT","text":"<p>public static final Modifier DEFAULT</p>"},{"location":"markista/javadoc/markista/model/Modifier/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/Modifier/#name","title":"name","text":""},{"location":"markista/javadoc/markista/model/Modifier/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Modifier/#values","title":"values","text":"<p>static Modifier values()</p>"},{"location":"markista/javadoc/markista/model/Modifier/#valueof","title":"valueOf","text":"<p>static Modifier valueOf(String name)</p>"},{"location":"markista/javadoc/markista/model/Modifier/#tostring","title":"toString","text":"<p>String toString()</p> <p>Overrides:</p> <p>tostring from Enum&lt;Modifier&gt;</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/","title":"ModuleNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#class-modulenode","title":"Class ModuleNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ModuleNode  All Implemented Interfaces: PackageOwner</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;DirectiveNode&gt; directives private List&lt;PackageMember&gt; packages private List&lt;FieldNode&gt; constantValues"},{"location":"markista/javadoc/markista/model/ModuleNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleNode(String moduleName)"},{"location":"markista/javadoc/markista/model/ModuleNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getName() List&lt;PackageMember&gt; getPackages() void addPackage(PackageNode packageNode) void addDirective(DirectiveNode directive) List&lt;DirectiveNode&gt; getDirectives() void addConstantValue(FieldNode constant) List&lt;FieldNode&gt; getConstantValues() List&lt;DirectiveNode&gt; getExports() List&lt;DirectiveNode&gt; getRequires() List&lt;DirectiveNode&gt; getOpens() List&lt;DirectiveNode&gt; getUses() List&lt;DirectiveNode&gt; getProvides()"},{"location":"markista/javadoc/markista/model/ModuleNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/ModuleNode/#directives","title":"directives","text":""},{"location":"markista/javadoc/markista/model/ModuleNode/#packages","title":"packages","text":""},{"location":"markista/javadoc/markista/model/ModuleNode/#constantvalues","title":"constantValues","text":""},{"location":"markista/javadoc/markista/model/ModuleNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/ModuleNode/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getpackages","title":"getPackages","text":"<p>List&lt;PackageMember&gt; getPackages()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#addpackage","title":"addPackage","text":"<p>void addPackage(PackageNode packageNode)</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#adddirective","title":"addDirective","text":"<p>void addDirective(DirectiveNode directive)</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getdirectives","title":"getDirectives","text":"<p>List&lt;DirectiveNode&gt; getDirectives()</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#addconstantvalue","title":"addConstantValue","text":"<p>void addConstantValue(FieldNode constant)</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getconstantvalues","title":"getConstantValues","text":"<p>List&lt;FieldNode&gt; getConstantValues()</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getexports","title":"getExports","text":"<p>List&lt;DirectiveNode&gt; getExports()</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getrequires","title":"getRequires","text":"<p>List&lt;DirectiveNode&gt; getRequires()</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getopens","title":"getOpens","text":"<p>List&lt;DirectiveNode&gt; getOpens()</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getuses","title":"getUses","text":"<p>List&lt;DirectiveNode&gt; getUses()</p>"},{"location":"markista/javadoc/markista/model/ModuleNode/#getprovides","title":"getProvides","text":"<p>List&lt;DirectiveNode&gt; getProvides()</p>"},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/","title":"Node.ModifierSorter","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#class-nodemodifiersorter","title":"Class Node.ModifierSorter","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Node.ModifierSorter  Enclosing Class: Node</p>"},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final List&lt;Modifier&gt; ORDER"},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Node.ModifierSorter()"},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static List&lt;Modifier&gt; sortModifiers(Set&lt;Modifier&gt; modifierSet)"},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#order","title":"ORDER","text":""},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Node.ModifierSorter/#sortmodifiers","title":"sortModifiers","text":"<p>static List&lt;Modifier&gt; sortModifiers(Set&lt;Modifier&gt; modifierSet)</p>"},{"location":"markista/javadoc/markista/model/Node/","title":"Node","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Node/#class-node","title":"Class Node","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Node </p>"},{"location":"markista/javadoc/markista/model/Node/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description Node.ModifierSorter"},{"location":"markista/javadoc/markista/model/Node/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected String simpleName protected String qualifiedName protected PackageNode packageNode private Set&lt;Modifier&gt; modifiers private Deprecation deprecation private Text deprecationText private Text since protected Text firstSentence private Text body private Text fullBody private List&lt;Reference&gt; references"},{"location":"markista/javadoc/markista/model/Node/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Node()"},{"location":"markista/javadoc/markista/model/Node/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void addModifier(Modifier mod) Set&lt;Modifier&gt; getModifiers() void setDeprecation(Deprecation deprecation) Deprecation getDeprecation() void setDeprecationText(Text text) Text getDeprecationText() void setSince(Text text) Text getSince() void setFirstSentence(Text text) Text getFirstSentence() void setBody(Text text) Text getBody() void setFullBody(Text text) Text getFullBody() void setReferences(List&lt;Reference&gt; refs) List&lt;Reference&gt; getReferences() String getModifiersString()"},{"location":"markista/javadoc/markista/model/Node/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/Node/#simplename","title":"simpleName","text":""},{"location":"markista/javadoc/markista/model/Node/#qualifiedname","title":"qualifiedName","text":""},{"location":"markista/javadoc/markista/model/Node/#packagenode","title":"packageNode","text":""},{"location":"markista/javadoc/markista/model/Node/#modifiers","title":"modifiers","text":""},{"location":"markista/javadoc/markista/model/Node/#deprecation","title":"deprecation","text":""},{"location":"markista/javadoc/markista/model/Node/#deprecationtext","title":"deprecationText","text":""},{"location":"markista/javadoc/markista/model/Node/#since","title":"since","text":""},{"location":"markista/javadoc/markista/model/Node/#firstsentence","title":"firstSentence","text":""},{"location":"markista/javadoc/markista/model/Node/#body","title":"body","text":""},{"location":"markista/javadoc/markista/model/Node/#fullbody","title":"fullBody","text":""},{"location":"markista/javadoc/markista/model/Node/#references","title":"references","text":""},{"location":"markista/javadoc/markista/model/Node/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Node/#addmodifier","title":"addModifier","text":"<p>void addModifier(Modifier mod)</p>"},{"location":"markista/javadoc/markista/model/Node/#getmodifiers","title":"getModifiers","text":"<p>Set&lt;Modifier&gt; getModifiers()</p>"},{"location":"markista/javadoc/markista/model/Node/#setdeprecation","title":"setDeprecation","text":"<p>void setDeprecation(Deprecation deprecation)</p>"},{"location":"markista/javadoc/markista/model/Node/#getdeprecation","title":"getDeprecation","text":"<p>Deprecation getDeprecation()</p>"},{"location":"markista/javadoc/markista/model/Node/#setdeprecationtext","title":"setDeprecationText","text":"<p>void setDeprecationText(Text text)</p>"},{"location":"markista/javadoc/markista/model/Node/#getdeprecationtext","title":"getDeprecationText","text":"<p>Text getDeprecationText()</p>"},{"location":"markista/javadoc/markista/model/Node/#setsince","title":"setSince","text":"<p>void setSince(Text text)</p>"},{"location":"markista/javadoc/markista/model/Node/#getsince","title":"getSince","text":"<p>Text getSince()</p>"},{"location":"markista/javadoc/markista/model/Node/#setfirstsentence","title":"setFirstSentence","text":"<p>void setFirstSentence(Text text)</p>"},{"location":"markista/javadoc/markista/model/Node/#getfirstsentence","title":"getFirstSentence","text":"<p>Text getFirstSentence()</p>"},{"location":"markista/javadoc/markista/model/Node/#setbody","title":"setBody","text":"<p>void setBody(Text text)</p>"},{"location":"markista/javadoc/markista/model/Node/#getbody","title":"getBody","text":"<p>Text getBody()</p>"},{"location":"markista/javadoc/markista/model/Node/#setfullbody","title":"setFullBody","text":"<p>void setFullBody(Text text)</p>"},{"location":"markista/javadoc/markista/model/Node/#getfullbody","title":"getFullBody","text":"<p>Text getFullBody()</p>"},{"location":"markista/javadoc/markista/model/Node/#setreferences","title":"setReferences","text":"<p>void setReferences(List&lt;Reference&gt; refs)</p>"},{"location":"markista/javadoc/markista/model/Node/#getreferences","title":"getReferences","text":"<p>List&lt;Reference&gt; getReferences()</p>"},{"location":"markista/javadoc/markista/model/Node/#getmodifiersstring","title":"getModifiersString","text":"<p>String getModifiersString()</p>"},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/","title":"OverriddenMethodNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#class-overriddenmethodnode","title":"Class OverriddenMethodNode","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.OverriddenMethodNode </p>"},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private String qualifiedClassName private String methodName"},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description OverriddenMethodNode(String qualifiedClassName, String methodName)"},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getClassName() String getMethodName()"},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#qualifiedclassname","title":"qualifiedClassName","text":""},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#methodname","title":"methodName","text":""},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#getclassname","title":"getClassName","text":"<p>String getClassName()</p>"},{"location":"markista/javadoc/markista/model/OverriddenMethodNode/#getmethodname","title":"getMethodName","text":"<p>String getMethodName()</p>"},{"location":"markista/javadoc/markista/model/PackageMember/","title":"PackageMember","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/PackageMember/#interface-packagemember","title":"Interface PackageMember","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.PackageMember </p>"},{"location":"markista/javadoc/markista/model/PackageMember/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract String getName() abstract Text getDescription()"},{"location":"markista/javadoc/markista/model/PackageMember/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/PackageMember/#getname","title":"getName","text":"<p>abstract String getName()</p>"},{"location":"markista/javadoc/markista/model/PackageMember/#getdescription","title":"getDescription","text":"<p>abstract Text getDescription()</p>"},{"location":"markista/javadoc/markista/model/PackageNode/","title":"PackageNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/PackageNode/#class-packagenode","title":"Class PackageNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.PackageNode  All Implemented Interfaces: PackageMember, PackageOwner</p>"},{"location":"markista/javadoc/markista/model/PackageNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private ModuleNode module private List&lt;PackageMember&gt; packages"},{"location":"markista/javadoc/markista/model/PackageNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description PackageNode(String packageName)"},{"location":"markista/javadoc/markista/model/PackageNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setModule(ModuleNode module) ModuleNode getModule() List&lt;PackageMember&gt; getPackages() void addPackage(PackageNode packageNode) String getName() Text getDescription()"},{"location":"markista/javadoc/markista/model/PackageNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/PackageNode/#module","title":"module","text":""},{"location":"markista/javadoc/markista/model/PackageNode/#packages","title":"packages","text":""},{"location":"markista/javadoc/markista/model/PackageNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/PackageNode/#setmodule","title":"setModule","text":"<p>void setModule(ModuleNode module)</p>"},{"location":"markista/javadoc/markista/model/PackageNode/#getmodule","title":"getModule","text":"<p>ModuleNode getModule()</p>"},{"location":"markista/javadoc/markista/model/PackageNode/#getpackages","title":"getPackages","text":"<p>List&lt;PackageMember&gt; getPackages()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/markista/model/PackageNode/#addpackage","title":"addPackage","text":"<p>void addPackage(PackageNode packageNode)</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/markista/model/PackageNode/#getname","title":"getName","text":"<p>String getName()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/markista/model/PackageNode/#getdescription","title":"getDescription","text":"<p>Text getDescription()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/markista/model/PackageOwner/","title":"PackageOwner","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/PackageOwner/#interface-packageowner","title":"Interface PackageOwner","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.PackageOwner </p>"},{"location":"markista/javadoc/markista/model/PackageOwner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract List&lt;PackageMember&gt; getPackages() abstract void addPackage(PackageNode packageNode)"},{"location":"markista/javadoc/markista/model/PackageOwner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/PackageOwner/#getpackages","title":"getPackages","text":"<p>abstract List&lt;PackageMember&gt; getPackages()</p>"},{"location":"markista/javadoc/markista/model/PackageOwner/#addpackage","title":"addPackage","text":"<p>abstract void addPackage(PackageNode packageNode)</p>"},{"location":"markista/javadoc/markista/model/ParamNode/","title":"ParamNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/ParamNode/#class-paramnode","title":"Class ParamNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ParamNode </p>"},{"location":"markista/javadoc/markista/model/ParamNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private TypeNode type"},{"location":"markista/javadoc/markista/model/ParamNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ParamNode(TypeNode type, String name)"},{"location":"markista/javadoc/markista/model/ParamNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description TypeNode getType() void setType(TypeNode type) void setSimpleName(String name) String getSimpleName() void setQualifiedName(String name) String getQualifiedName()"},{"location":"markista/javadoc/markista/model/ParamNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/ParamNode/#type","title":"type","text":""},{"location":"markista/javadoc/markista/model/ParamNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/ParamNode/#gettype","title":"getType","text":"<p>TypeNode getType()</p>"},{"location":"markista/javadoc/markista/model/ParamNode/#settype","title":"setType","text":"<p>void setType(TypeNode type)</p>"},{"location":"markista/javadoc/markista/model/ParamNode/#setsimplename","title":"setSimpleName","text":"<p>void setSimpleName(String name)</p>"},{"location":"markista/javadoc/markista/model/ParamNode/#getsimplename","title":"getSimpleName","text":"<p>String getSimpleName()</p>"},{"location":"markista/javadoc/markista/model/ParamNode/#setqualifiedname","title":"setQualifiedName","text":"<p>void setQualifiedName(String name)</p>"},{"location":"markista/javadoc/markista/model/ParamNode/#getqualifiedname","title":"getQualifiedName","text":"<p>String getQualifiedName()</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/","title":"Reference.Kind","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#enum-referencekind","title":"Enum Reference.Kind","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Reference.Kind&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Reference.Kind  Enclosing Class: Reference</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE URL PAGE MODULE PACKAGE TYPE PRIMITIVE VOID"},{"location":"markista/javadoc/markista/model/Reference.Kind/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Reference.Kind()"},{"location":"markista/javadoc/markista/model/Reference.Kind/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Reference.Kind values() static Reference.Kind valueOf(String name)"},{"location":"markista/javadoc/markista/model/Reference.Kind/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/markista/model/Reference.Kind/#none","title":"NONE","text":"<p>public static final Reference.Kind NONE</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#url","title":"URL","text":"<p>public static final Reference.Kind URL</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#page","title":"PAGE","text":"<p>public static final Reference.Kind PAGE</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#module","title":"MODULE","text":"<p>public static final Reference.Kind MODULE</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#package","title":"PACKAGE","text":"<p>public static final Reference.Kind PACKAGE</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#type","title":"TYPE","text":"<p>public static final Reference.Kind TYPE</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#primitive","title":"PRIMITIVE","text":"<p>public static final Reference.Kind PRIMITIVE</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#void","title":"VOID","text":"<p>public static final Reference.Kind VOID</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Reference.Kind/#values","title":"values","text":"<p>static Reference.Kind values()</p>"},{"location":"markista/javadoc/markista/model/Reference.Kind/#valueof","title":"valueOf","text":"<p>static Reference.Kind valueOf(String name)</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/","title":"Reference.Scope","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/#enum-referencescope","title":"Enum Reference.Scope","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Reference.Scope&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Reference.Scope  Enclosing Class: Reference</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE LOCAL NATIVE FOREIGN"},{"location":"markista/javadoc/markista/model/Reference.Scope/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Reference.Scope()"},{"location":"markista/javadoc/markista/model/Reference.Scope/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Reference.Scope values() static Reference.Scope valueOf(String name)"},{"location":"markista/javadoc/markista/model/Reference.Scope/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/markista/model/Reference.Scope/#none","title":"NONE","text":"<p>public static final Reference.Scope NONE</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/#local","title":"LOCAL","text":"<p>public static final Reference.Scope LOCAL</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/#native","title":"NATIVE","text":"<p>public static final Reference.Scope NATIVE</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/#foreign","title":"FOREIGN","text":"<p>public static final Reference.Scope FOREIGN</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Reference.Scope/#values","title":"values","text":"<p>static Reference.Scope values()</p>"},{"location":"markista/javadoc/markista/model/Reference.Scope/#valueof","title":"valueOf","text":"<p>static Reference.Scope valueOf(String name)</p>"},{"location":"markista/javadoc/markista/model/Reference/","title":"Reference","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Reference/#class-reference","title":"Class Reference","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Reference </p>"},{"location":"markista/javadoc/markista/model/Reference/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Reference.Kind kind private Reference.Scope scope private String name private String uri private String anchor"},{"location":"markista/javadoc/markista/model/Reference/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Reference() Reference(Reference.Kind kind, String name, String uri) Reference(Reference.Scope scope, Reference.Kind kind, String name) Reference(Reference.Scope scope, Reference.Kind kind, String name, String uri)"},{"location":"markista/javadoc/markista/model/Reference/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setKind(Reference.Kind kind) Reference.Kind getKind() void setScope(Reference.Scope scope) Reference.Scope getScope() void setName(String name) String getName() void setUri(String uri) String getUri() void setAnchor(String anchor) String getAnchor()"},{"location":"markista/javadoc/markista/model/Reference/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/Reference/#kind","title":"kind","text":""},{"location":"markista/javadoc/markista/model/Reference/#scope","title":"scope","text":""},{"location":"markista/javadoc/markista/model/Reference/#name","title":"name","text":""},{"location":"markista/javadoc/markista/model/Reference/#uri","title":"uri","text":""},{"location":"markista/javadoc/markista/model/Reference/#anchor","title":"anchor","text":""},{"location":"markista/javadoc/markista/model/Reference/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Reference/#setkind","title":"setKind","text":"<p>void setKind(Reference.Kind kind)</p>"},{"location":"markista/javadoc/markista/model/Reference/#getkind","title":"getKind","text":"<p>Reference.Kind getKind()</p>"},{"location":"markista/javadoc/markista/model/Reference/#setscope","title":"setScope","text":"<p>void setScope(Reference.Scope scope)</p>"},{"location":"markista/javadoc/markista/model/Reference/#getscope","title":"getScope","text":"<p>Reference.Scope getScope()</p>"},{"location":"markista/javadoc/markista/model/Reference/#setname","title":"setName","text":"<p>void setName(String name)</p>"},{"location":"markista/javadoc/markista/model/Reference/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/markista/model/Reference/#seturi","title":"setUri","text":"<p>void setUri(String uri)</p>"},{"location":"markista/javadoc/markista/model/Reference/#geturi","title":"getUri","text":"<p>String getUri()</p>"},{"location":"markista/javadoc/markista/model/Reference/#setanchor","title":"setAnchor","text":"<p>void setAnchor(String anchor)</p>"},{"location":"markista/javadoc/markista/model/Reference/#getanchor","title":"getAnchor","text":"<p>String getAnchor()</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/","title":"Text.Segment","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#class-textsegment","title":"Class Text.Segment","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Text.Segment  Enclosing Class: Text</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Text.SegmentKind kind private String text private String link"},{"location":"markista/javadoc/markista/model/Text.Segment/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Text.Segment()"},{"location":"markista/javadoc/markista/model/Text.Segment/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Text.Segment empty() void setKind(Text.SegmentKind k) Text.SegmentKind getKind() String toString() void setText(String text) String getText() void setLink(String link) String getLink()"},{"location":"markista/javadoc/markista/model/Text.Segment/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/Text.Segment/#kind","title":"kind","text":""},{"location":"markista/javadoc/markista/model/Text.Segment/#text","title":"text","text":""},{"location":"markista/javadoc/markista/model/Text.Segment/#link","title":"link","text":""},{"location":"markista/javadoc/markista/model/Text.Segment/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Text.Segment/#empty","title":"empty","text":"<p>static Text.Segment empty()</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#setkind","title":"setKind","text":"<p>void setKind(Text.SegmentKind k)</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#getkind","title":"getKind","text":"<p>Text.SegmentKind getKind()</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#tostring","title":"toString","text":"<p>String toString()</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#settext","title":"setText","text":"<p>void setText(String text)</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#gettext","title":"getText","text":"<p>String getText()</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#setlink","title":"setLink","text":"<p>void setLink(String link)</p>"},{"location":"markista/javadoc/markista/model/Text.Segment/#getlink","title":"getLink","text":"<p>String getLink()</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/","title":"Text.SegmentKind","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#enum-textsegmentkind","title":"Enum Text.SegmentKind","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Text.SegmentKind&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Text.SegmentKind  Enclosing Class: Text</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE MARKDOWN TEXT LINK CODE START END"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Text.SegmentKind()"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Text.SegmentKind values() static Text.SegmentKind valueOf(String name)"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#none","title":"NONE","text":"<p>public static final Text.SegmentKind NONE</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#markdown","title":"MARKDOWN","text":"<p>public static final Text.SegmentKind MARKDOWN</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#text","title":"TEXT","text":"<p>public static final Text.SegmentKind TEXT</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#link","title":"LINK","text":"<p>public static final Text.SegmentKind LINK</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#code","title":"CODE","text":"<p>public static final Text.SegmentKind CODE</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#start","title":"START","text":"<p>public static final Text.SegmentKind START</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#end","title":"END","text":"<p>public static final Text.SegmentKind END</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#values","title":"values","text":"<p>static Text.SegmentKind values()</p>"},{"location":"markista/javadoc/markista/model/Text.SegmentKind/#valueof","title":"valueOf","text":"<p>static Text.SegmentKind valueOf(String name)</p>"},{"location":"markista/javadoc/markista/model/Text/","title":"Text","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/Text/#class-text","title":"Class Text","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Text </p>"},{"location":"markista/javadoc/markista/model/Text/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description static Text.Segment"},{"location":"markista/javadoc/markista/model/Text/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;Text.Segment&gt; segments"},{"location":"markista/javadoc/markista/model/Text/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Text()"},{"location":"markista/javadoc/markista/model/Text/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Text empty() String toString() boolean isEmpty() List&lt;Text.Segment&gt; getSegments() void set(Text text) Text append(Text.Segment segment) Text append(Text text)"},{"location":"markista/javadoc/markista/model/Text/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/Text/#segments","title":"segments","text":""},{"location":"markista/javadoc/markista/model/Text/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/Text/#empty","title":"empty","text":"<p>static Text empty()</p>"},{"location":"markista/javadoc/markista/model/Text/#tostring","title":"toString","text":"<p>String toString()</p>"},{"location":"markista/javadoc/markista/model/Text/#isempty","title":"isEmpty","text":"<p>boolean isEmpty()</p>"},{"location":"markista/javadoc/markista/model/Text/#getsegments","title":"getSegments","text":"<p>List&lt;Text.Segment&gt; getSegments()</p>"},{"location":"markista/javadoc/markista/model/Text/#set","title":"set","text":"<p>void set(Text text)</p>"},{"location":"markista/javadoc/markista/model/Text/#append","title":"append","text":"<p>Text append(Text.Segment segment)</p>"},{"location":"markista/javadoc/markista/model/Text/#append_1","title":"append","text":"<p>Text append(Text text)</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/","title":"TypeNode.Kind","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#enum-typenodekind","title":"Enum TypeNode.Kind","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.TypeNode.Kind&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.TypeNode.Kind  Enclosing Class: TypeNode</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE CLASS INTERFACE ENUM ANNOTATION"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private final String name"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#constructor-summary","title":"Constructor Summary","text":"Constructor Description TypeNode.Kind(String s)"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static TypeNode.Kind values() static TypeNode.Kind valueOf(String name) String toString()"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#none","title":"NONE","text":"<p>public static final TypeNode.Kind NONE</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#class","title":"CLASS","text":"<p>public static final TypeNode.Kind CLASS</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#interface","title":"INTERFACE","text":"<p>public static final TypeNode.Kind INTERFACE</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#enum","title":"ENUM","text":"<p>public static final TypeNode.Kind ENUM</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#annotation","title":"ANNOTATION","text":"<p>public static final TypeNode.Kind ANNOTATION</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#name","title":"name","text":""},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#values","title":"values","text":"<p>static TypeNode.Kind values()</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#valueof","title":"valueOf","text":"<p>static TypeNode.Kind valueOf(String name)</p>"},{"location":"markista/javadoc/markista/model/TypeNode.Kind/#tostring","title":"toString","text":"<p>String toString()</p> <p>Overrides:</p> <p>tostring from Enum&lt;TypeNode.Kind&gt;</p>"},{"location":"markista/javadoc/markista/model/TypeNode/","title":"TypeNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#class-typenode","title":"Class TypeNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.TypeNode  All Implemented Interfaces: PackageMember</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private TypeOwner owner private List&lt;String&gt; implementedInterfaces private List&lt;String&gt; supertypes private String arrayBrackets private List&lt;MethodNode&gt; constructors private List&lt;MethodNode&gt; methods private List&lt;FieldNode&gt; fields protected TypeNode.Kind kind"},{"location":"markista/javadoc/markista/model/TypeNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description TypeNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/markista/model/TypeNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setArrayBrackets(String brackets) String getArrayBrackets() void setImplementedInterfaces(List&lt;String&gt; implementedInterfaces) void setSupertypes(List&lt;String&gt; supertypes) List&lt;String&gt; getSupertypes() List&lt;String&gt; getImplementedInterfaces() void setOwner(TypeOwner owner) TypeOwner getOwner() void setSimpleName(String name) String getSimpleName() void setQualifiedName(String name) String getQualifiedName() String getPackageName() PackageNode getPackage() void setKind(TypeNode.Kind kind) TypeNode.Kind getKind() void addMethod(MethodNode method) List&lt;MethodNode&gt; getMethods() void addConstructor(MethodNode constructor) List&lt;MethodNode&gt; getConstructors() void addField(FieldNode field) List&lt;FieldNode&gt; getFields() FieldNode getField(String fieldName) MethodNode getMethod(MethodNode method) MethodNode getConstructor(MethodNode method) String getName() Text getDescription()"},{"location":"markista/javadoc/markista/model/TypeNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#owner","title":"owner","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#implementedinterfaces","title":"implementedInterfaces","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#supertypes","title":"supertypes","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#arraybrackets","title":"arrayBrackets","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#constructors","title":"constructors","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#methods","title":"methods","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#fields","title":"fields","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#kind","title":"kind","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/TypeNode/#setarraybrackets","title":"setArrayBrackets","text":"<p>void setArrayBrackets(String brackets)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getarraybrackets","title":"getArrayBrackets","text":"<p>String getArrayBrackets()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#setimplementedinterfaces","title":"setImplementedInterfaces","text":"<p>void setImplementedInterfaces(List&lt;String&gt; implementedInterfaces)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#setsupertypes","title":"setSupertypes","text":"<p>void setSupertypes(List&lt;String&gt; supertypes)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getsupertypes","title":"getSupertypes","text":"<p>List&lt;String&gt; getSupertypes()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getimplementedinterfaces","title":"getImplementedInterfaces","text":"<p>List&lt;String&gt; getImplementedInterfaces()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#setowner","title":"setOwner","text":"<p>void setOwner(TypeOwner owner)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getowner","title":"getOwner","text":"<p>TypeOwner getOwner()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#setsimplename","title":"setSimpleName","text":"<p>void setSimpleName(String name)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getsimplename","title":"getSimpleName","text":"<p>String getSimpleName()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#setqualifiedname","title":"setQualifiedName","text":"<p>void setQualifiedName(String name)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getqualifiedname","title":"getQualifiedName","text":"<p>String getQualifiedName()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getpackagename","title":"getPackageName","text":"<p>String getPackageName()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getpackage","title":"getPackage","text":"<p>PackageNode getPackage()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#setkind","title":"setKind","text":"<p>void setKind(TypeNode.Kind kind)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getkind","title":"getKind","text":"<p>TypeNode.Kind getKind()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#addmethod","title":"addMethod","text":"<p>void addMethod(MethodNode method)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getmethods","title":"getMethods","text":"<p>List&lt;MethodNode&gt; getMethods()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#addconstructor","title":"addConstructor","text":"<p>void addConstructor(MethodNode constructor)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getconstructors","title":"getConstructors","text":"<p>List&lt;MethodNode&gt; getConstructors()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#addfield","title":"addField","text":"<p>void addField(FieldNode field)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getfields","title":"getFields","text":"<p>List&lt;FieldNode&gt; getFields()</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getfield","title":"getField","text":"<p>FieldNode getField(String fieldName)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getmethod","title":"getMethod","text":"<p>MethodNode getMethod(MethodNode method)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getconstructor","title":"getConstructor","text":"<p>MethodNode getConstructor(MethodNode method)</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getname","title":"getName","text":"<p>String getName()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/markista/model/TypeNode/#getdescription","title":"getDescription","text":"<p>Text getDescription()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/","title":"TypeOwner","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#interface-typeowner","title":"Interface TypeOwner","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.TypeOwner </p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void addType(TypeNode typeNode) abstract List&lt;TypeNode&gt; getTypes() abstract List&lt;PackageMember&gt; getClasses() abstract List&lt;PackageMember&gt; getInterfaces() abstract List&lt;PackageMember&gt; getEnums() abstract List&lt;PackageMember&gt; getAnnotations() abstract String getName()"},{"location":"markista/javadoc/markista/model/TypeOwner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/model/TypeOwner/#addtype","title":"addType","text":"<p>abstract void addType(TypeNode typeNode)</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#gettypes","title":"getTypes","text":"<p>abstract List&lt;TypeNode&gt; getTypes()</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#getclasses","title":"getClasses","text":"<p>abstract List&lt;PackageMember&gt; getClasses()</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#getinterfaces","title":"getInterfaces","text":"<p>abstract List&lt;PackageMember&gt; getInterfaces()</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#getenums","title":"getEnums","text":"<p>abstract List&lt;PackageMember&gt; getEnums()</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#getannotations","title":"getAnnotations","text":"<p>abstract List&lt;PackageMember&gt; getAnnotations()</p>"},{"location":"markista/javadoc/markista/model/TypeOwner/#getname","title":"getName","text":"<p>abstract String getName()</p>"},{"location":"markista/javadoc/markista/util/","title":"Package io.github.sandydunlop.markista.util","text":"<p>This package contains utility methods used by other packages.</p> Classes Class Description TypeUtils FileUtils Configuration Utils A set of utility methods for changing between qualified and unqualified names. ModuleDirectiveGenerator Markdown LinkResolver This class woks calculates the paths for Markdown documents  to link between different packages and to URLs of external packages and their contents."},{"location":"markista/javadoc/markista/util/Configuration/","title":"Configuration","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/markista/util/Configuration/#class-configuration","title":"Class Configuration","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.Configuration </p>"},{"location":"markista/javadoc/markista/util/Configuration/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static Reporter reporter private static String outputDirectory private static boolean documentPrivateMembers private static boolean createExternalLinks private static boolean flattenDirectories private static boolean verbose"},{"location":"markista/javadoc/markista/util/Configuration/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Configuration()"},{"location":"markista/javadoc/markista/util/Configuration/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void setReporter(Reporter r) static Reporter getReporter() static void setOutputDirectory(String path) static String getOutputDirectory() static void setDocumentPrivateMembers(boolean b) static boolean getDocumentPrivateMembers() static void setCreateExternalLinks(boolean b) static boolean getCreateExternalLinks() static void setFlattenDirectories(boolean b) static boolean getFlattenDirectories() static void setVerbose(boolean b) static boolean getVerbose()"},{"location":"markista/javadoc/markista/util/Configuration/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/util/Configuration/#reporter","title":"reporter","text":""},{"location":"markista/javadoc/markista/util/Configuration/#outputdirectory","title":"outputDirectory","text":""},{"location":"markista/javadoc/markista/util/Configuration/#documentprivatemembers","title":"documentPrivateMembers","text":""},{"location":"markista/javadoc/markista/util/Configuration/#createexternallinks","title":"createExternalLinks","text":""},{"location":"markista/javadoc/markista/util/Configuration/#flattendirectories","title":"flattenDirectories","text":""},{"location":"markista/javadoc/markista/util/Configuration/#verbose","title":"verbose","text":""},{"location":"markista/javadoc/markista/util/Configuration/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/util/Configuration/#setreporter","title":"setReporter","text":"<p>static void setReporter(Reporter r)</p>"},{"location":"markista/javadoc/markista/util/Configuration/#getreporter","title":"getReporter","text":"<p>static Reporter getReporter()</p>"},{"location":"markista/javadoc/markista/util/Configuration/#setoutputdirectory","title":"setOutputDirectory","text":"<p>static void setOutputDirectory(String path)</p>"},{"location":"markista/javadoc/markista/util/Configuration/#getoutputdirectory","title":"getOutputDirectory","text":"<p>static String getOutputDirectory()</p>"},{"location":"markista/javadoc/markista/util/Configuration/#setdocumentprivatemembers","title":"setDocumentPrivateMembers","text":"<p>static void setDocumentPrivateMembers(boolean b)</p>"},{"location":"markista/javadoc/markista/util/Configuration/#getdocumentprivatemembers","title":"getDocumentPrivateMembers","text":"<p>static boolean getDocumentPrivateMembers()</p>"},{"location":"markista/javadoc/markista/util/Configuration/#setcreateexternallinks","title":"setCreateExternalLinks","text":"<p>static void setCreateExternalLinks(boolean b)</p>"},{"location":"markista/javadoc/markista/util/Configuration/#getcreateexternallinks","title":"getCreateExternalLinks","text":"<p>static boolean getCreateExternalLinks()</p>"},{"location":"markista/javadoc/markista/util/Configuration/#setflattendirectories","title":"setFlattenDirectories","text":"<p>static void setFlattenDirectories(boolean b)</p>"},{"location":"markista/javadoc/markista/util/Configuration/#getflattendirectories","title":"getFlattenDirectories","text":"<p>static boolean getFlattenDirectories()</p>"},{"location":"markista/javadoc/markista/util/Configuration/#setverbose","title":"setVerbose","text":"<p>static void setVerbose(boolean b)</p>"},{"location":"markista/javadoc/markista/util/Configuration/#getverbose","title":"getVerbose","text":"<p>static boolean getVerbose()</p>"},{"location":"markista/javadoc/markista/util/FileUtils/","title":"FileUtils","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/markista/util/FileUtils/#class-fileutils","title":"Class FileUtils","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.FileUtils </p>"},{"location":"markista/javadoc/markista/util/FileUtils/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private String outputDirectory private String flattenedDirectories"},{"location":"markista/javadoc/markista/util/FileUtils/#constructor-summary","title":"Constructor Summary","text":"Constructor Description FileUtils(ModuleNode moduleNode, String outputDir)"},{"location":"markista/javadoc/markista/util/FileUtils/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getFlattenedDirectories() void setFlattenedDirectories(ModuleNode moduleNode) int countDots(String str) File buildContainingDirPath(String outputDirectory, String packageName) char pathSeparator() Writer createFile(String className, String packageName) Writer createModuleFile(String moduleName, String fileName)"},{"location":"markista/javadoc/markista/util/FileUtils/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/util/FileUtils/#outputdirectory","title":"outputDirectory","text":""},{"location":"markista/javadoc/markista/util/FileUtils/#flatteneddirectories","title":"flattenedDirectories","text":""},{"location":"markista/javadoc/markista/util/FileUtils/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/util/FileUtils/#getflatteneddirectories","title":"getFlattenedDirectories","text":"<p>String getFlattenedDirectories()</p>"},{"location":"markista/javadoc/markista/util/FileUtils/#setflatteneddirectories","title":"setFlattenedDirectories","text":"<p>void setFlattenedDirectories(ModuleNode moduleNode)</p>"},{"location":"markista/javadoc/markista/util/FileUtils/#countdots","title":"countDots","text":"<p>int countDots(String str)</p>"},{"location":"markista/javadoc/markista/util/FileUtils/#buildcontainingdirpath","title":"buildContainingDirPath","text":"<p>File buildContainingDirPath(String outputDirectory, String packageName)</p> <p>Parameters:</p> <p><code>outputDirectory</code> - output path specified by the <code>-d</code> command line parameter</p> <p><code>packageName</code> - the name of the package being documented</p>"},{"location":"markista/javadoc/markista/util/FileUtils/#pathseparator","title":"pathSeparator","text":"<p>char pathSeparator()</p>"},{"location":"markista/javadoc/markista/util/FileUtils/#createfile","title":"createFile","text":"<p>Writer createFile(String className, String packageName)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/util/FileUtils/#createmodulefile","title":"createModuleFile","text":"<p>Writer createModuleFile(String moduleName, String fileName)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/","title":"LinkResolver","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#class-linkresolver","title":"Class LinkResolver","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.LinkResolver </p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final List&lt;String&gt; primitives private static String currentModuleName private static String currentPackageName private static HashMap&lt;String, String&gt; nativeModuleNames private static HashMap&lt;String, String&gt; nativePackageNames private static HashMap&lt;String, String&gt; suffix private static final ModuleLayer moduleLayer private static Api api private static String squashedDirectories"},{"location":"markista/javadoc/markista/util/LinkResolver/#constructor-summary","title":"Constructor Summary","text":"Constructor Description LinkResolver()"},{"location":"markista/javadoc/markista/util/LinkResolver/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void setApi(Api a) static void setFlattenedDirectories(String sd) static void setCurrentPackageName(String name) static void setCurrentModuleName(String name) static void addNativeModule(String moduleName, String baseUrl, String s) private static String getPackageName(String id) private static String getClassName(String id) static Reference resolve(String to) static Reference resolve(String from, String to) static Reference resolveNative(String to) static Reference resolveModule(String to) static ModuleNode getModule(String name) static boolean isPackageQualified(String from, String to) static String qualifyClass(String from, String to) static String qualifyPackage(String from, String to) static String relativize(String to) static String relativizeWithModules(String from, String to) static String relativize(String from, String to)"},{"location":"markista/javadoc/markista/util/LinkResolver/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#primitives","title":"primitives","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#currentmodulename","title":"currentModuleName","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#currentpackagename","title":"currentPackageName","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#nativemodulenames","title":"nativeModuleNames","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#nativepackagenames","title":"nativePackageNames","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#suffix","title":"suffix","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#modulelayer","title":"moduleLayer","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#api","title":"api","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#squasheddirectories","title":"squashedDirectories","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/util/LinkResolver/#setapi","title":"setApi","text":"<p>static void setApi(Api a)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#setflatteneddirectories","title":"setFlattenedDirectories","text":"<p>static void setFlattenedDirectories(String sd)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#setcurrentpackagename","title":"setCurrentPackageName","text":"<p>static void setCurrentPackageName(String name)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#setcurrentmodulename","title":"setCurrentModuleName","text":"<p>static void setCurrentModuleName(String name)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#addnativemodule","title":"addNativeModule","text":"<p>static void addNativeModule(String moduleName, String baseUrl, String s)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#getpackagename","title":"getPackageName","text":"<p>private static String getPackageName(String id)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#getclassname","title":"getClassName","text":"<p>private static String getClassName(String id)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#resolve","title":"resolve","text":"<p>static Reference resolve(String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#resolve_1","title":"resolve","text":"<p>static Reference resolve(String from, String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#resolvenative","title":"resolveNative","text":"<p>static Reference resolveNative(String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#resolvemodule","title":"resolveModule","text":"<p>static Reference resolveModule(String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#getmodule","title":"getModule","text":"<p>static ModuleNode getModule(String name)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#ispackagequalified","title":"isPackageQualified","text":"<p>static boolean isPackageQualified(String from, String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#qualifyclass","title":"qualifyClass","text":"<p>static String qualifyClass(String from, String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#qualifypackage","title":"qualifyPackage","text":"<p>static String qualifyPackage(String from, String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#relativize","title":"relativize","text":"<p>static String relativize(String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#relativizewithmodules","title":"relativizeWithModules","text":"<p>static String relativizeWithModules(String from, String to)</p>"},{"location":"markista/javadoc/markista/util/LinkResolver/#relativize_1","title":"relativize","text":"<p>static String relativize(String from, String to)</p>"},{"location":"markista/javadoc/markista/util/Markdown/","title":"Markdown","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/markista/util/Markdown/#class-markdown","title":"Class Markdown","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.Markdown </p>"},{"location":"markista/javadoc/markista/util/Markdown/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Markdown()"},{"location":"markista/javadoc/markista/util/Markdown/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static String fullSignature(MethodNode method) static String formatParams(List&lt;ParamNode&gt; params) static String formatReference(Reference ref) static String formatText(Text text) static String formatLink(Text.Segment segment) static String mdAutoLink(String identifier) static String mdAutoLink(String identifier, boolean simplify) Create a markdown link, automatically deciding what kind of link to make static String mdRefLink(String pre, Reference link, boolean isMethod) static String mdRefLink(Reference link) static String linkGenerics(String str, boolean simplify) Changes qualified generic type names to unqualified generic type names and adds links to their API documentation. static String splitAndLink(String typesString) static String mdAnchor(String phrase) static String mdAnchorLink(String phrase) static String mdDocumentLink(String docName) static String mdDocumentLink(String phrase, String docName) static String mdFolderLink(String docName) static String mdFolderLink(String phrase, String docName) static String escape(String str)"},{"location":"markista/javadoc/markista/util/Markdown/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/util/Markdown/#fullsignature","title":"fullSignature","text":"<p>static String fullSignature(MethodNode method)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#formatparams","title":"formatParams","text":"<p>static String formatParams(List&lt;ParamNode&gt; params)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#formatreference","title":"formatReference","text":"<p>static String formatReference(Reference ref)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#formattext","title":"formatText","text":"<p>static String formatText(Text text)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#formatlink","title":"formatLink","text":"<p>static String formatLink(Text.Segment segment)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdautolink","title":"mdAutoLink","text":"<p>static String mdAutoLink(String identifier)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdautolink_1","title":"mdAutoLink","text":"<p>static String mdAutoLink(String identifier, boolean simplify)</p> <p>Create a markdown link, automatically deciding what kind of link to make</p> <p>Parameters:</p> <p><code>identifier</code> - a package, type, or method identifier</p> <p><code>simplify</code> - if true, the fully simplified version of the identifier is shown</p> <p>Returns:</p> <p>markdown text for a link to a document for the specified identifier or an anchor link</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdreflink","title":"mdRefLink","text":"<p>static String mdRefLink(String pre, Reference link, boolean isMethod)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdreflink_1","title":"mdRefLink","text":"<p>static String mdRefLink(Reference link)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#linkgenerics","title":"linkGenerics","text":"<p>static String linkGenerics(String str, boolean simplify)</p> <p>Changes qualified generic type names to unqualified generic type names and adds links to their API documentation.</p> <p>Parameters:</p> <p><code>str</code> - A string containing a qualified generic name.</p> <p>Returns:</p> <p>A string with the qualified names changed to unqualified names and links to types added</p>"},{"location":"markista/javadoc/markista/util/Markdown/#splitandlink","title":"splitAndLink","text":"<p>static String splitAndLink(String typesString)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdanchor","title":"mdAnchor","text":"<p>static String mdAnchor(String phrase)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdanchorlink","title":"mdAnchorLink","text":"<p>static String mdAnchorLink(String phrase)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mddocumentlink","title":"mdDocumentLink","text":"<p>static String mdDocumentLink(String docName)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mddocumentlink_1","title":"mdDocumentLink","text":"<p>static String mdDocumentLink(String phrase, String docName)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdfolderlink","title":"mdFolderLink","text":"<p>static String mdFolderLink(String docName)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#mdfolderlink_1","title":"mdFolderLink","text":"<p>static String mdFolderLink(String phrase, String docName)</p>"},{"location":"markista/javadoc/markista/util/Markdown/#escape","title":"escape","text":"<p>static String escape(String str)</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/","title":"ModuleDirectiveGenerator","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#class-moduledirectivegenerator","title":"Class ModuleDirectiveGenerator","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.ModuleDirectiveGenerator </p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static DocletEnvironment environment"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleDirectiveGenerator()"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void setEnvironment(DocletEnvironment env) static DirectiveNode createFrom(ModuleElement.Directive directive) static DirectiveNode createRequiresDirective(ModuleElement.Directive directive) static DirectiveNode createExportsDirective(ModuleElement.Directive directive) static DirectiveNode createOpensDirective(ModuleElement.Directive directive) static DirectiveNode createUsesDirective(ModuleElement.Directive directive) static DirectiveNode createProvidesDirective(ModuleElement.Directive directive)"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#environment","title":"environment","text":""},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#setenvironment","title":"setEnvironment","text":"<p>static void setEnvironment(DocletEnvironment env)</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#createfrom","title":"createFrom","text":"<p>static DirectiveNode createFrom(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#createrequiresdirective","title":"createRequiresDirective","text":"<p>static DirectiveNode createRequiresDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#createexportsdirective","title":"createExportsDirective","text":"<p>static DirectiveNode createExportsDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#createopensdirective","title":"createOpensDirective","text":"<p>static DirectiveNode createOpensDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#createusesdirective","title":"createUsesDirective","text":"<p>static DirectiveNode createUsesDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/markista/util/ModuleDirectiveGenerator/#createprovidesdirective","title":"createProvidesDirective","text":"<p>static DirectiveNode createProvidesDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/","title":"TypeUtils","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#class-typeutils","title":"Class TypeUtils","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.TypeUtils </p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static DocletEnvironment environment private static Api api"},{"location":"markista/javadoc/markista/util/TypeUtils/#constructor-summary","title":"Constructor Summary","text":"Constructor Description TypeUtils()"},{"location":"markista/javadoc/markista/util/TypeUtils/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void init(Api a, DocletEnvironment e) static TypeNode nodeFromElement(TypeElement element) static void setEnumConstants(EnumNode enumNode, TypeElement e) static MethodNode nodeFromElement(ExecutableElement element) static FieldNode nodeFromElement(VariableElement element) static TypeNode createTypeNode(String qualifiedName, String simpleName, PackageNode packageNode, ElementKind elementKind) static Text createText(List&lt;? extends DocTree&gt; dtList) static Text.Segment createTextSegment(DocTree docTree) static String getDocTreeText(DocTree docTree, int start) static String getDocTreePart(DocTree docTree, int n) static void setDocumentation(Node node, Element e) static void setTypeOwnership(TypeNode typeNode, TypeElement element) static void setMethodAnnotations(MethodNode method, ExecutableElement methodElement) static void setSpecifiedBy(MethodNode methodNode, ExecutableElement methodElement) static OverriddenMethodNode getOverriddenMethod(MethodNode method, ExecutableElement methodElement) static OverriddenMethodNode getOverriddenMethod(TypeElement superclass, ExecutableElement methodElement) static OverriddenMethodNode getOverriddenNativeMethod(String qualifiedTypeName, MethodNode method) static void addConstantFieldValuesReference(ModuleNode moduleNode) static boolean isInterface(TypeMirror typeMirror) static void findImplementedInterfaces(TypeElement typeElement, List&lt;String&gt; result) static void collectAllSupertypes(TypeMirror t, List&lt;String&gt; result) static DeprecatedTree getDeprecation(DocCommentTree docComment) static ReturnTree getReturnTree(DocCommentTree dcTree) static ParamTree getParamTree(DocCommentTree dcTree, VariableElement parameter) static List&lt;Reference&gt; getReferences(DocCommentTree dcTree) static Text getSince(DocCommentTree dcTree) static String getUrl(String html) static void setModifiers(Node node, Set&lt;Modifier&gt; modifiers) static void setDeprecationStatus(Node node, Element e, DocCommentTree dct) static boolean isIncludedInApi(Element e) static void setMethodParams(MethodNode methodDoc, ExecutableElement ee) static void setImplementations(DirectiveNode directiveNode, List&lt;? extends TypeElement&gt; implementations) static TypeNode getFieldType(Elements elementUtils, String className, String fieldName) static TypeNode getParamType(ExecutableElement method, String fieldName) private static String getPackageName(String qualifiedTypeName) static PackageElement getEnclosingPackageElement(Element element) static TypeElement getEnclosingTypeElement(Element element) Returns the TypeElement of the class the specified element belongs to."},{"location":"markista/javadoc/markista/util/TypeUtils/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/markista/util/TypeUtils/#environment","title":"environment","text":""},{"location":"markista/javadoc/markista/util/TypeUtils/#api","title":"api","text":""},{"location":"markista/javadoc/markista/util/TypeUtils/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/util/TypeUtils/#init","title":"init","text":"<p>static void init(Api a, DocletEnvironment e)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#nodefromelement","title":"nodeFromElement","text":"<p>static TypeNode nodeFromElement(TypeElement element)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setenumconstants","title":"setEnumConstants","text":"<p>static void setEnumConstants(EnumNode enumNode, TypeElement e)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#nodefromelement_1","title":"nodeFromElement","text":"<p>static MethodNode nodeFromElement(ExecutableElement element)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#nodefromelement_2","title":"nodeFromElement","text":"<p>static FieldNode nodeFromElement(VariableElement element)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#createtypenode","title":"createTypeNode","text":"<p>static TypeNode createTypeNode(String qualifiedName, String simpleName, PackageNode packageNode, ElementKind elementKind)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#createtext","title":"createText","text":"<p>static Text createText(List&lt;? extends DocTree&gt; dtList)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#createtextsegment","title":"createTextSegment","text":"<p>static Text.Segment createTextSegment(DocTree docTree)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getdoctreetext","title":"getDocTreeText","text":"<p>static String getDocTreeText(DocTree docTree, int start)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getdoctreepart","title":"getDocTreePart","text":"<p>static String getDocTreePart(DocTree docTree, int n)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setdocumentation","title":"setDocumentation","text":"<p>static void setDocumentation(Node node, Element e)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#settypeownership","title":"setTypeOwnership","text":"<p>static void setTypeOwnership(TypeNode typeNode, TypeElement element)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setmethodannotations","title":"setMethodAnnotations","text":"<p>static void setMethodAnnotations(MethodNode method, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setspecifiedby","title":"setSpecifiedBy","text":"<p>static void setSpecifiedBy(MethodNode methodNode, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getoverriddenmethod","title":"getOverriddenMethod","text":"<p>static OverriddenMethodNode getOverriddenMethod(MethodNode method, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getoverriddenmethod_1","title":"getOverriddenMethod","text":"<p>static OverriddenMethodNode getOverriddenMethod(TypeElement superclass, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getoverriddennativemethod","title":"getOverriddenNativeMethod","text":"<p>static OverriddenMethodNode getOverriddenNativeMethod(String qualifiedTypeName, MethodNode method)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#addconstantfieldvaluesreference","title":"addConstantFieldValuesReference","text":"<p>static void addConstantFieldValuesReference(ModuleNode moduleNode)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#isinterface","title":"isInterface","text":"<p>static boolean isInterface(TypeMirror typeMirror)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#findimplementedinterfaces","title":"findImplementedInterfaces","text":"<p>static void findImplementedInterfaces(TypeElement typeElement, List&lt;String&gt; result)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#collectallsupertypes","title":"collectAllSupertypes","text":"<p>static void collectAllSupertypes(TypeMirror t, List&lt;String&gt; result)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getdeprecation","title":"getDeprecation","text":"<p>static DeprecatedTree getDeprecation(DocCommentTree docComment)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getreturntree","title":"getReturnTree","text":"<p>static ReturnTree getReturnTree(DocCommentTree dcTree)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getparamtree","title":"getParamTree","text":"<p>static ParamTree getParamTree(DocCommentTree dcTree, VariableElement parameter)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getreferences","title":"getReferences","text":"<p>static List&lt;Reference&gt; getReferences(DocCommentTree dcTree)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getsince","title":"getSince","text":"<p>static Text getSince(DocCommentTree dcTree)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#geturl","title":"getUrl","text":"<p>static String getUrl(String html)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setmodifiers","title":"setModifiers","text":"<p>static void setModifiers(Node node, Set&lt;Modifier&gt; modifiers)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setdeprecationstatus","title":"setDeprecationStatus","text":"<p>static void setDeprecationStatus(Node node, Element e, DocCommentTree dct)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#isincludedinapi","title":"isIncludedInApi","text":"<p>static boolean isIncludedInApi(Element e)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setmethodparams","title":"setMethodParams","text":"<p>static void setMethodParams(MethodNode methodDoc, ExecutableElement ee)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#setimplementations","title":"setImplementations","text":"<p>static void setImplementations(DirectiveNode directiveNode, List&lt;? extends TypeElement&gt; implementations)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getfieldtype","title":"getFieldType","text":"<p>static TypeNode getFieldType(Elements elementUtils, String className, String fieldName)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getparamtype","title":"getParamType","text":"<p>static TypeNode getParamType(ExecutableElement method, String fieldName)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getpackagename","title":"getPackageName","text":"<p>private static String getPackageName(String qualifiedTypeName)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getenclosingpackageelement","title":"getEnclosingPackageElement","text":"<p>static PackageElement getEnclosingPackageElement(Element element)</p>"},{"location":"markista/javadoc/markista/util/TypeUtils/#getenclosingtypeelement","title":"getEnclosingTypeElement","text":"<p>static TypeElement getEnclosingTypeElement(Element element)</p> <p>Returns the TypeElement of the class the specified element belongs to.</p> <p>Parameters:</p> <p><code>element</code> - A program element such as a field or method</p> <p>Returns:</p> <p>the TypeElement of the class the specified element belongs to.</p>"},{"location":"markista/javadoc/markista/util/Utils/","title":"Utils","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/markista/util/Utils/#class-utils","title":"Class Utils","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.Utils </p>"},{"location":"markista/javadoc/markista/util/Utils/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Utils()"},{"location":"markista/javadoc/markista/util/Utils/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static String removeGenerics(String str) static String removeParentheses(String expression) Removes parentheses and what they contain from an expression static String simplifyNames(String str) Changes all qualified names in a string into unqualified names. private static String simplifyNamesLoop(String input) private static boolean shouldReplaceQualifiedWithSimple(int qualifiedStart, int simpleStart, int i, int length, char c) private static String replaceQualifiedWithSimple(String simplified, int qualifiedStart, int simpleStart, int i) static boolean isValidSimpleNameChar(char c) Checks if the given character is valid in an unqualified name. static boolean isValidQualifiedNameChar(char c) Checks if the given character is valid in a qualified name. static boolean isNullOrEmpty(String s) static String inOneLine(String text)"},{"location":"markista/javadoc/markista/util/Utils/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/markista/util/Utils/#removegenerics","title":"removeGenerics","text":"<p>static String removeGenerics(String str)</p>"},{"location":"markista/javadoc/markista/util/Utils/#removeparentheses","title":"removeParentheses","text":"<p>static String removeParentheses(String expression)</p> <p>Removes parentheses and what they contain from an expression</p> <p>Parameters:</p> <p><code>expression</code> - An expression such as <code>classname.method(parameter)</code>.</p> <p>Returns:</p> <p>The expression with the parentheses removed</p>"},{"location":"markista/javadoc/markista/util/Utils/#simplifynames","title":"simplifyNames","text":"<p>static String simplifyNames(String str)</p> <p>Changes all qualified names in a string into unqualified names.</p> <p>Parameters:</p> <p><code>str</code> - A string that may contain one or more qualified names.</p> <p>Returns:</p> <p>The input string, with all qualified names changed to unqualified names.</p>"},{"location":"markista/javadoc/markista/util/Utils/#simplifynamesloop","title":"simplifyNamesLoop","text":"<p>private static String simplifyNamesLoop(String input)</p>"},{"location":"markista/javadoc/markista/util/Utils/#shouldreplacequalifiedwithsimple","title":"shouldReplaceQualifiedWithSimple","text":"<p>private static boolean shouldReplaceQualifiedWithSimple(int qualifiedStart, int simpleStart, int i, int length, char c)</p>"},{"location":"markista/javadoc/markista/util/Utils/#replacequalifiedwithsimple","title":"replaceQualifiedWithSimple","text":"<p>private static String replaceQualifiedWithSimple(String simplified, int qualifiedStart, int simpleStart, int i)</p>"},{"location":"markista/javadoc/markista/util/Utils/#isvalidsimplenamechar","title":"isValidSimpleNameChar","text":"<p>static boolean isValidSimpleNameChar(char c)</p> <p>Checks if the given character is valid in an unqualified name.</p> <p>Parameters:</p> <p><code>c</code> - The character to check.</p> <p>Returns:</p> <p>Whether or not the character is valid in an unqualified name.</p>"},{"location":"markista/javadoc/markista/util/Utils/#isvalidqualifiednamechar","title":"isValidQualifiedNameChar","text":"<p>static boolean isValidQualifiedNameChar(char c)</p> <p>Checks if the given character is valid in a qualified name.</p> <p>Parameters:</p> <p><code>c</code> - The character to check.</p> <p>Returns:</p> <p>Whether or not the character is valid in a qualified name.</p>"},{"location":"markista/javadoc/markista/util/Utils/#isnullorempty","title":"isNullOrEmpty","text":"<p>static boolean isNullOrEmpty(String s)</p>"},{"location":"markista/javadoc/markista/util/Utils/#inoneline","title":"inOneLine","text":"<p>static String inOneLine(String text)</p>"},{"location":"newsfeed/","title":"Newsfeed - An RSS News Reader for Minecraft","text":""},{"location":"newsfeed/#features","title":"Features","text":"<p>This mod adds a news feed to the game that displays the latest news from a configurable source. The mod is designed to be lightweight and easy to use, with a simple interface that allows you to quickly view the latest news headlines. The default news source is set to the BBC World News RSS feed, but you can change it to any RSS feed you like. </p> <p>When a new article is published to the feed, a notification will appear in the game. You can view the article by pressing the Newsfeed key (default <code>N</code>). The article will be displayed in a GUI that shows the title, description, and a link to the full article. You can also view previous headlines in the GUI.</p> <p> news article being displayed</p> <p> news headline being displayed</p>"},{"location":"newsfeed/#download","title":"Download","text":"<p>Downloads are available for Minecraft versions 1.21.4 to 1.21.7.</p> <p>JAR files are available to download on Modrinth.</p> <p>Source code is available on Github.</p>"},{"location":"newsfeed/#configuration","title":"Configuration","text":"<p>Newsfeed is compatible with mod_menu and can be configured in-game. </p> <p> configuration screen</p> <p>Alternatively, the configuration file is located in the <code>config</code> folder of your Minecraft instance. The file is named <code>newsfeed.json</code>. You can edit this file to change the settings of the mod.</p>"},{"location":"newsfeed/#license","title":"License","text":"<p>This mod is licensed under the MIT License. You are free to use, modify, and distribute this mod as long as you include the original license in your distribution.</p>"}]}
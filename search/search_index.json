{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>I'm Sandy</p> <p>I'm a Software Engineer based in sunny Scotland.</p> <p>Over the past 21 years, I've worked in various areas of software development, including UNIX systems development, data warehousing, data security and IoT.</p> <p>I've worked on and led projects across multipe sectors including immigration and law enforcement in countries like the United Kingdom, United States, and United Arab Emirates.</p>"},{"location":"markista/","title":"Markista","text":"<p>Serving Markdown Flavored Documentation</p>"},{"location":"markista/#introduction","title":"Introduction","text":"<p>Markista is a doclet that turns your Java documentation comments into Markdown, suitable for use with Github, MkDocs, etc. </p> <p>Marklist is under active development and has reached a point where it is becoming useful. There will be features that aren't completely implemented yet.</p> <p>As a demonstration, the Markdown Javadoc for Markista itself is available here. It was produced with the <code>-private</code> parameter which tells Markista to document private members of classes. By default only public and protected members are documented.</p>"},{"location":"markista/#gradle","title":"Gradle","text":"<p>Markista can be used from a Gradle build by following these simple steps:</p>"},{"location":"markista/#step-1-define-a-configuration-for-the-doclet","title":"Step 1: Define a Configuration for the Doclet","text":"<p>Create a configuration in your build.gradle file to manage the Markista dependency.</p> <pre><code>configurations {\n    markista\n}\n</code></pre>"},{"location":"markista/#step-2-add-the-markista-dependency","title":"Step 2: Add the Markista Dependency","text":"<p>Add Markista as a dependency under the configuration you just created. Markista is available in the Maven Central repository.</p> <pre><code>dependencies {\n    markista(\"io.github.sandydunlop:markista:0.1.4\")\n}\n</code></pre>"},{"location":"markista/#step-3-configure-the-javadoc-task","title":"Step 3: Configure the Javadoc Task","text":"<p>In the Javadoc task, specify the doclet path and the doclet class. This tells Gradle where to find the doclet and which one to use.</p> <pre><code>javadoc {\n    options {\n        docletpath = configurations.markista.files.asType(List)\n        doclet = 'io.github.sandydunlop.markista.doclet.MarkdownDoclet'\n        source = null\n        addBooleanOption('flatten', true)\n        addBooleanOption('external', true)\n    }\n}\n</code></pre>"},{"location":"markista/#command-line","title":"Command Line","text":"<p>Markista can be used from the command line with the <code>javadoc</code> command as follows:</p> <pre><code>javadoc -docletpath libs/markista-0.1.4.jar -doclet io.github.sandydunlop.markista.doclet.MarkdownDoclet src/main/java/my.package/Hello.java\n</code></pre>"},{"location":"markista/#parameters","title":"Parameters","text":"<code>-d &lt;directory&gt;</code> The directory to write the Markdown files to. <code>-private</code> Generate docs for private members. By default only public  and abstract members are documented. <code>-external</code> Create links to classes defined outside of the API being     documented (eg. java.utils.String) <code>-flatten</code> Don't create directories that contain no classes <code>-verbose</code> Display progress information"},{"location":"markista/#download","title":"Download","text":"<p>JAR files for version 0.1.4 are available to download here.</p>"},{"location":"markista/#source-code","title":"Source Code","text":"<p>Markista's souce code is available on Github under the GPLv3 license.</p>"},{"location":"markista/javadoc/sandydunlop.markista/","title":"Module sandydunlop.markista","text":"<p>Markista is a tool for generating Markdown documentation from Java source code. It is designed to work with Java 11 and later versions. The module-info.java file defines the module and its exports. It exports the doclet, model, and util packages for use by other modules.</p>"},{"location":"markista/javadoc/sandydunlop.markista/#packages","title":"Packages","text":"Package Description io.github.sandydunlop.markista.doclet This package contains the main doclet classes. io.github.sandydunlop.markista.model The classes used to store structure and docuemntation information in the API tree. io.github.sandydunlop.markista.util This package contains utility methods used by other packages."},{"location":"markista/javadoc/sandydunlop.markista/constant-values/","title":"Constant Field Values","text":"Modifier and Type Constant Field Value String TEXT_CLASS Class String TEXT_DESCRIPTION Description String TEXT_MODIFIER_AND_TYPE Modifier and Type String BR String NBSP String TEXT_PACKAGE Package String TEXT_DESCRIPTION Description String TEXT_MODIFIER_AND_TYPE Modifier and Type boolean OK true boolean FAILED false String DOT_HTML .html String JAVA_24_URL https://docs.oracle.com/en/java/javase/24/docs/api/ String UNUSED_OPTION_DESCRIPTION Unused option"},{"location":"markista/javadoc/sandydunlop.markista/doclet/","title":"Package io.github.sandydunlop.markista.doclet","text":"<p>This package contains the main doclet classes.</p> <p>The Markista doclet has3 main functions:</p> <ul> <li>Collecting API and documentation infomation from the Java compiler</li> <li>Arranging the infomation into an API tree using model.* classes</li> <li>Outputting the documentation from the API tree as Markdown</li> </ul> Classes Class Description MarkdownTable A utility class for creating tables in Markdown documents. Configuration PackageWriter A class that outputs API documentation as Markdown. ModuleWriter MarkdownDoclet A doclet that renders javadoc comments as Markdown ApiScanner A class that scans code and generates an API tree representing code and Javadoc comments."},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/","title":"ApiScanner","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#class-apiscanner","title":"Class ApiScanner","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.AbstractElementVisitor6&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner6&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner7&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner8&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0javax.lang.model.util.ElementScanner9&lt;java.lang.Void,java.lang.Integer&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.ApiScanner </p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Api api private Set&lt;Element&gt; encounteredSupertypes private DocletEnvironment environment private Reporter reporter private ModuleNode unnamedModule private ModuleNode currentModule"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ApiScanner(DocletEnvironment environment, Reporter reporter)"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description Api scan(Set&lt;? extends Element&gt; elements) Void scan(Element e, Integer depth) Void visitModule(ModuleElement e, Integer depth) Void visitPackage(PackageElement ee, Integer depth) Void visitType(TypeElement e, Integer depth) Void visitExecutable(ExecutableElement ee, Integer depth) Void visitVariable(VariableElement ve, Integer depth) Void visitTypeParameter(TypeParameterElement e, Integer depth) Void visitRecordComponent(RecordComponentElement e, Integer depth) private TypeNode nodeFromElement(TypeElement element) private void setEnumConstants(EnumNode enumNode, TypeElement e) private MethodNode nodeFromElement(ExecutableElement element) private FieldNode nodeFromElement(VariableElement element) private TypeNode createTypeNode(String qualifiedName, String simpleName, PackageNode packageNode, ElementKind elementKind) private void setDocumentation(Node node, Element e) private void setTypeOwnership(TypeNode typeNode, TypeElement element) void setMethodAnnotations(MethodNode method, ExecutableElement methodElement) private void setSpecifiedBy(MethodNode methodNode, ExecutableElement methodElement) private OverriddenMethodNode getOverriddenMethod(MethodNode method, ExecutableElement methodElement) private OverriddenMethodNode getOverriddenMethod(TypeElement superclass, ExecutableElement methodElement) private OverriddenMethodNode getOverriddenNativeMethod(String qualifiedTypeName, MethodNode method) private void addConstantFieldValuesReference() boolean isInterface(TypeMirror typeMirror) private void findImplementedInterfaces(TypeElement typeElement, List&lt;String&gt; result) private void collectAllSupertypes(TypeMirror t, List&lt;String&gt; result) private DeprecatedTree getDeprecation(DocCommentTree docComment) private ReturnTree getReturnTree(DocCommentTree dcTree) private ParamTree getParamTree(DocCommentTree dcTree, VariableElement parameter) private List&lt;Reference&gt; getReferences(DocCommentTree dcTree) private Text getSince(DocCommentTree dcTree) private static String getUrl(String html) private void setDeprecationStatus(Node node, Element e, DocCommentTree dct) private boolean isIncludedInApi(Element e) private void setMethodParams(MethodNode methodDoc, ExecutableElement ee) private TypeNode getFieldType(Elements elementUtils, String className, String fieldName) private TypeNode getParamType(ExecutableElement method, String fieldName) private static String getPackageName(String qualifiedTypeName) static PackageElement getEnclosingPackageElement(Element element) static TypeElement getEnclosingTypeElement(Element element) Returns the TypeElement of the class the specified element belongs to."},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#api","title":"api","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#encounteredsupertypes","title":"encounteredSupertypes","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#environment","title":"environment","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#reporter","title":"reporter","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#unnamedmodule","title":"unnamedModule","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#currentmodule","title":"currentModule","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#scan","title":"scan","text":"<p>Api scan(Set&lt;? extends Element&gt; elements)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#scan_1","title":"scan","text":"<p>Void scan(Element e, Integer depth)</p> <p>Overrides:</p> <p>scan from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#visitmodule","title":"visitModule","text":"<p>Void visitModule(ModuleElement e, Integer depth)</p> <p>Overrides:</p> <p>visitModule from ElementScanner9&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#visitpackage","title":"visitPackage","text":"<p>Void visitPackage(PackageElement ee, Integer depth)</p> <p>Overrides:</p> <p>visitPackage from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#visittype","title":"visitType","text":"<p>Void visitType(TypeElement e, Integer depth)</p> <p>Overrides:</p> <p>visitType from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#visitexecutable","title":"visitExecutable","text":"<p>Void visitExecutable(ExecutableElement ee, Integer depth)</p> <p>Overrides:</p> <p>visitExecutable from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#visitvariable","title":"visitVariable","text":"<p>Void visitVariable(VariableElement ve, Integer depth)</p> <p>Overrides:</p> <p>visitVariable from ElementScanner7&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#visittypeparameter","title":"visitTypeParameter","text":"<p>Void visitTypeParameter(TypeParameterElement e, Integer depth)</p> <p>Overrides:</p> <p>visitTypeParameter from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#visitrecordcomponent","title":"visitRecordComponent","text":"<p>Void visitRecordComponent(RecordComponentElement e, Integer depth)</p> <p>Overrides:</p> <p>visitRecordComponent from ElementScanner6&lt;Void, Integer&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#nodefromelement","title":"nodeFromElement","text":"<p>private TypeNode nodeFromElement(TypeElement element)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#setenumconstants","title":"setEnumConstants","text":"<p>private void setEnumConstants(EnumNode enumNode, TypeElement e)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#nodefromelement_1","title":"nodeFromElement","text":"<p>private MethodNode nodeFromElement(ExecutableElement element)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#nodefromelement_2","title":"nodeFromElement","text":"<p>private FieldNode nodeFromElement(VariableElement element)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#createtypenode","title":"createTypeNode","text":"<p>private TypeNode createTypeNode(String qualifiedName, String simpleName, PackageNode packageNode, ElementKind elementKind)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#setdocumentation","title":"setDocumentation","text":"<p>private void setDocumentation(Node node, Element e)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#settypeownership","title":"setTypeOwnership","text":"<p>private void setTypeOwnership(TypeNode typeNode, TypeElement element)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#setmethodannotations","title":"setMethodAnnotations","text":"<p>void setMethodAnnotations(MethodNode method, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#setspecifiedby","title":"setSpecifiedBy","text":"<p>private void setSpecifiedBy(MethodNode methodNode, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getoverriddenmethod","title":"getOverriddenMethod","text":"<p>private OverriddenMethodNode getOverriddenMethod(MethodNode method, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getoverriddenmethod_1","title":"getOverriddenMethod","text":"<p>private OverriddenMethodNode getOverriddenMethod(TypeElement superclass, ExecutableElement methodElement)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getoverriddennativemethod","title":"getOverriddenNativeMethod","text":"<p>private OverriddenMethodNode getOverriddenNativeMethod(String qualifiedTypeName, MethodNode method)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#addconstantfieldvaluesreference","title":"addConstantFieldValuesReference","text":"<p>private void addConstantFieldValuesReference()</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#isinterface","title":"isInterface","text":"<p>boolean isInterface(TypeMirror typeMirror)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#findimplementedinterfaces","title":"findImplementedInterfaces","text":"<p>private void findImplementedInterfaces(TypeElement typeElement, List&lt;String&gt; result)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#collectallsupertypes","title":"collectAllSupertypes","text":"<p>private void collectAllSupertypes(TypeMirror t, List&lt;String&gt; result)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getdeprecation","title":"getDeprecation","text":"<p>private DeprecatedTree getDeprecation(DocCommentTree docComment)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getreturntree","title":"getReturnTree","text":"<p>private ReturnTree getReturnTree(DocCommentTree dcTree)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getparamtree","title":"getParamTree","text":"<p>private ParamTree getParamTree(DocCommentTree dcTree, VariableElement parameter)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getreferences","title":"getReferences","text":"<p>private List&lt;Reference&gt; getReferences(DocCommentTree dcTree)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getsince","title":"getSince","text":"<p>private Text getSince(DocCommentTree dcTree)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#geturl","title":"getUrl","text":"<p>private static String getUrl(String html)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#setdeprecationstatus","title":"setDeprecationStatus","text":"<p>private void setDeprecationStatus(Node node, Element e, DocCommentTree dct)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#isincludedinapi","title":"isIncludedInApi","text":"<p>private boolean isIncludedInApi(Element e)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#setmethodparams","title":"setMethodParams","text":"<p>private void setMethodParams(MethodNode methodDoc, ExecutableElement ee)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getfieldtype","title":"getFieldType","text":"<p>private TypeNode getFieldType(Elements elementUtils, String className, String fieldName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getparamtype","title":"getParamType","text":"<p>private TypeNode getParamType(ExecutableElement method, String fieldName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getpackagename","title":"getPackageName","text":"<p>private static String getPackageName(String qualifiedTypeName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getenclosingpackageelement","title":"getEnclosingPackageElement","text":"<p>static PackageElement getEnclosingPackageElement(Element element)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ApiScanner/#getenclosingtypeelement","title":"getEnclosingTypeElement","text":"<p>static TypeElement getEnclosingTypeElement(Element element)</p> <p>Returns the TypeElement of the class the specified element belongs to.</p> <p>Parameters:</p> <p><code>element</code> - A program element such as a field or method</p> <p>Returns:</p> <p>the TypeElement of the class the specified element belongs to.</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/","title":"Configuration","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#class-configuration","title":"Class Configuration","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.Configuration </p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static String outputDirectory private static boolean documentPrivateMembers private static boolean createExternalLinks private static boolean flattenDirectories private static boolean verbose"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Configuration()"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void setOutputDirectory(String path) static String getOutputDirectory() static void setDocumentPrivateMembers(boolean b) static boolean getDocumentPrivateMembers() static void setCreateExternalLinks(boolean b) static boolean getCreateExternalLinks() static void setFlattenDirectories(boolean b) static boolean getFlattenDirectories() static void setVerbose(boolean b) static boolean getVerbose()"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#outputdirectory","title":"outputDirectory","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#documentprivatemembers","title":"documentPrivateMembers","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#createexternallinks","title":"createExternalLinks","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#flattendirectories","title":"flattenDirectories","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#verbose","title":"verbose","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#setoutputdirectory","title":"setOutputDirectory","text":"<p>static void setOutputDirectory(String path)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#getoutputdirectory","title":"getOutputDirectory","text":"<p>static String getOutputDirectory()</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#setdocumentprivatemembers","title":"setDocumentPrivateMembers","text":"<p>static void setDocumentPrivateMembers(boolean b)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#getdocumentprivatemembers","title":"getDocumentPrivateMembers","text":"<p>static boolean getDocumentPrivateMembers()</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#setcreateexternallinks","title":"setCreateExternalLinks","text":"<p>static void setCreateExternalLinks(boolean b)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#getcreateexternallinks","title":"getCreateExternalLinks","text":"<p>static boolean getCreateExternalLinks()</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#setflattendirectories","title":"setFlattenDirectories","text":"<p>static void setFlattenDirectories(boolean b)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#getflattendirectories","title":"getFlattenDirectories","text":"<p>static boolean getFlattenDirectories()</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#setverbose","title":"setVerbose","text":"<p>static void setVerbose(boolean b)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/Configuration/#getverbose","title":"getVerbose","text":"<p>static boolean getVerbose()</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/","title":"MarkdownDoclet.Option","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#class-markdowndocletoption","title":"Class MarkdownDoclet.Option","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownDoclet.Option  All Implemented Interfaces: Doclet.Option</p> <p>Enclosing Class: MarkdownDoclet</p> <p>Subtypes for specific options should implement the process method to handle instances of the option found on the command line.</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private final String name private final boolean hasArg private final String description private final String parameters"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownDoclet.Option(String name, boolean hasArg, String description, String parameters)"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description int getArgumentCount() String getDescription() Doclet.Option.Kind getKind() List&lt;String&gt; getNames() String getParameters()"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#name","title":"name","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#hasarg","title":"hasArg","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#description","title":"description","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#parameters","title":"parameters","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#getargumentcount","title":"getArgumentCount","text":"<p>int getArgumentCount()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#getdescription","title":"getDescription","text":"<p>String getDescription()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#getkind","title":"getKind","text":"<p>Doclet.Option.Kind getKind()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#getnames","title":"getNames","text":"<p>List&lt;String&gt; getNames()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet.Option/#getparameters","title":"getParameters","text":"<p>String getParameters()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet.Option</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/","title":"MarkdownDoclet","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#class-markdowndoclet","title":"Class MarkdownDoclet","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownDoclet  All Implemented Interfaces: Doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description abstract MarkdownDoclet.Option A base class for declaring options."},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description static final boolean OK private static final boolean FAILED private static final String DOT_HTML private static final String JAVA_24_URL private Reporter reporter private static final String UNUSED_OPTION_DESCRIPTION private final Set&lt;MarkdownDoclet.Option&gt; options"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownDoclet() The default constructor, does nothing."},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void main(String[] args) The starting point of Markista if it is being used withiout the Javadoc command. void init(Locale locale, Reporter reporter) Initializes the doclet. String getName() Set&lt;? extends MarkdownDoclet.Option&gt; getSupportedOptions() SourceVersion getSupportedSourceVersion() boolean run(DocletEnvironment environment) private void addNativeModule(String moduleName)"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#ok","title":"OK","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#failed","title":"FAILED","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#dot_html","title":"DOT_HTML","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#java_24_url","title":"JAVA_24_URL","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#reporter","title":"reporter","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#unused_option_description","title":"UNUSED_OPTION_DESCRIPTION","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#options","title":"options","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#main","title":"main","text":"<p>static void main(String[] args)</p> <p>The starting point of Markista if it is being used withiout the Javadoc command. This is useful for debugging.</p> <p>Parameters:</p> <p><code>args</code> - this parameter is ignored.</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#init","title":"init","text":"<p>void init(Locale locale, Reporter reporter)</p> <p>Initializes the doclet.</p> <p>Parameters:</p> <p><code>locale</code> - The locale used for messages</p> <p><code>reporter</code> - The reporter used for messages</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#getname","title":"getName","text":"<p>String getName()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#getsupportedoptions","title":"getSupportedOptions","text":"<p>Set&lt;? extends MarkdownDoclet.Option&gt; getSupportedOptions()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#getsupportedsourceversion","title":"getSupportedSourceVersion","text":"<p>SourceVersion getSupportedSourceVersion()</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#run","title":"run","text":"<p>boolean run(DocletEnvironment environment)</p> <p>Parameters:</p> <p><code>environment</code> - Represents the operating environment of a single invocation of the doclet.</p> <p>Returns:</p> <p>true if completed without errors, false if errors occurred.</p> <p>Specified By:</p> <p>jdk.javadoc.doclet.Doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownDoclet/#addnativemodule","title":"addNativeModule","text":"<p>private void addNativeModule(String moduleName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable.Column/","title":"MarkdownTable.Column","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable.Column/#class-markdowntablecolumn","title":"Class MarkdownTable.Column","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownTable.Column  Enclosing Class: MarkdownTable</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable.Column/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description String name int width"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable.Column/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownTable.Column(String name) Constructs a new <code>Column</code> object with the specified name."},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable.Column/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable.Column/#name","title":"name","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable.Column/#width","title":"width","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/","title":"MarkdownTable","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#class-markdowntable","title":"Class MarkdownTable","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.MarkdownTable </p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description MarkdownTable.Column A class to represent the name and width of a column within a table"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description List&lt;MarkdownTable.Column&gt; columns List&lt;String[]&gt; rows"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MarkdownTable()"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description MarkdownTable addColumn(String heading) Adds a column with the specified heading to the table MarkdownTable addRow(String[] valueStrings) Adds a row of data to the table void render(Writer writer) Renders the table as Markdown text without any indentation void render(Writer writer, int indent) Renders the table as Markdown text with a given indentation level"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#columns","title":"columns","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#rows","title":"rows","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#addcolumn","title":"addColumn","text":"<p>MarkdownTable addColumn(String heading)</p> <p>Adds a column with the specified heading to the table</p> <p>Parameters:</p> <p><code>heading</code> - String to be used as the column heading</p> <p>Returns:</p> <p>The table</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#addrow","title":"addRow","text":"<p>MarkdownTable addRow(String[] valueStrings)</p> <p>Adds a row of data to the table</p> <p>Parameters:</p> <p><code>valueStrings</code> - one or more strings which represnet the data for this row</p> <p>Returns:</p> <p>The table</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#render","title":"render","text":"<p>void render(Writer writer)</p> <p>Renders the table as Markdown text without any indentation</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/MarkdownTable/#render_1","title":"render","text":"<p>void render(Writer writer, int indent)</p> <p>Renders the table as Markdown text with a given indentation level</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/","title":"ModuleWriter","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#class-modulewriter","title":"Class ModuleWriter","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.ModuleWriter </p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final String TEXT_PACKAGE private static final String TEXT_DESCRIPTION private static final String TEXT_MODIFIER_AND_TYPE private Files fileUtils"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleWriter() Constructor that sets up the locations API documents will be written to."},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void writeDocs(Api api) Output the documentation files for the specified API private void outputModuleDoc(ModuleNode moduleNode) private void outputConstantValues(ModuleNode moduleNode) private String formatPackageLink(PackageMember member)"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#text_package","title":"TEXT_PACKAGE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#text_description","title":"TEXT_DESCRIPTION","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#text_modifier_and_type","title":"TEXT_MODIFIER_AND_TYPE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#fileutils","title":"fileUtils","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#writedocs","title":"writeDocs","text":"<p>void writeDocs(Api api)</p> <p>Output the documentation files for the specified API</p> <p>Parameters:</p> <p><code>api</code> - The API to output the documentation for</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#outputmoduledoc","title":"outputModuleDoc","text":"<p>private void outputModuleDoc(ModuleNode moduleNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#outputconstantvalues","title":"outputConstantValues","text":"<p>private void outputConstantValues(ModuleNode moduleNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/ModuleWriter/#formatpackagelink","title":"formatPackageLink","text":"<p>private String formatPackageLink(PackageMember member)</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/","title":"PackageWriter","text":"<p>Package io.github.sandydunlop.markista.doclet</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#class-packagewriter","title":"Class PackageWriter","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.doclet.PackageWriter </p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final String TEXT_CLASS private static final String TEXT_DESCRIPTION private static final String TEXT_MODIFIER_AND_TYPE private static final String BR private static final String NBSP private String outputDirectory private Writer writer private Files fileUtils"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#constructor-summary","title":"Constructor Summary","text":"Constructor Description PackageWriter(String outputDirectory) Constructor that sets up the locations API documents will be written to."},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void writeDocs(ModuleNode moduleNode) Ouput the documentation files for the specified API private void outputPackageDoc(PackageNode packageNode) private void outputPackageMembers(String title, List&lt;PackageMember&gt; members) private void outputTypeDoc(TypeNode typeNode) private void outputTypeDoc(TypeNode typeNode, String typeKind) private void outputSupertypes(TypeNode typeDoc) private void outputImplementedInterfaces(TypeNode typeDoc) private void outputEnclosingClass(TypeNode typeDoc) private void outputNestedClassSummary(List&lt;PackageMember&gt; nestedClasses) private void outputEnumConstantsSummary(EnumNode enumNode) private void outputFieldSummary(List&lt;FieldNode&gt; fields) private void outputConstructorSummary(List&lt;MethodNode&gt; methods) private void outputMethodSummary(List&lt;MethodNode&gt; methods) Writes the markdown for a class's method summary table private void outputEnumConstantDetails(List&lt;FieldNode&gt; constants, EnumNode enumNode) private void outputDetails(List&lt;Node&gt; nodes) Writes the markdown for a class's method or field details. private void outputReferences(Node node) private void outputMethodDetails(MethodNode method) private void outputMethodParams(MethodNode method) private void outputDeprecation(Deprecation status, Text text) private void outputConstantValues(ModuleNode moduleNode)"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#text_class","title":"TEXT_CLASS","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#text_description","title":"TEXT_DESCRIPTION","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#text_modifier_and_type","title":"TEXT_MODIFIER_AND_TYPE","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#br","title":"BR","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#nbsp","title":"NBSP","text":"<p>See Also:</p> <p>Constant Field Values</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputdirectory","title":"outputDirectory","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#writer","title":"writer","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#fileutils","title":"fileUtils","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#writedocs","title":"writeDocs","text":"<p>void writeDocs(ModuleNode moduleNode)</p> <p>Ouput the documentation files for the specified API</p> <p>Parameters:</p> <p><code>moduleNode</code> - The module containing the packages to output the documentation for</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputpackagedoc","title":"outputPackageDoc","text":"<p>private void outputPackageDoc(PackageNode packageNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputpackagemembers","title":"outputPackageMembers","text":"<p>private void outputPackageMembers(String title, List&lt;PackageMember&gt; members)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputtypedoc","title":"outputTypeDoc","text":"<p>private void outputTypeDoc(TypeNode typeNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputtypedoc_1","title":"outputTypeDoc","text":"<p>private void outputTypeDoc(TypeNode typeNode, String typeKind)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputsupertypes","title":"outputSupertypes","text":"<p>private void outputSupertypes(TypeNode typeDoc)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputimplementedinterfaces","title":"outputImplementedInterfaces","text":"<p>private void outputImplementedInterfaces(TypeNode typeDoc)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputenclosingclass","title":"outputEnclosingClass","text":"<p>private void outputEnclosingClass(TypeNode typeDoc)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputnestedclasssummary","title":"outputNestedClassSummary","text":"<p>private void outputNestedClassSummary(List&lt;PackageMember&gt; nestedClasses)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputenumconstantssummary","title":"outputEnumConstantsSummary","text":"<p>private void outputEnumConstantsSummary(EnumNode enumNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputfieldsummary","title":"outputFieldSummary","text":"<p>private void outputFieldSummary(List&lt;FieldNode&gt; fields)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputconstructorsummary","title":"outputConstructorSummary","text":"<p>private void outputConstructorSummary(List&lt;MethodNode&gt; methods)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputmethodsummary","title":"outputMethodSummary","text":"<p>private void outputMethodSummary(List&lt;MethodNode&gt; methods)</p> <p>Writes the markdown for a class's method summary table</p> <p>Parameters:</p> <p><code>methods</code> - The list of methods to include in the summary table</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputenumconstantdetails","title":"outputEnumConstantDetails","text":"<p>private void outputEnumConstantDetails(List&lt;FieldNode&gt; constants, EnumNode enumNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputdetails","title":"outputDetails","text":"<p>private void outputDetails(List&lt;Node&gt; nodes)</p> <p>Writes the markdown for a class's method or field details.</p> <p>Parameters:</p> <p><code>nodes</code> - The list of methods to write the details of</p> <p>Throws:</p> <p>IOException</p> <p>Since:</p> <p>0.1.0</p> <p>See Also:</p> <p>http://example.com</p> <p>List</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputreferences","title":"outputReferences","text":"<p>private void outputReferences(Node node)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputmethoddetails","title":"outputMethodDetails","text":"<p>private void outputMethodDetails(MethodNode method)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputmethodparams","title":"outputMethodParams","text":"<p>private void outputMethodParams(MethodNode method)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputdeprecation","title":"outputDeprecation","text":"<p>private void outputDeprecation(Deprecation status, Text text)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/doclet/PackageWriter/#outputconstantvalues","title":"outputConstantValues","text":"<p>private void outputConstantValues(ModuleNode moduleNode)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/","title":"Package io.github.sandydunlop.markista.model","text":"<p>The classes used to store structure and docuemntation information in the API tree.</p> ClassesInterfacesEnum Classes Class Description Text ExceptionNode Node ModuleDirectiveNode FieldNode A class to hold infomation about fields within a class, interface, or enum. ModuleNode MethodNode PackageNode ParamNode A class to hold infomation about method parameters. AbstractTypeOwner Reference TypeNode AnnotationNode EnumNode OverriddenMethodNode Api InterfaceNode ClassNode Class Description PackageMember PackageOwner TypeOwner Class Description Deprecation"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/","title":"AbstractTypeOwner","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#class-abstracttypeowner","title":"Class AbstractTypeOwner","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.AbstractTypeOwner  All Implemented Interfaces: TypeOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected List&lt;TypeNode&gt; types"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#constructor-summary","title":"Constructor Summary","text":"Constructor Description AbstractTypeOwner()"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void addType(TypeNode typeNode) List&lt;TypeNode&gt; getTypes() List&lt;PackageMember&gt; getClasses() List&lt;PackageMember&gt; getInterfaces() List&lt;PackageMember&gt; getEnums() List&lt;PackageMember&gt; getAnnotations() void addClass(ClassNode node) void addInterface(InterfaceNode node) void addEnum(EnumNode node) void addException(ExceptionNode node) void addAnnotation(AnnotationNode node) void sort()"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#types","title":"types","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#addtype","title":"addType","text":"<p>void addType(TypeNode typeNode)</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#gettypes","title":"getTypes","text":"<p>List&lt;TypeNode&gt; getTypes()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#getclasses","title":"getClasses","text":"<p>List&lt;PackageMember&gt; getClasses()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#getinterfaces","title":"getInterfaces","text":"<p>List&lt;PackageMember&gt; getInterfaces()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#getenums","title":"getEnums","text":"<p>List&lt;PackageMember&gt; getEnums()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#getannotations","title":"getAnnotations","text":"<p>List&lt;PackageMember&gt; getAnnotations()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.TypeOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#addclass","title":"addClass","text":"<p>void addClass(ClassNode node)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#addinterface","title":"addInterface","text":"<p>void addInterface(InterfaceNode node)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#addenum","title":"addEnum","text":"<p>void addEnum(EnumNode node)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#addexception","title":"addException","text":"<p>void addException(ExceptionNode node)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#addannotation","title":"addAnnotation","text":"<p>void addAnnotation(AnnotationNode node)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AbstractTypeOwner/#sort","title":"sort","text":"<p>void sort()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AnnotationNode/","title":"AnnotationNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AnnotationNode/#class-annotationnode","title":"Class AnnotationNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.AnnotationNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/AnnotationNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description AnnotationNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/","title":"Api","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#class-api","title":"Class Api","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Api </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;ModuleNode&gt; modules private List&lt;PackageNode&gt; packages private ModuleNode unnamedModule"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Api()"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getName() void addModule(ModuleNode node) List&lt;ModuleNode&gt; getModules() ModuleNode getModuleNode(String qualifiedName) ModuleNode getUnnamedModuleNode() void addPackage(PackageNode node) List&lt;PackageNode&gt; getPackages() PackageNode getPackageNode(String qualifiedName) TypeNode getTypeNode(String qualifiedName) TypeNode getTypeNode(TypeElement type) ClassNode getClassNode(TypeElement type) void sort()"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#modules","title":"modules","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#packages","title":"packages","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#unnamedmodule","title":"unnamedModule","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#addmodule","title":"addModule","text":"<p>void addModule(ModuleNode node)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#getmodules","title":"getModules","text":"<p>List&lt;ModuleNode&gt; getModules()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#getmodulenode","title":"getModuleNode","text":"<p>ModuleNode getModuleNode(String qualifiedName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#getunnamedmodulenode","title":"getUnnamedModuleNode","text":"<p>ModuleNode getUnnamedModuleNode()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#addpackage","title":"addPackage","text":"<p>void addPackage(PackageNode node)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#getpackages","title":"getPackages","text":"<p>List&lt;PackageNode&gt; getPackages()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#getpackagenode","title":"getPackageNode","text":"<p>PackageNode getPackageNode(String qualifiedName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#gettypenode","title":"getTypeNode","text":"<p>TypeNode getTypeNode(String qualifiedName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#gettypenode_1","title":"getTypeNode","text":"<p>TypeNode getTypeNode(TypeElement type)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#getclassnode","title":"getClassNode","text":"<p>ClassNode getClassNode(TypeElement type)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Api/#sort","title":"sort","text":"<p>void sort()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ClassNode/","title":"ClassNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ClassNode/#class-classnode","title":"Class ClassNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ClassNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ClassNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ClassNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/","title":"Deprecation","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#enum-deprecation","title":"Enum Deprecation","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Deprecation&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Deprecation </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE FOR_REMOVAL DEPRECATED"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Deprecation()"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Deprecation values() static Deprecation valueOf(String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#none","title":"NONE","text":"<p>public static final Deprecation NONE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#for_removal","title":"FOR_REMOVAL","text":"<p>public static final Deprecation FOR_REMOVAL</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#deprecated","title":"DEPRECATED","text":"<p>public static final Deprecation DEPRECATED</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#values","title":"values","text":"<p>static Deprecation values()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Deprecation/#valueof","title":"valueOf","text":"<p>static Deprecation valueOf(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/","title":"EnumNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#class-enumnode","title":"Class EnumNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.EnumNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;FieldNode&gt; constants"},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description EnumNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void addConstant(FieldNode constant) List&lt;FieldNode&gt; getConstants()"},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#constants","title":"constants","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#addconstant","title":"addConstant","text":"<p>void addConstant(FieldNode constant)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/EnumNode/#getconstants","title":"getConstants","text":"<p>List&lt;FieldNode&gt; getConstants()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ExceptionNode/","title":"ExceptionNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ExceptionNode/#class-exceptionnode","title":"Class ExceptionNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ExceptionNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ExceptionNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ExceptionNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/","title":"FieldNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#class-fieldnode","title":"Class FieldNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.ParamNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.FieldNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Serializable constantValue"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description FieldNode(TypeNode type, String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description Serializable getConstantValue() void setConstantValue(Serializable constantValue) String fullSignature()"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#constantvalue","title":"constantValue","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#getconstantvalue","title":"getConstantValue","text":"<p>Serializable getConstantValue()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#setconstantvalue","title":"setConstantValue","text":"<p>void setConstantValue(Serializable constantValue)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/FieldNode/#fullsignature","title":"fullSignature","text":"<p>String fullSignature()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/InterfaceNode/","title":"InterfaceNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/InterfaceNode/#class-interfacenode","title":"Class InterfaceNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner io.github.sandydunlop.markista.model.TypeNode \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.InterfaceNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/InterfaceNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description InterfaceNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/","title":"MethodNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#class-methodnode","title":"Class MethodNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.MethodNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Text returnDescription private String specifiedBy private TypeNode returnType private OverriddenMethodNode overrides private List&lt;ParamNode&gt; params private List&lt;? extends TypeMirror&gt; thrownTypes private TypeNode owner"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description MethodNode(TypeNode returnType, String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setOverriddenMethod(OverriddenMethodNode overrides) OverriddenMethodNode getOverriddenMethod() void setReturnType(TypeNode returnType) TypeNode getReturnType() void setParams(List&lt;ParamNode&gt; params) List&lt;ParamNode&gt; getParams() void setThrownTypes(List&lt;? extends TypeMirror&gt; thrownTypes) List&lt;? extends TypeMirror&gt; getThrownTypes() void setOwner(TypeNode owner) TypeNode getOwner() void setSpecifiedBy(String interfaceName) String getSpecifiedBy() void setReturnDescription(Text text) Text getReturnDescription() String signature() String fullSignature() String paramsString() void setSimpleName(String name) String getSimpleName() void setQualifiedName(String name) String getQualifiedName()"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#returndescription","title":"returnDescription","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#specifiedby","title":"specifiedBy","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#returntype","title":"returnType","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#overrides","title":"overrides","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#params","title":"params","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#throwntypes","title":"thrownTypes","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#owner","title":"owner","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setoverriddenmethod","title":"setOverriddenMethod","text":"<p>void setOverriddenMethod(OverriddenMethodNode overrides)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getoverriddenmethod","title":"getOverriddenMethod","text":"<p>OverriddenMethodNode getOverriddenMethod()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setreturntype","title":"setReturnType","text":"<p>void setReturnType(TypeNode returnType)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getreturntype","title":"getReturnType","text":"<p>TypeNode getReturnType()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setparams","title":"setParams","text":"<p>void setParams(List&lt;ParamNode&gt; params)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getparams","title":"getParams","text":"<p>List&lt;ParamNode&gt; getParams()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setthrowntypes","title":"setThrownTypes","text":"<p>void setThrownTypes(List&lt;? extends TypeMirror&gt; thrownTypes)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getthrowntypes","title":"getThrownTypes","text":"<p>List&lt;? extends TypeMirror&gt; getThrownTypes()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setowner","title":"setOwner","text":"<p>void setOwner(TypeNode owner)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getowner","title":"getOwner","text":"<p>TypeNode getOwner()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setspecifiedby","title":"setSpecifiedBy","text":"<p>void setSpecifiedBy(String interfaceName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getspecifiedby","title":"getSpecifiedBy","text":"<p>String getSpecifiedBy()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setreturndescription","title":"setReturnDescription","text":"<p>void setReturnDescription(Text text)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getreturndescription","title":"getReturnDescription","text":"<p>Text getReturnDescription()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#signature","title":"signature","text":"<p>String signature()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#fullsignature","title":"fullSignature","text":"<p>String fullSignature()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#paramsstring","title":"paramsString","text":"<p>String paramsString()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setsimplename","title":"setSimpleName","text":"<p>void setSimpleName(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getsimplename","title":"getSimpleName","text":"<p>String getSimpleName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#setqualifiedname","title":"setQualifiedName","text":"<p>void setQualifiedName(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/MethodNode/#getqualifiedname","title":"getQualifiedName","text":"<p>String getQualifiedName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/","title":"ModuleDirectiveNode.Kind","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#enum-moduledirectivenodekind","title":"Enum ModuleDirectiveNode.Kind","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.ModuleDirectiveNode.Kind&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ModuleDirectiveNode.Kind  Enclosing Class: ModuleDirectiveNode</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE REQUIRES EXPORTS OPENS USES PROVIDES"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleDirectiveNode.Kind()"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static ModuleDirectiveNode.Kind values() static ModuleDirectiveNode.Kind valueOf(String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#none","title":"NONE","text":"<p>public static final ModuleDirectiveNode.Kind NONE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#requires","title":"REQUIRES","text":"<p>public static final ModuleDirectiveNode.Kind REQUIRES</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#exports","title":"EXPORTS","text":"<p>public static final ModuleDirectiveNode.Kind EXPORTS</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#opens","title":"OPENS","text":"<p>public static final ModuleDirectiveNode.Kind OPENS</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#uses","title":"USES","text":"<p>public static final ModuleDirectiveNode.Kind USES</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#provides","title":"PROVIDES","text":"<p>public static final ModuleDirectiveNode.Kind PROVIDES</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#values","title":"values","text":"<p>static ModuleDirectiveNode.Kind values()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode.Kind/#valueof","title":"valueOf","text":"<p>static ModuleDirectiveNode.Kind valueOf(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/","title":"ModuleDirectiveNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#class-moduledirectivenode","title":"Class ModuleDirectiveNode","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ModuleDirectiveNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private ModuleDirectiveNode.Kind kind private String name private boolean transitive private List&lt;String&gt; packages"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleDirectiveNode(ModuleDirectiveNode.Kind kind, String name, boolean transitive) ModuleDirectiveNode(ModuleDirectiveNode.Kind kind, String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description ModuleDirectiveNode.Kind getKind() String getName() boolean isTransitive() void addPackage(String packageName) List&lt;String&gt; getPackages()"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#kind","title":"kind","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#name","title":"name","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#transitive","title":"transitive","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#packages","title":"packages","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#getkind","title":"getKind","text":"<p>ModuleDirectiveNode.Kind getKind()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#istransitive","title":"isTransitive","text":"<p>boolean isTransitive()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#addpackage","title":"addPackage","text":"<p>void addPackage(String packageName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleDirectiveNode/#getpackages","title":"getPackages","text":"<p>List&lt;String&gt; getPackages()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/","title":"ModuleNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#class-modulenode","title":"Class ModuleNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ModuleNode  All Implemented Interfaces: PackageOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;ModuleDirectiveNode&gt; directives private List&lt;PackageMember&gt; packages private List&lt;FieldNode&gt; constantValues"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleNode(String moduleName)"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getName() List&lt;PackageMember&gt; getPackages() void addPackage(PackageNode packageNode) void addDirective(ModuleDirectiveNode directive) List&lt;ModuleDirectiveNode&gt; getDirectives() void addConstantValue(FieldNode constant) List&lt;FieldNode&gt; getConstantValues()"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#directives","title":"directives","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#packages","title":"packages","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#constantvalues","title":"constantValues","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#getpackages","title":"getPackages","text":"<p>List&lt;PackageMember&gt; getPackages()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#addpackage","title":"addPackage","text":"<p>void addPackage(PackageNode packageNode)</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#adddirective","title":"addDirective","text":"<p>void addDirective(ModuleDirectiveNode directive)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#getdirectives","title":"getDirectives","text":"<p>List&lt;ModuleDirectiveNode&gt; getDirectives()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#addconstantvalue","title":"addConstantValue","text":"<p>void addConstantValue(FieldNode constant)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ModuleNode/#getconstantvalues","title":"getConstantValues","text":"<p>List&lt;FieldNode&gt; getConstantValues()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/","title":"Node.ModifierSorter","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#class-nodemodifiersorter","title":"Class Node.ModifierSorter","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Node.ModifierSorter  Enclosing Class: Node</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final List&lt;Modifier&gt; ORDER"},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Node.ModifierSorter()"},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static List&lt;Modifier&gt; sortModifiers(Set&lt;Modifier&gt; modifierSet)"},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#order","title":"ORDER","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node.ModifierSorter/#sortmodifiers","title":"sortModifiers","text":"<p>static List&lt;Modifier&gt; sortModifiers(Set&lt;Modifier&gt; modifierSet)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/","title":"Node","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#class-node","title":"Class Node","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Node </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#nested-class-summary","title":"Nested Class Summary","text":"Modifier and Type Class Description Node.ModifierSorter"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description protected String simpleName protected String qualifiedName protected PackageNode packageNode private Set&lt;Modifier&gt; modifiers private Deprecation deprecation private Text deprecationText private Text since protected Text firstSentence private Text body private Text fullBody private List&lt;Reference&gt; references"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Node()"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description Set&lt;Modifier&gt; getModifiers() void setDeprecation(Deprecation deprecation) Deprecation getDeprecation() void setDeprecationText(Text text) Text getDeprecationText() void setSince(Text text) Text getSince() void setFirstSentence(List&lt;? extends DocTree&gt; doc) Text getFirstSentence() void setBody(List&lt;? extends DocTree&gt; doc) Text getBody() void setFullBody(List&lt;? extends DocTree&gt; doc) Text getFullBody() void setReferences(List&lt;Reference&gt; refs) List&lt;Reference&gt; getReferences() String getModifiersString() void sortModifiers()"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#simplename","title":"simpleName","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#qualifiedname","title":"qualifiedName","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#packagenode","title":"packageNode","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#modifiers","title":"modifiers","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#deprecation","title":"deprecation","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#deprecationtext","title":"deprecationText","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#since","title":"since","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#firstsentence","title":"firstSentence","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#body","title":"body","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#fullbody","title":"fullBody","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#references","title":"references","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getmodifiers","title":"getModifiers","text":"<p>Set&lt;Modifier&gt; getModifiers()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#setdeprecation","title":"setDeprecation","text":"<p>void setDeprecation(Deprecation deprecation)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getdeprecation","title":"getDeprecation","text":"<p>Deprecation getDeprecation()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#setdeprecationtext","title":"setDeprecationText","text":"<p>void setDeprecationText(Text text)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getdeprecationtext","title":"getDeprecationText","text":"<p>Text getDeprecationText()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#setsince","title":"setSince","text":"<p>void setSince(Text text)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getsince","title":"getSince","text":"<p>Text getSince()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#setfirstsentence","title":"setFirstSentence","text":"<p>void setFirstSentence(List&lt;? extends DocTree&gt; doc)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getfirstsentence","title":"getFirstSentence","text":"<p>Text getFirstSentence()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#setbody","title":"setBody","text":"<p>void setBody(List&lt;? extends DocTree&gt; doc)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getbody","title":"getBody","text":"<p>Text getBody()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#setfullbody","title":"setFullBody","text":"<p>void setFullBody(List&lt;? extends DocTree&gt; doc)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getfullbody","title":"getFullBody","text":"<p>Text getFullBody()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#setreferences","title":"setReferences","text":"<p>void setReferences(List&lt;Reference&gt; refs)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getreferences","title":"getReferences","text":"<p>List&lt;Reference&gt; getReferences()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#getmodifiersstring","title":"getModifiersString","text":"<p>String getModifiersString()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Node/#sortmodifiers","title":"sortModifiers","text":"<p>void sortModifiers()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/","title":"OverriddenMethodNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#class-overriddenmethodnode","title":"Class OverriddenMethodNode","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.OverriddenMethodNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private String qualifiedClassName private String methodName"},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description OverriddenMethodNode(String qualifiedClassName, String methodName)"},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getClassName() String getMethodName()"},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#qualifiedclassname","title":"qualifiedClassName","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#methodname","title":"methodName","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#getclassname","title":"getClassName","text":"<p>String getClassName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/OverriddenMethodNode/#getmethodname","title":"getMethodName","text":"<p>String getMethodName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageMember/","title":"PackageMember","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageMember/#interface-packagemember","title":"Interface PackageMember","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.PackageMember </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageMember/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract String getName() abstract Text getDescription()"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageMember/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/PackageMember/#getname","title":"getName","text":"<p>abstract String getName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageMember/#getdescription","title":"getDescription","text":"<p>abstract Text getDescription()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/","title":"PackageNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#class-packagenode","title":"Class PackageNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.PackageNode  All Implemented Interfaces: PackageMember, PackageOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private ModuleNode module private List&lt;PackageMember&gt; packages"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description PackageNode(String packageName)"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setModule(ModuleNode module) ModuleNode getModule() List&lt;PackageMember&gt; getPackages() void addPackage(PackageNode packageNode) String getName() Text getDescription()"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#module","title":"module","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#packages","title":"packages","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#setmodule","title":"setModule","text":"<p>void setModule(ModuleNode module)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#getmodule","title":"getModule","text":"<p>ModuleNode getModule()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#getpackages","title":"getPackages","text":"<p>List&lt;PackageMember&gt; getPackages()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#addpackage","title":"addPackage","text":"<p>void addPackage(PackageNode packageNode)</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageOwner</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#getname","title":"getName","text":"<p>String getName()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageNode/#getdescription","title":"getDescription","text":"<p>Text getDescription()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageOwner/","title":"PackageOwner","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageOwner/#interface-packageowner","title":"Interface PackageOwner","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.PackageOwner </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageOwner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract List&lt;PackageMember&gt; getPackages() abstract void addPackage(PackageNode packageNode)"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageOwner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/PackageOwner/#getpackages","title":"getPackages","text":"<p>abstract List&lt;PackageMember&gt; getPackages()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/PackageOwner/#addpackage","title":"addPackage","text":"<p>abstract void addPackage(PackageNode packageNode)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/","title":"ParamNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#class-paramnode","title":"Class ParamNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.ParamNode </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private TypeNode type"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ParamNode(TypeNode type, String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description TypeNode getType() void setType(TypeNode type) void setSimpleName(String name) String getSimpleName() void setQualifiedName(String name) String getQualifiedName()"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#type","title":"type","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#gettype","title":"getType","text":"<p>TypeNode getType()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#settype","title":"setType","text":"<p>void setType(TypeNode type)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#setsimplename","title":"setSimpleName","text":"<p>void setSimpleName(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#getsimplename","title":"getSimpleName","text":"<p>String getSimpleName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#setqualifiedname","title":"setQualifiedName","text":"<p>void setQualifiedName(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/ParamNode/#getqualifiedname","title":"getQualifiedName","text":"<p>String getQualifiedName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/","title":"Reference.Kind","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#enum-referencekind","title":"Enum Reference.Kind","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Reference.Kind&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Reference.Kind  Enclosing Class: Reference</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE PACKAGE TYPE PAGE URL PRIMITIVE VOID"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Reference.Kind()"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Reference.Kind values() static Reference.Kind valueOf(String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#none","title":"NONE","text":"<p>public static final Reference.Kind NONE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#package","title":"PACKAGE","text":"<p>public static final Reference.Kind PACKAGE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#type","title":"TYPE","text":"<p>public static final Reference.Kind TYPE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#page","title":"PAGE","text":"<p>public static final Reference.Kind PAGE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#url","title":"URL","text":"<p>public static final Reference.Kind URL</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#primitive","title":"PRIMITIVE","text":"<p>public static final Reference.Kind PRIMITIVE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#void","title":"VOID","text":"<p>public static final Reference.Kind VOID</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#values","title":"values","text":"<p>static Reference.Kind values()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Kind/#valueof","title":"valueOf","text":"<p>static Reference.Kind valueOf(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/","title":"Reference.Scope","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#enum-referencescope","title":"Enum Reference.Scope","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.Reference.Scope&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Reference.Scope  Enclosing Class: Reference</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE LOCAL NATIVE FOREIGN"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Reference.Scope()"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Reference.Scope values() static Reference.Scope valueOf(String name)"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#none","title":"NONE","text":"<p>public static final Reference.Scope NONE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#local","title":"LOCAL","text":"<p>public static final Reference.Scope LOCAL</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#native","title":"NATIVE","text":"<p>public static final Reference.Scope NATIVE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#foreign","title":"FOREIGN","text":"<p>public static final Reference.Scope FOREIGN</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#values","title":"values","text":"<p>static Reference.Scope values()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference.Scope/#valueof","title":"valueOf","text":"<p>static Reference.Scope valueOf(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/","title":"Reference","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#class-reference","title":"Class Reference","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Reference </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private Reference.Kind kind private Reference.Scope scope private String name private String uri"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Reference() Reference(Reference.Kind kind, String name, String value) Reference(Reference.Scope scope, Reference.Kind kind, String name, String uri)"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setKind(Reference.Kind kind) Reference.Kind getKind() void setScope(Reference.Scope scope) Reference.Scope getScope() void setName(String name) String getName() void setUri(String uri) String getUri()"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#kind","title":"kind","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#scope","title":"scope","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#name","title":"name","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#uri","title":"uri","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#setkind","title":"setKind","text":"<p>void setKind(Reference.Kind kind)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#getkind","title":"getKind","text":"<p>Reference.Kind getKind()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#setscope","title":"setScope","text":"<p>void setScope(Reference.Scope scope)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#getscope","title":"getScope","text":"<p>Reference.Scope getScope()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#setname","title":"setName","text":"<p>void setName(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#getname","title":"getName","text":"<p>String getName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#seturi","title":"setUri","text":"<p>void setUri(String uri)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Reference/#geturi","title":"getUri","text":"<p>String getUri()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/","title":"Text","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#class-text","title":"Class Text","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.Text </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private List&lt;? extends DocTree&gt; text"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Text() Text(List&lt;? extends DocTree&gt; t)"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static Text empty() static Text fromDocTree(List&lt;? extends DocTree&gt; docTree) boolean isEmpty() void set(List&lt;? extends DocTree&gt; t) List&lt;? extends DocTree&gt; getSegments()"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#text","title":"text","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#empty","title":"empty","text":"<p>static Text empty()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#fromdoctree","title":"fromDocTree","text":"<p>static Text fromDocTree(List&lt;? extends DocTree&gt; docTree)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#isempty","title":"isEmpty","text":"<p>boolean isEmpty()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#set","title":"set","text":"<p>void set(List&lt;? extends DocTree&gt; t)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/Text/#getsegments","title":"getSegments","text":"<p>List&lt;? extends DocTree&gt; getSegments()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/","title":"TypeNode.Kind","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#enum-typenodekind","title":"Enum TypeNode.Kind","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0java.lang.Enum&lt;io.github.sandydunlop.markista.model.TypeNode.Kind&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.TypeNode.Kind  Enclosing Class: TypeNode</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#enum-constants","title":"Enum Constants","text":"Enum Constant Description NONE CLASS INTERFACE ENUM ANNOTATION"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private final String name"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#constructor-summary","title":"Constructor Summary","text":"Constructor Description TypeNode.Kind(String s)"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static TypeNode.Kind values() static TypeNode.Kind valueOf(String name) String toString()"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#enum-constant-details","title":"Enum Constant Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#none","title":"NONE","text":"<p>public static final TypeNode.Kind NONE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#class","title":"CLASS","text":"<p>public static final TypeNode.Kind CLASS</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#interface","title":"INTERFACE","text":"<p>public static final TypeNode.Kind INTERFACE</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#enum","title":"ENUM","text":"<p>public static final TypeNode.Kind ENUM</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#annotation","title":"ANNOTATION","text":"<p>public static final TypeNode.Kind ANNOTATION</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#name","title":"name","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#values","title":"values","text":"<p>static TypeNode.Kind values()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#valueof","title":"valueOf","text":"<p>static TypeNode.Kind valueOf(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode.Kind/#tostring","title":"toString","text":"<p>String toString()</p> <p>Overrides:</p> <p>toString from Enum&lt;TypeNode.Kind&gt;</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/","title":"TypeNode","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#class-typenode","title":"Class TypeNode","text":"<p>java.lang.Object io.github.sandydunlop.markista.model.Node io.github.sandydunlop.markista.model.AbstractTypeOwner \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.TypeNode  All Implemented Interfaces: PackageMember</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private TypeOwner owner private List&lt;String&gt; implementedInterfaces private List&lt;String&gt; supertypes private String arrayBrackets private List&lt;MethodNode&gt; constructors private List&lt;MethodNode&gt; methods private List&lt;FieldNode&gt; fields protected TypeNode.Kind kind"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#constructor-summary","title":"Constructor Summary","text":"Constructor Description TypeNode(String qualifiedName, String simpleName, PackageNode packageNode)"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description void setArrayBrackets(String brackets) String getArrayBrackets() void setImplementedInterfaces(List&lt;String&gt; implementedInterfaces) void setSupertypes(List&lt;String&gt; supertypes) List&lt;String&gt; getSupertypes() List&lt;String&gt; getImplementedInterfaces() void setOwner(TypeOwner owner) TypeOwner getOwner() void setSimpleName(String name) String getSimpleName() void setQualifiedName(String name) String getQualifiedName() String getPackageName() PackageNode getPackage() void setKind(TypeNode.Kind kind) TypeNode.Kind getKind() void addMethod(MethodNode method) List&lt;MethodNode&gt; getMethods() void addConstructor(MethodNode constructor) List&lt;MethodNode&gt; getConstructors() void addField(FieldNode field) List&lt;FieldNode&gt; getFields() FieldNode getField(String fieldName) MethodNode getMethod(MethodNode method) MethodNode getConstructor(MethodNode method) String getName() Text getDescription()"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#owner","title":"owner","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#implementedinterfaces","title":"implementedInterfaces","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#supertypes","title":"supertypes","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#arraybrackets","title":"arrayBrackets","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#constructors","title":"constructors","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#methods","title":"methods","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#fields","title":"fields","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#kind","title":"kind","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#setarraybrackets","title":"setArrayBrackets","text":"<p>void setArrayBrackets(String brackets)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getarraybrackets","title":"getArrayBrackets","text":"<p>String getArrayBrackets()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#setimplementedinterfaces","title":"setImplementedInterfaces","text":"<p>void setImplementedInterfaces(List&lt;String&gt; implementedInterfaces)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#setsupertypes","title":"setSupertypes","text":"<p>void setSupertypes(List&lt;String&gt; supertypes)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getsupertypes","title":"getSupertypes","text":"<p>List&lt;String&gt; getSupertypes()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getimplementedinterfaces","title":"getImplementedInterfaces","text":"<p>List&lt;String&gt; getImplementedInterfaces()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#setowner","title":"setOwner","text":"<p>void setOwner(TypeOwner owner)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getowner","title":"getOwner","text":"<p>TypeOwner getOwner()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#setsimplename","title":"setSimpleName","text":"<p>void setSimpleName(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getsimplename","title":"getSimpleName","text":"<p>String getSimpleName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#setqualifiedname","title":"setQualifiedName","text":"<p>void setQualifiedName(String name)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getqualifiedname","title":"getQualifiedName","text":"<p>String getQualifiedName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getpackagename","title":"getPackageName","text":"<p>String getPackageName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getpackage","title":"getPackage","text":"<p>PackageNode getPackage()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#setkind","title":"setKind","text":"<p>void setKind(TypeNode.Kind kind)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getkind","title":"getKind","text":"<p>TypeNode.Kind getKind()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#addmethod","title":"addMethod","text":"<p>void addMethod(MethodNode method)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getmethods","title":"getMethods","text":"<p>List&lt;MethodNode&gt; getMethods()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#addconstructor","title":"addConstructor","text":"<p>void addConstructor(MethodNode constructor)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getconstructors","title":"getConstructors","text":"<p>List&lt;MethodNode&gt; getConstructors()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#addfield","title":"addField","text":"<p>void addField(FieldNode field)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getfields","title":"getFields","text":"<p>List&lt;FieldNode&gt; getFields()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getfield","title":"getField","text":"<p>FieldNode getField(String fieldName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getmethod","title":"getMethod","text":"<p>MethodNode getMethod(MethodNode method)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getconstructor","title":"getConstructor","text":"<p>MethodNode getConstructor(MethodNode method)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getname","title":"getName","text":"<p>String getName()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeNode/#getdescription","title":"getDescription","text":"<p>Text getDescription()</p> <p>Specified By:</p> <p>io.github.sandydunlop.markista.model.PackageMember</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/","title":"TypeOwner","text":"<p>Package io.github.sandydunlop.markista.model</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#interface-typeowner","title":"Interface TypeOwner","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.model.TypeOwner </p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description abstract void addType(TypeNode typeNode) abstract List&lt;TypeNode&gt; getTypes() abstract List&lt;PackageMember&gt; getClasses() abstract List&lt;PackageMember&gt; getInterfaces() abstract List&lt;PackageMember&gt; getEnums() abstract List&lt;PackageMember&gt; getAnnotations() abstract String getName()"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#addtype","title":"addType","text":"<p>abstract void addType(TypeNode typeNode)</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#gettypes","title":"getTypes","text":"<p>abstract List&lt;TypeNode&gt; getTypes()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#getclasses","title":"getClasses","text":"<p>abstract List&lt;PackageMember&gt; getClasses()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#getinterfaces","title":"getInterfaces","text":"<p>abstract List&lt;PackageMember&gt; getInterfaces()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#getenums","title":"getEnums","text":"<p>abstract List&lt;PackageMember&gt; getEnums()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#getannotations","title":"getAnnotations","text":"<p>abstract List&lt;PackageMember&gt; getAnnotations()</p>"},{"location":"markista/javadoc/sandydunlop.markista/model/TypeOwner/#getname","title":"getName","text":"<p>abstract String getName()</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/","title":"Package io.github.sandydunlop.markista.util","text":"<p>This package contains utility methods used by other packages.</p> Classes Class Description Util A set of utility methods for changing between qualified and unqualified names. Files ModuleDirectiveGenerator Markdown LinkResolver This class woks calculates the paths for Markdown documents  to link between different packages and to URLs of external packages and their contents."},{"location":"markista/javadoc/sandydunlop.markista/util/Files/","title":"Files","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#class-files","title":"Class Files","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.Files </p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private String outputDirectory private String squashedDirectories"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Files(ModuleNode moduleNode, String outputDir)"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description String getFlattenedDirectories() void setSquashedDirectories(ModuleNode moduleNode) private int countDots(String str) File buildContainingDirPath(String outputDirectory, String packageName) char pathSeparator() Writer createFile(String className, String packageName) Writer createModuleFile(String moduleName, String fileName)"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#outputdirectory","title":"outputDirectory","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#squasheddirectories","title":"squashedDirectories","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#getflatteneddirectories","title":"getFlattenedDirectories","text":"<p>String getFlattenedDirectories()</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#setsquasheddirectories","title":"setSquashedDirectories","text":"<p>void setSquashedDirectories(ModuleNode moduleNode)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#countdots","title":"countDots","text":"<p>private int countDots(String str)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#buildcontainingdirpath","title":"buildContainingDirPath","text":"<p>File buildContainingDirPath(String outputDirectory, String packageName)</p> <p>Parameters:</p> <p><code>outputDirectory</code> - output path specified by the <code>-d</code> command line parameter</p> <p><code>packageName</code> - the name of the package being documented</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#pathseparator","title":"pathSeparator","text":"<p>char pathSeparator()</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#createfile","title":"createFile","text":"<p>Writer createFile(String className, String packageName)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Files/#createmodulefile","title":"createModuleFile","text":"<p>Writer createModuleFile(String moduleName, String fileName)</p> <p>Throws:</p> <p>IOException</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/","title":"LinkResolver","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#class-linkresolver","title":"Class LinkResolver","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.LinkResolver </p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static final List&lt;String&gt; primatives private static String location private static HashMap&lt;String, String&gt; nativePackageNames private static HashMap&lt;String, String&gt; suffix private static final ModuleLayer moduleLayer private static Api api private static Reporter reporter private static String squashedDirectories"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#constructor-summary","title":"Constructor Summary","text":"Constructor Description LinkResolver()"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void setApi(Api a) static void setSquashedDirectories(String sd) static void setReporter(Reporter r) static void setLocation(String loc) static void addNativeModule(String moduleName, String baseUrl, String s) private static String getPackageName(String id) private static String getClassName(String id) static Reference resolve(String to) static Reference resolve(String from, String to) static String resolveNative(String to) static boolean isQualified(String from, String to) static String qualifyClass(String from, String to) static String qualifyPackage(String from, String to) static String relativize(String to) static String relativize(String from, String to)"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#primatives","title":"primatives","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#location","title":"location","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#nativepackagenames","title":"nativePackageNames","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#suffix","title":"suffix","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#modulelayer","title":"moduleLayer","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#api","title":"api","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#reporter","title":"reporter","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#squasheddirectories","title":"squashedDirectories","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#setapi","title":"setApi","text":"<p>static void setApi(Api a)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#setsquasheddirectories","title":"setSquashedDirectories","text":"<p>static void setSquashedDirectories(String sd)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#setreporter","title":"setReporter","text":"<p>static void setReporter(Reporter r)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#setlocation","title":"setLocation","text":"<p>static void setLocation(String loc)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#addnativemodule","title":"addNativeModule","text":"<p>static void addNativeModule(String moduleName, String baseUrl, String s)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#getpackagename","title":"getPackageName","text":"<p>private static String getPackageName(String id)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#getclassname","title":"getClassName","text":"<p>private static String getClassName(String id)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#resolve","title":"resolve","text":"<p>static Reference resolve(String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#resolve_1","title":"resolve","text":"<p>static Reference resolve(String from, String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#resolvenative","title":"resolveNative","text":"<p>static String resolveNative(String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#isqualified","title":"isQualified","text":"<p>static boolean isQualified(String from, String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#qualifyclass","title":"qualifyClass","text":"<p>static String qualifyClass(String from, String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#qualifypackage","title":"qualifyPackage","text":"<p>static String qualifyPackage(String from, String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#relativize","title":"relativize","text":"<p>static String relativize(String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/LinkResolver/#relativize_1","title":"relativize","text":"<p>static String relativize(String from, String to)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/","title":"Markdown","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#class-markdown","title":"Class Markdown","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.Markdown </p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Markdown()"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static String fullSignature(MethodNode method) static String formatParams(List&lt;ParamNode&gt; params) static String formatReference(Reference ref) static String formatTaggedText(Text text) static String formatTaggedCode(DocTree code) static String formatTaggedLink(DocTree link) static String formatTaggedLinkPlain(DocTree link) static String mdAutoLink(String identifier) static String mdAutoLink(String identifier, boolean simplify) Create a markdown link, automatically deciding what kind of link to make static String linkGenerics(String str, boolean simplifiy) Changes qualified generic type names to unqualified generic type names and adds links to their API documentation. static String splitAndLink(String typesString) static String mdAnchor(String phrase) static String mdAnchorLink(String phrase) static String mdDocumentLink(String docName) static String mdDocumentLink(String phrase, String docName) static String mdFolderLink(String docName) static String mdFolderLink(String phrase, String docName) static String escape(String str)"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#fullsignature","title":"fullSignature","text":"<p>static String fullSignature(MethodNode method)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#formatparams","title":"formatParams","text":"<p>static String formatParams(List&lt;ParamNode&gt; params)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#formatreference","title":"formatReference","text":"<p>static String formatReference(Reference ref)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#formattaggedtext","title":"formatTaggedText","text":"<p>static String formatTaggedText(Text text)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#formattaggedcode","title":"formatTaggedCode","text":"<p>static String formatTaggedCode(DocTree code)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#formattaggedlink","title":"formatTaggedLink","text":"<p>static String formatTaggedLink(DocTree link)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#formattaggedlinkplain","title":"formatTaggedLinkPlain","text":"<p>static String formatTaggedLinkPlain(DocTree link)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mdautolink","title":"mdAutoLink","text":"<p>static String mdAutoLink(String identifier)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mdautolink_1","title":"mdAutoLink","text":"<p>static String mdAutoLink(String identifier, boolean simplify)</p> <p>Create a markdown link, automatically deciding what kind of link to make</p> <p>Parameters:</p> <p><code>identifier</code> - a package, type, or method identifier</p> <p><code>simplify</code> - if true, the fully simplified version of the identifier is shown</p> <p>Returns:</p> <p>markdown text for a link to a document for the specified identifier or an anchor link</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#linkgenerics","title":"linkGenerics","text":"<p>static String linkGenerics(String str, boolean simplifiy)</p> <p>Changes qualified generic type names to unqualified generic type names and adds links to their API documentation.</p> <p>Parameters:</p> <p><code>str</code> - A string containing a qualified generic name.</p> <p>Returns:</p> <p>A string with the qualified names changed to unqualified names and links to types added</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#splitandlink","title":"splitAndLink","text":"<p>static String splitAndLink(String typesString)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mdanchor","title":"mdAnchor","text":"<p>static String mdAnchor(String phrase)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mdanchorlink","title":"mdAnchorLink","text":"<p>static String mdAnchorLink(String phrase)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mddocumentlink","title":"mdDocumentLink","text":"<p>static String mdDocumentLink(String docName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mddocumentlink_1","title":"mdDocumentLink","text":"<p>static String mdDocumentLink(String phrase, String docName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mdfolderlink","title":"mdFolderLink","text":"<p>static String mdFolderLink(String docName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#mdfolderlink_1","title":"mdFolderLink","text":"<p>static String mdFolderLink(String phrase, String docName)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Markdown/#escape","title":"escape","text":"<p>static String escape(String str)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/","title":"ModuleDirectiveGenerator","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#class-moduledirectivegenerator","title":"Class ModuleDirectiveGenerator","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.ModuleDirectiveGenerator </p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#field-summary","title":"Field Summary","text":"Modifier and Type Field Description private static DocletEnvironment environment"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#constructor-summary","title":"Constructor Summary","text":"Constructor Description ModuleDirectiveGenerator()"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static void setEnvironment(DocletEnvironment env) static ModuleDirectiveNode createFrom(ModuleElement.Directive directive) static ModuleDirectiveNode createRequiresDirective(ModuleElement.Directive directive) static ModuleDirectiveNode createExportsDirective(ModuleElement.Directive directive) static ModuleDirectiveNode createOpensDirective(ModuleElement.Directive directive) static ModuleDirectiveNode createUsesDirective(ModuleElement.Directive directive) static ModuleDirectiveNode createProvidesDirective(ModuleElement.Directive directive)"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#field-details","title":"Field Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#environment","title":"environment","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#setenvironment","title":"setEnvironment","text":"<p>static void setEnvironment(DocletEnvironment env)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#createfrom","title":"createFrom","text":"<p>static ModuleDirectiveNode createFrom(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#createrequiresdirective","title":"createRequiresDirective","text":"<p>static ModuleDirectiveNode createRequiresDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#createexportsdirective","title":"createExportsDirective","text":"<p>static ModuleDirectiveNode createExportsDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#createopensdirective","title":"createOpensDirective","text":"<p>static ModuleDirectiveNode createOpensDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#createusesdirective","title":"createUsesDirective","text":"<p>static ModuleDirectiveNode createUsesDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/ModuleDirectiveGenerator/#createprovidesdirective","title":"createProvidesDirective","text":"<p>static ModuleDirectiveNode createProvidesDirective(ModuleElement.Directive directive)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/","title":"Util","text":"<p>Package io.github.sandydunlop.markista.util</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#class-util","title":"Class Util","text":"<p>java.lang.Object \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0io.github.sandydunlop.markista.util.Util </p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#constructor-summary","title":"Constructor Summary","text":"Constructor Description Util()"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#method-summary","title":"Method Summary","text":"Modifier and Type Method Description static String removeGenerics(String str) static String removeParentheses(String expression) Removes parentheses and what they contain from an expression static String simplifyNames(String str) Changes all qualified names in a string into unqualified names. private static String simplifyNamesLoop(String input) private static boolean shouldReplaceQualifiedWithSimple(int qualifiedStart, int simpleStart, int i, int length, char c) private static String replaceQualifiedWithSimple(String simplified, int qualifiedStart, int simpleStart, int i) static boolean isValidSimpleNameChar(char c) Checks if the given character is valid in an unqualified name. static boolean isValidQualifiedNameChar(char c) Checks if the given character is valid in a qualified name. static boolean isNullOrEmpty(String s) static String inOneLine(String text)"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#method-details","title":"Method Details","text":""},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#removegenerics","title":"removeGenerics","text":"<p>static String removeGenerics(String str)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#removeparentheses","title":"removeParentheses","text":"<p>static String removeParentheses(String expression)</p> <p>Removes parentheses and what they contain from an expression</p> <p>Parameters:</p> <p><code>expression</code> - An expression such as <code>classname.method(parameter)</code>.</p> <p>Returns:</p> <p>The expression with the parentheses removed</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#simplifynames","title":"simplifyNames","text":"<p>static String simplifyNames(String str)</p> <p>Changes all qualified names in a string into unqualified names.</p> <p>Parameters:</p> <p><code>str</code> - A string that may contain one or more qualified names.</p> <p>Returns:</p> <p>The input string, with all qualified names changed to unqualified names.</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#simplifynamesloop","title":"simplifyNamesLoop","text":"<p>private static String simplifyNamesLoop(String input)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#shouldreplacequalifiedwithsimple","title":"shouldReplaceQualifiedWithSimple","text":"<p>private static boolean shouldReplaceQualifiedWithSimple(int qualifiedStart, int simpleStart, int i, int length, char c)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#replacequalifiedwithsimple","title":"replaceQualifiedWithSimple","text":"<p>private static String replaceQualifiedWithSimple(String simplified, int qualifiedStart, int simpleStart, int i)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#isvalidsimplenamechar","title":"isValidSimpleNameChar","text":"<p>static boolean isValidSimpleNameChar(char c)</p> <p>Checks if the given character is valid in an unqualified name.</p> <p>Parameters:</p> <p><code>c</code> - The character to check.</p> <p>Returns:</p> <p>Whether or not the character is valid in an unqualified name.</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#isvalidqualifiednamechar","title":"isValidQualifiedNameChar","text":"<p>static boolean isValidQualifiedNameChar(char c)</p> <p>Checks if the given character is valid in a qualified name.</p> <p>Parameters:</p> <p><code>c</code> - The character to check.</p> <p>Returns:</p> <p>Whether or not the character is valid in a qualified name.</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#isnullorempty","title":"isNullOrEmpty","text":"<p>static boolean isNullOrEmpty(String s)</p>"},{"location":"markista/javadoc/sandydunlop.markista/util/Util/#inoneline","title":"inOneLine","text":"<p>static String inOneLine(String text)</p>"},{"location":"newsfeed/","title":"Newsfeed - An RSS News Reader for Minecraft","text":""},{"location":"newsfeed/#features","title":"Features","text":"<p>This mod adds a news feed to the game that displays the latest news from a configurable source. The mod is designed to be lightweight and easy to use, with a simple interface that allows you to quickly view the latest news headlines. The default news source is set to the BBC World News RSS feed, but you can change it to any RSS feed you like. </p> <p>When a new article is published to the feed, a notification will appear in the game. You can view the article by pressing the Newsfeed key (default <code>N</code>). The article will be displayed in a GUI that shows the title, description, and a link to the full article. You can also view previous headlines in the GUI.</p> <p> news article being displayed</p> <p> news headline being displayed</p>"},{"location":"newsfeed/#download","title":"Download","text":"<p>Downloads are available for Minecraft versions 1.21.4 to 1.21.7.</p> <p>JAR files are available to download on Modrinth.</p> <p>Source code is available on Github.</p>"},{"location":"newsfeed/#configuration","title":"Configuration","text":"<p>Newsfeed is compatible with mod_menu and can be configured in-game. </p> <p> configuration screen</p> <p>Alternatively, the configuration file is located in the <code>config</code> folder of your Minecraft instance. The file is named <code>newsfeed.json</code>. You can edit this file to change the settings of the mod.</p>"},{"location":"newsfeed/#license","title":"License","text":"<p>This mod is licensed under the MIT License. You are free to use, modify, and distribute this mod as long as you include the original license in your distribution.</p>"}]}